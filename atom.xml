<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MineClever&#39;s Blog</title>
  
  <subtitle>Some Technical Artist&#39;s Log</subtitle>
  <link href="http://mine-clever.art/atom.xml" rel="self"/>
  
  <link href="http://mine-clever.art/"/>
  <updated>2023-10-28T10:38:50.097Z</updated>
  <id>http://mine-clever.art/</id>
  
  <author>
    <name>Mine Clever</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>修复Windows令人讨厌的系统响应错误</title>
    <link href="http://mine-clever.art/2023/10/28/FixWindowsDcomCompoent/"/>
    <id>http://mine-clever.art/2023/10/28/FixWindowsDcomCompoent/</id>
    <published>2023-10-28T09:40:17.000Z</published>
    <updated>2023-10-28T10:38:50.097Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>修复 授予针对 CLSID 为 {xxxx-….}APPID 为 {xxxx-…} 导致 的Windows操作系统卡顿 </p><p>修复 无法使用VMWare虚拟机</p><p>移除没什么卵用的WindowsDefender</p><span id="more"></span>   <p>由于Windows最近的更新越来越阿三化, 导致Windows总是出现一些奇怪的毛病</p><p>可能是阿三的水平实在有限, 经常破坏DCOM的权限设置, 添加一些无用的系统组件 …</p><p>本章分享如何通过策略组以及ExecTI等工具来干掉这些令人讨厌的错误, 以提升系统响应.</p><h2 id="移除-“自动驾驶”"><a href="#移除-“自动驾驶”" class="headerlink" title="移除 “自动驾驶”"></a>移除 “自动驾驶”</h2><h4 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h4><ul><li><p>事件日中会看到 <strong>Autopilot.dll WIL error was reported</strong></p></li><li><p>此错误由Microsoft Account Sign-in Assistant 服务引发.</p><ul><li>Microsoft Account Sign-in Assistant 服务是登录网络Microsoft网络账户的必要服务.</li></ul></li><li><p>此错误会导致操作系统在一瞬间尝试轻微卡顿.</p><ul><li>重启Microsoft Account Sign-in Assistant 服务后可能在一段时间缓解</li><li>在一段时间后重复出现</li></ul></li><li><p>由于Windows较高版本强制要求用户登录其网络账户</p><ul><li>通过禁用Microsoft Account Sign-in Assistant 无法彻底解决此问题.</li></ul></li></ul><h4 id="修复手段"><a href="#修复手段" class="headerlink" title="修复手段"></a>修复手段</h4><ol><li><p>下载 ExecAsTI 程序, 确保可以以TrustedInstaller权限进行操作</p><ul><li>可以从 <a href="https://github.com/jschicht/RunAsTI">https://github.com/jschicht/RunAsTI</a> 下载</li></ul></li><li><p>以TrustedInstaller权限运行cmd.exe</p></li><li><p>运行 <strong>del &#x2F;f &#x2F;q %windir%\System32\Autopilot.dll</strong></p></li><li><p>问题解决</p></li></ol><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>移除 Autopilot.dll 不会对已经启用的操作系统以及功能造成任何问题.</p><p>此组件仅在 Windows Out of Box Experience (OOBE experience)阶段会使用</p><p>此组件在Windows版本升级后会重新被安装.</p><h2 id="无法使用VMWare虚拟机或者禁用HyperV"><a href="#无法使用VMWare虚拟机或者禁用HyperV" class="headerlink" title="无法使用VMWare虚拟机或者禁用HyperV"></a>无法使用VMWare虚拟机或者禁用HyperV</h2><h4 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h4><ul><li>无法使用VMWare虚拟机<ul><li>或者必须使用侧缓通道</li></ul></li><li>部分游戏的反作弊无法激活导致无法游戏</li><li>部分游戏模拟器无法使用</li><li>错误日志中提示Device Guard 以及Credential Guard相关错误</li><li>虚拟化导致的系统运行效率降低</li></ul><h4 id="修复手段-1"><a href="#修复手段-1" class="headerlink" title="修复手段"></a>修复手段</h4><ol><li>下载微软提供的PowerShell脚本<ul><li>可以从此处下载 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=53337">https://www.microsoft.com/en-us/download/details.aspx?id=53337</a></li><li>搜索 dgreadiness_v3.6 进行下载</li></ul></li><li>解压并找到 DG_Readiness.ps1所在位置</li><li>以管理员权限运行PowerShell</li><li>cd 到 DG_Readiness.ps1 所在文件夹路径</li><li>执行 <strong>.&#x2F;DG_Readiness.ps1 -Disable</strong> </li><li>计算机将会被重启</li><li>重启后按提示按F3</li><li>再次重启后即完全禁用Device Guard 以及Credential Guard<ul><li>由于HyperV依赖于此功能, 所以将会被完全禁用</li></ul></li></ol><h2 id="移除鸡肋-WindowsDefender"><a href="#移除鸡肋-WindowsDefender" class="headerlink" title="移除鸡肋 WindowsDefender"></a>移除鸡肋 WindowsDefender</h2><h4 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h4><ul><li><p>一堆没什么用的功能</p></li><li><p>用户安装杀软后, 更加显得没用</p></li><li><p>没用时占用系统资源</p></li><li><p>后台扫描造成莫名卡顿</p></li></ul><h4 id="修复手段-2"><a href="#修复手段-2" class="headerlink" title="修复手段"></a>修复手段</h4><ol><li>下载 Defender Remover<ul><li>从 <a href="https://github.com/ionuttbara/windows-defender-remover">https://github.com/ionuttbara/windows-defender-remover</a> 下载</li></ul></li><li>管理员权限运行 DefenderRemover.exe</li><li>按下N, 并等待程序执行</li><li>重启计算机</li></ol><h2 id="修复DCOM无法鉴权"><a href="#修复DCOM无法鉴权" class="headerlink" title="修复DCOM无法鉴权"></a>修复DCOM无法鉴权</h2><h4 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h4><ul><li><p>系统事件中出现 授予针对 CLSID 为 {xxxx-….}APPID 为 {xxxx-…}</p></li><li><p>启动某些更新前安装的程序出现间歇性卡顿</p></li><li><p>常见: </p><ul><li><p>授予针对 CLSID 为<br>  {2593F8B9-4EAF-457C-B68A-50F6B8EA6B54}<br>  、APPID 为<br>  {15C20B67-12E7-4BB6-92BB-7AFF07997402}</p><p>  的 COM 服务器应用程序的 本地 激活 权限。此安全权限可以使用组件服务管理工具进行修改。</p></li></ul></li></ul><h4 id="修复手段-3"><a href="#修复手段-3" class="headerlink" title="修复手段"></a>修复手段</h4><p>以 APPID {15C20B67-12E7-4BB6-92BB-7AFF07997402} 为例</p><ul><li><p>以管理员权限启动 gpedit.msc</p></li><li><p>按照顺序寻找 <strong>计算机配置&gt;管理模板&gt;系统&gt;分部署COM&gt;应用程序兼容性设置</strong></p></li><li><p>启用 <strong>激活安全检查例外</strong></p></li><li><p>启用 <strong>定义激活安全检查例外</strong></p></li><li><p>在 <strong>定义激活安全检查例外</strong> 点击 <strong>[显示…]</strong></p>  <img data-src="../img/FixWindowsDcomCompoent/image-20231028182811459.png" alt="image-20231028182811459" style="zoom:50%;" align="left"/></li><li><p>添加 APPID 到对话框, 并设置值为1</p><img data-src="../img/FixWindowsDcomCompoent/image-20231028183001735.png" alt="image-20231028183001735" style="zoom:50%;" align="left"/></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;修复 授予针对 CLSID 为 {xxxx-….}APPID 为 {xxxx-…} 导致 的Windows操作系统卡顿 &lt;/p&gt;
&lt;p&gt;修复 无法使用VMWare虚拟机&lt;/p&gt;
&lt;p&gt;移除没什么卵用的WindowsDefender&lt;/p&gt;</summary>
    
    
    
    <category term="水" scheme="http://mine-clever.art/categories/%E6%B0%B4/"/>
    
    
    <category term="破事水" scheme="http://mine-clever.art/tags/%E7%A0%B4%E4%BA%8B%E6%B0%B4/"/>
    
    <category term="Windows" scheme="http://mine-clever.art/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>CreateQtWinInUnreal</title>
    <link href="http://mine-clever.art/2023/06/03/CreateQtWinInUnreal/"/>
    <id>http://mine-clever.art/2023/06/03/CreateQtWinInUnreal/</id>
    <published>2023-06-03T01:30:29.000Z</published>
    <updated>2023-06-03T01:35:32.220Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><span id="more"></span>   <p>Unreal Engine这几次更新后, 强化了Python(DCC之王)的使用.</p><p>在Editor使用情况下, 用PySide2 写UI远远比原生的SlateUI好用太多…</p><p>但是Unreal创建Qt窗口时, 会导致窗口无法前台, 一闪而过, 使用以下方法,可以快速附加Qt窗口到Unreal.</p><hr><h1 id="Easy-To-Copy"><a href="#Easy-To-Copy" class="headerlink" title="Easy To Copy!"></a>Easy To Copy!</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> unreal</span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> partial</span><br><span class="line"><span class="keyword">from</span> PySide2 <span class="keyword">import</span> QtWidgets</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">QtUiStartHelper</span>():</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, qt_widget</span>):</span><br><span class="line">        <span class="comment"># type: (QtWidgets.QWidget) -&gt; <span class="literal">None</span></span></span><br><span class="line">        unreal_app = QtWidgets.QApplication.instance()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> unreal_app:</span><br><span class="line">            unreal_app = QtWidgets.QApplication([])</span><br><span class="line">            tick_handle = unreal.register_slate_post_tick_callback(self.__QtAppTick__)</span><br><span class="line">            __QtAppQuit__ = partial(unreal.unregister_slate_post_tick_callback, tick_handle)</span><br><span class="line">            unreal_app.aboutToQuit.connect(__QtAppQuit__)</span><br><span class="line"></span><br><span class="line">        QtWidgets.QWidget.show = self.slate_deco(QtWidgets.QWidget.show)</span><br><span class="line">        qt_widget.show()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">slate_deco</span>(<span class="params">func</span>):</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">wrapper</span>(<span class="params">self:QtWidgets.QWidget, single=<span class="literal">True</span>, *args, **kwargs</span>):</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># NOTE : kill QWidget...</span></span><br><span class="line">            <span class="keyword">if</span> single:</span><br><span class="line">                <span class="keyword">for</span> win <span class="keyword">in</span> QtWidgets.QApplication.topLevelWidgets():</span><br><span class="line">                    <span class="keyword">if</span> win <span class="keyword">is</span> self:</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">elif</span> self.__class__.__name__ <span class="keyword">in</span> <span class="built_in">str</span>(<span class="built_in">type</span>(win)):</span><br><span class="line">                        win.deleteLater()</span><br><span class="line">                        win.close()</span><br><span class="line">            <span class="comment"># NOTE : https://forums.unrealengine.com/unreal-engine/unreal-studio/1526501</span></span><br><span class="line">            <span class="comment"># NOTE : attach window to unreal slate</span></span><br><span class="line">            unreal.parent_external_window_to_slate(self.winId())</span><br><span class="line">            <span class="keyword">return</span> func(self, *args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__QtAppTick__</span>(<span class="params">delta_seconds</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">float</span>)-&gt;<span class="literal">None</span></span></span><br><span class="line">        QtWidgets.QApplication.processEvents()</span><br><span class="line">        QtWidgets.QApplication.sendPostedEvents()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;</summary>
    
    
    
    <category term="水" scheme="http://mine-clever.art/categories/%E6%B0%B4/"/>
    
    
    <category term="破事水" scheme="http://mine-clever.art/tags/%E7%A0%B4%E4%BA%8B%E6%B0%B4/"/>
    
  </entry>
  
  <entry>
    <title>Maya中法线转顶点色且可逆</title>
    <link href="http://mine-clever.art/2023/02/26/MayaNormalToColorThenRecovery/"/>
    <id>http://mine-clever.art/2023/02/26/MayaNormalToColorThenRecovery/</id>
    <published>2023-02-26T05:17:04.000Z</published>
    <updated>2023-02-26T05:23:53.074Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>因为项目需要, 编写了一个Maya脚本, 可以 快速 将顶点(切线&#x2F;世界)法线转换为顶点色, 并可逆转换回来.</p><p>基本基于OpenMaya API 1.0编写, 速度非常快.只需要几秒就可以处理100W+三角形</p><span id="more"></span>   <h1 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h1><ul><li>人生苦短</li><li>我用Python</li><li>除非性能不够</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Script by MineClever, help to process high mesh normal on low mesh ~</span></span><br><span class="line"><span class="comment"># Bug report to : https://t.me/minemineSlaver</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> maya.api.OpenMaya <span class="keyword">as</span> api</span><br><span class="line"><span class="keyword">import</span> maya.cmds <span class="keyword">as</span> cmds</span><br><span class="line"><span class="keyword">import</span> six</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MSingleton</span>(<span class="title class_ inherited__">type</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;metaclass for set singleton class&quot;&quot;&quot;</span></span><br><span class="line">    __debug = <span class="literal">True</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, *args, **kwargs</span>):</span><br><span class="line">        self.__instance = <span class="literal">None</span></span><br><span class="line">        <span class="built_in">super</span>(MSingleton,self).__init__(*args, **kwargs)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params">self, *args, **kwargs</span>):</span><br><span class="line">        <span class="keyword">if</span> self.__instance <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">if</span> self.__debug: <span class="built_in">print</span>(<span class="string">u&quot;current class &#123;&#125; create singleton class&quot;</span>.<span class="built_in">format</span>(self.__class__))</span><br><span class="line">            self.__instance = <span class="built_in">super</span>(MSingleton,self).__call__(*args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> self.__instance</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MSelectionHelper</span>(six.with_metaclass(MSingleton,<span class="built_in">object</span>)):</span><br><span class="line">    __debug = <span class="literal">False</span></span><br><span class="line">    tempSelectionList = api.MSelectionList()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getCurMeshSelections</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Return all mesh shape current selected&quot;&quot;&quot;</span></span><br><span class="line">        selList = api.MGlobal.getActiveSelectionList() <span class="comment"># type: api.MSelectionList</span></span><br><span class="line">        shapeList = cls.tempSelectionList</span><br><span class="line">        shapeList.clear()</span><br><span class="line">        numOfSelected = selList.length() <span class="comment"># type: <span class="built_in">int</span></span></span><br><span class="line">        <span class="keyword">if</span> cls.__debug: <span class="built_in">print</span>(<span class="string">&quot;Current selection count : &#123;&#125;&quot;</span>.<span class="built_in">format</span>(numOfSelected))</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> check if empty list</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> (numOfSelected &gt;<span class="number">0</span>) :</span><br><span class="line">            <span class="keyword">return</span> shapeList</span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> add all shape into selection list</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(numOfSelected):</span><br><span class="line">            dagPath = selList.getDagPath(i) <span class="comment"># type: api.MDagPath</span></span><br><span class="line">            <span class="keyword">if</span> (dagPath.numberOfShapesDirectlyBelow() &gt; <span class="number">0</span>): dagPath.extendToShape()</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> check if mesh type</span></span><br><span class="line">            <span class="keyword">if</span> cls.__debug: <span class="built_in">print</span>(<span class="string">&quot;selection[&#123;&#125;]:\&quot;&#123;&#125;\&quot; @ type: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(i, dagPath, dagPath.apiType()))</span><br><span class="line">            <span class="keyword">if</span> (dagPath.apiType() == <span class="number">296</span>) : </span><br><span class="line">                shapeList.add(dagPath)</span><br><span class="line">        <span class="keyword">if</span> cls.__debug:  <span class="built_in">print</span>(<span class="string">u&quot;shape list count: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(shapeList.length()))</span><br><span class="line">        <span class="keyword">return</span> shapeList</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MMProcessorBar</span>(six.with_metaclass(MSingleton,<span class="built_in">object</span>)):</span><br><span class="line">    __debug = <span class="literal">False</span></span><br><span class="line">    </span><br><span class="line">    __processorCount = <span class="number">0</span></span><br><span class="line">    __processorTotalCount = <span class="number">0</span></span><br><span class="line">    __bShowProcessBar = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    vtxUpdateThresholdNum = <span class="number">40960</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setProcessorCountBarTotalNum</span>(<span class="params">cls,inTotalCount</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">int</span>) -&gt; <span class="literal">None</span></span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cls.__bShowProcessBar:</span><br><span class="line">            <span class="keyword">if</span> cls.__debug: <span class="built_in">print</span>(<span class="string">&quot;Is not able to set a processor bar now&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">        cls.__processorTotalCount = inTotalCount</span><br><span class="line">        cmds.progressWindow( </span><br><span class="line">        title=<span class="string">&#x27;Process Vertex Data&#x27;</span>,</span><br><span class="line">        progress=<span class="number">0</span>,</span><br><span class="line">        status=(<span class="string">&quot;Done &#123;0&#125;/&#123;1&#125;\t&quot;</span>.<span class="built_in">format</span>(<span class="number">0</span>, inTotalCount)),</span><br><span class="line">        isInterruptable=<span class="literal">True</span>,</span><br><span class="line">        <span class="built_in">min</span>=<span class="number">0</span>,</span><br><span class="line">        <span class="built_in">max</span>=inTotalCount)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">updateProcessorCountBar</span>(<span class="params">cls,inCurCount</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">int</span>) -&gt; <span class="literal">None</span></span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cls.__bShowProcessBar:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">        cls.__processorCount = inCurCount</span><br><span class="line">        <span class="keyword">if</span> cls.__bShowProcessBar :</span><br><span class="line">            <span class="keyword">if</span> (cmds.progressWindow( query=<span class="literal">True</span>, progress=<span class="literal">True</span> ) &gt;= cls.__processorTotalCount) <span class="keyword">or</span> \</span><br><span class="line">            (cmds.progressWindow( query=<span class="literal">True</span>, isCancelled=<span class="literal">True</span> ) ) :</span><br><span class="line">                cls.endProcessorCountBar()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                cmds.progressWindow( edit=<span class="literal">True</span>, progress=inCurCount, status=(<span class="string">&quot;Done &#123;0&#125;/&#123;1&#125;\t&quot;</span>.<span class="built_in">format</span>(cls.__processorCount, cls.__processorTotalCount)) )</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">endProcessorCountBar</span>(<span class="params">cls</span>):</span><br><span class="line">        cls.__processorCount = <span class="number">0</span></span><br><span class="line">        cls.__bShowProcessBar = <span class="literal">False</span></span><br><span class="line">        cmds.progressWindow(endProgress=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">checkIfUseProcessorCountBar</span>(<span class="params">cls,inTotalCount</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">int</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        cls.endProcessorCountBar()</span><br><span class="line">        cls.__bShowProcessBar = <span class="literal">True</span> <span class="keyword">if</span> inTotalCount &gt; cls.vtxUpdateThresholdNum <span class="keyword">else</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> cls.__bShowProcessBar:</span><br><span class="line">            cls.setProcessorCountBarTotalNum(inTotalCount)</span><br><span class="line">        <span class="keyword">return</span> cls.__bShowProcessBar</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getCurProcessorCountBarStatus</span> (cls):</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        <span class="keyword">return</span> cls.__bShowProcessBar</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getCurProcessorCountBarNum</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">int</span></span></span><br><span class="line">        <span class="keyword">return</span> cls.__processorCount</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MMeshFaceVtxProcessorInterface</span>(six.with_metaclass(MSingleton,<span class="built_in">object</span>)):</span><br><span class="line">    __debug = <span class="literal">False</span></span><br><span class="line">    halfVec = api.MVector(<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">iterMeshFaceVtx</span> (cls, inDagPath, inColorSetName = <span class="string">&quot;FaceVtxNorCol&quot;</span>):</span><br><span class="line">        <span class="comment"># type: (api.MDagPath, <span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MMeshFaceVtxProcessorBase</span>(<span class="title class_ inherited__">MMeshFaceVtxProcessorInterface</span>):</span><br><span class="line">    </span><br><span class="line">    processorBarCls = MMProcessorBar</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">iterMeshFaceVtx</span> (cls, inDagPath, inColorSetName = <span class="string">&quot;FaceVtxNorCol&quot;</span>):</span><br><span class="line">        <span class="comment"># type: (api.MDagPath, <span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        fnMesh = api.MFnMesh(inDagPath)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Init processor bar</span></span><br><span class="line">        cls.processorBarCls.checkIfUseProcessorCountBar(fnMesh.numFaceVertices)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> force set current color set</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cls._processCurColorSet(fnMesh, inColorSetName): <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Traverse all faceVertex in current mesh</span></span><br><span class="line">        meshFaceVertexIt = api.MItMeshFaceVertex(inDagPath)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> cls._iterMeshFaceVtxDataProcess(fnMesh, meshFaceVertexIt)</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_processCurColorSet</span>(<span class="params">cls, fnMesh, inColorSetName</span>):</span><br><span class="line">        <span class="comment"># type: (api.MFnMesh, <span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        <span class="string">&quot;&quot;&quot; check current color set &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_iterMeshFaceVtxDataProcess</span> (cls, fnMesh, meshFaceVertexIt):</span><br><span class="line">        <span class="comment">#type: (api.MFnMesh, api.MItMeshFaceVertex,) -&gt; bool</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Traverse all faceVertex in current mesh&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MMeshFaceVtxProcessorCol2Nor</span>(<span class="title class_ inherited__">MMeshFaceVtxProcessorBase</span>):</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_processCurColorSet</span>(<span class="params">cls, fnMesh, inColorSetName</span>):</span><br><span class="line">        <span class="comment"># type: (api.MFnMesh, <span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        <span class="string">&quot;&quot;&quot; check current color set &quot;&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> check if valid color set to set color</span></span><br><span class="line">        colorSets = fnMesh.getColorSetNames() <span class="comment"># type: <span class="built_in">list</span>[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> inColorSetName <span class="keyword">in</span> colorSets:</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Create new color set</span></span><br><span class="line">            api.MGlobal.displayWarning(<span class="string">u&quot;\&quot;&#123;&#125;\&quot; dont have colorSet \&quot;&#123;&#125;\&quot; to recovery normal&quot;</span>.<span class="built_in">format</span>(fnMesh.dagPath(), inColorSetName))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_iterMeshFaceVtxDataProcess</span> (cls, fnMesh, meshFaceVertexIt):</span><br><span class="line">        <span class="comment">#type: (api.MFnMesh, api.MItMeshFaceVertex,) -&gt; bool</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Traverse all faceVertex in current mesh&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Get Current Color Set name</span></span><br><span class="line">        curColorSetName = fnMesh.currentColorSetName()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Save to temp list</span></span><br><span class="line">        normals = api.MVectorArray()</span><br><span class="line">        faceIds = api.MIntArray()</span><br><span class="line">        vertexIds=api.MIntArray()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Processor bar update data</span></span><br><span class="line">        curIndex = <span class="number">0</span></span><br><span class="line">        nextUpdateNum = cls.processorBarCls.vtxUpdateThresholdNum</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> meshFaceVertexIt.isDone():</span><br><span class="line">            faceVtxCol = meshFaceVertexIt.getColor(curColorSetName) <span class="comment"># type: api.MColor</span></span><br><span class="line">            faceVtxCor2Vec = api.MVector(faceVtxCol[<span class="number">0</span>],faceVtxCol[<span class="number">1</span>],faceVtxCol[<span class="number">2</span>])</span><br><span class="line">            normals.append((faceVtxCor2Vec - cls.halfVec) * <span class="number">2</span>)</span><br><span class="line">            vertexIds.append(meshFaceVertexIt.vertexId())</span><br><span class="line">            faceIds.append(meshFaceVertexIt.faceId())            </span><br><span class="line">            meshFaceVertexIt.<span class="built_in">next</span>()</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> update processor bar</span></span><br><span class="line">            curIndex+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> curIndex &gt;= nextUpdateNum:</span><br><span class="line">                nextUpdateNum += cls.processorBarCls.vtxUpdateThresholdNum</span><br><span class="line">                cls.processorBarCls.updateProcessorCountBar(curIndex)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            fnMesh.setFaceVertexNormals(normals, faceIds, vertexIds)</span><br><span class="line">            normals = faceIds = vertexIds = <span class="literal">None</span></span><br><span class="line">            cls.processorBarCls.endProcessorCountBar() <span class="comment"># <span class="doctag">NOTE:</span> end processor bar</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MMeshFaceVtxProcessorWsNor2Col</span>(<span class="title class_ inherited__">MMeshFaceVtxProcessorBase</span>):</span><br><span class="line">        </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_processCurColorSet</span>(<span class="params">cls,fnMesh, inColorSetName</span>):</span><br><span class="line">        <span class="comment"># type: (api.MFnMesh, <span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        <span class="string">&quot;&quot;&quot; force set current color set &quot;&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> check if valid color set to set color</span></span><br><span class="line">        colorSets = fnMesh.getColorSetNames() <span class="comment"># type: <span class="built_in">list</span>[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> inColorSetName <span class="keyword">in</span> colorSets:</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Create new color set</span></span><br><span class="line">            fnMesh.createColorSet(inColorSetName, <span class="literal">True</span>)</span><br><span class="line">        fnMesh.setCurrentColorSetName(inColorSetName)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_iterMeshFaceVtxDataProcess</span> (cls, fnMesh, meshFaceVertexIt):</span><br><span class="line">        <span class="comment">#type: (api.MFnMesh, api.MItMeshFaceVertex,) -&gt; bool</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Traverse all faceVertex in current mesh&quot;&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># -- <span class="doctag">NOTE:</span> Save to temp list</span></span><br><span class="line">        colors = api.MColorArray()</span><br><span class="line">        faceIds = api.MIntArray()</span><br><span class="line">        vertexIds=api.MIntArray()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Processor bar update data</span></span><br><span class="line">        curIndex = <span class="number">0</span></span><br><span class="line">        nextUpdateNum = cls.processorBarCls.vtxUpdateThresholdNum</span><br><span class="line">        modifier = api.MDGModifier()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> meshFaceVertexIt.isDone():</span><br><span class="line">            norVec = meshFaceVertexIt.getNormal() <span class="comment"># type: api.MVector</span></span><br><span class="line">            colors.append(norVec * <span class="number">0.5</span> + cls.halfVec)</span><br><span class="line">            vertexIds.append(meshFaceVertexIt.vertexId())</span><br><span class="line">            faceIds.append(meshFaceVertexIt.faceId())</span><br><span class="line">            meshFaceVertexIt.<span class="built_in">next</span>()</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> update processor bar</span></span><br><span class="line">            curIndex+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> curIndex &gt;= nextUpdateNum:</span><br><span class="line">                nextUpdateNum += cls.processorBarCls.vtxUpdateThresholdNum</span><br><span class="line">                cls.processorBarCls.updateProcessorCountBar(curIndex)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            fnMesh.setFaceVertexColors(colors, faceIds, vertexIds, modifier=modifier)</span><br><span class="line">            modifier.doIt()</span><br><span class="line">            colors = faceIds = vertexIds = <span class="literal">None</span></span><br><span class="line">            cls.processorBarCls.endProcessorCountBar() <span class="comment"># <span class="doctag">NOTE:</span> end processor bar</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MMeshFaceVtxProcessorTanNor2Col</span>(<span class="title class_ inherited__">MMeshFaceVtxProcessorInterface</span>):</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">iterMeshFaceVtx</span> (cls, inDagPath, inColorSetName = <span class="string">&quot;FaceVtxNorCol&quot;</span>):</span><br><span class="line">        <span class="comment"># type: (api.MDagPath, <span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        modifier = api.MDGModifier()</span><br><span class="line">        fnMesh = api.MFnMesh(inDagPath)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> check if valid color set to set color</span></span><br><span class="line">        colorSets = fnMesh.getColorSetNames() <span class="comment"># type: <span class="built_in">list</span>[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> inColorSetName <span class="keyword">in</span> colorSets:</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Create new color set</span></span><br><span class="line">            fnMesh.createColorSet(inColorSetName, <span class="literal">True</span>)</span><br><span class="line">        fnMesh.setCurrentColorSetName(inColorSetName)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Get current uvSet name</span></span><br><span class="line">        curUvSet = fnMesh.currentUVSetName() <span class="comment"># type: <span class="built_in">str</span></span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Traverse all faceVertex in current mesh</span></span><br><span class="line">        meshFaceVertexIt = api.MItMeshFaceVertex(inDagPath)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- <span class="doctag">NOTE:</span> Save to temp list</span></span><br><span class="line">        colors = api.MColorArray()</span><br><span class="line">        faceIds = api.MIntArray()</span><br><span class="line">        vertexIds=api.MIntArray()</span><br><span class="line">        zeroArray = (<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> meshFaceVertexIt.isDone():</span><br><span class="line">            norVec = meshFaceVertexIt.getNormal() <span class="comment"># type: api.MVector</span></span><br><span class="line">            binorVec = meshFaceVertexIt.getBinormal(uvSet=curUvSet)  <span class="comment"># type: api.MVector</span></span><br><span class="line">            tanVec = meshFaceVertexIt.getTangent(uvSet=curUvSet)  <span class="comment"># type: api.MVector</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> build TBN Matrix</span></span><br><span class="line">            tbnMatrix = api.MMatrix([vec[i] <span class="keyword">if</span> i &lt; <span class="number">3</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">for</span> vec <span class="keyword">in</span> (tanVec, binorVec, norVec, zeroArray) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)])</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> pre-multiply TBN matrix. same as post-multiply transposed TBN matrix</span></span><br><span class="line">            tanNorVec =  tbnMatrix * norVec  <span class="comment"># type: api.MVector</span></span><br><span class="line">            colors.append(tanNorVec * <span class="number">0.5</span> + cls.halfVec)</span><br><span class="line">            vertexIds.append(meshFaceVertexIt.vertexId())</span><br><span class="line">            faceIds.append(meshFaceVertexIt.faceId())</span><br><span class="line">            meshFaceVertexIt.<span class="built_in">next</span>()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            fnMesh.setFaceVertexColors(colors, faceIds, vertexIds, modifier=modifier)</span><br><span class="line">            modifier.doIt()</span><br><span class="line">            colors = faceIds = vertexIds = <span class="literal">None</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MMeshFaceVtxProcessorTanOffsetNor2Col</span>(<span class="title class_ inherited__">MMeshFaceVtxProcessorInterface</span>):</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">iterMeshFaceVtx</span> (cls, inDagPath, inColorSetName = <span class="string">&quot;FaceVtxNorCol&quot;</span>):</span><br><span class="line">        <span class="comment"># type: (api.MDagPath, <span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        modifier = api.MDGModifier()</span><br><span class="line">        fnMesh = api.MFnMesh(inDagPath)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> check if valid color set to set color</span></span><br><span class="line">        colorSets = fnMesh.getColorSetNames() <span class="comment"># type: <span class="built_in">list</span>[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> inColorSetName <span class="keyword">in</span> colorSets:</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Create new color set</span></span><br><span class="line">            fnMesh.createColorSet(inColorSetName, <span class="literal">True</span>)</span><br><span class="line">        fnMesh.setCurrentColorSetName(inColorSetName)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Get current uvSet name</span></span><br><span class="line">        curUvSet = fnMesh.currentUVSetName() <span class="comment"># type: <span class="built_in">str</span></span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Traverse all faceVertex in current mesh</span></span><br><span class="line">        meshFaceVertexIt = api.MItMeshFaceVertex(inDagPath)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- <span class="doctag">NOTE:</span> Save to temp list</span></span><br><span class="line">        colors = api.MColorArray()</span><br><span class="line">        faceIds = api.MIntArray()</span><br><span class="line">        vertexIds=api.MIntArray()</span><br><span class="line">        zeroArray = (<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">        refColorSetName= inColorSetName</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> meshFaceVertexIt.isDone():</span><br><span class="line">            faceVtxCol = meshFaceVertexIt.getColor(refColorSetName) <span class="comment"># type: api.MColor</span></span><br><span class="line">            faceVtxCor2Vec = api.MVector(faceVtxCol[<span class="number">0</span>],faceVtxCol[<span class="number">1</span>],faceVtxCol[<span class="number">2</span>])</span><br><span class="line">            decodedNorVec = (faceVtxCor2Vec - cls.halfVec) * <span class="number">2</span> <span class="comment"># type: api.MVector</span></span><br><span class="line">            </span><br><span class="line">            norVec = meshFaceVertexIt.getNormal() <span class="comment"># type: api.MVector</span></span><br><span class="line">            binorVec = meshFaceVertexIt.getBinormal(uvSet=curUvSet)  <span class="comment"># type: api.MVector</span></span><br><span class="line">            tanVec = meshFaceVertexIt.getTangent(uvSet=curUvSet)  <span class="comment"># type: api.MVector</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> build TBN Matrix</span></span><br><span class="line">            tbnMatrix = api.MMatrix([vec[i] <span class="keyword">if</span> i &lt; <span class="number">3</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">for</span> vec <span class="keyword">in</span> (tanVec, binorVec, norVec, zeroArray) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)])</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> pre-multiply TBN matrix. same as post-multiply transposed TBN matrix</span></span><br><span class="line">            tanNorVec =  tbnMatrix * decodedNorVec  <span class="comment"># type: api.MVector</span></span><br><span class="line">            colors.append(tanNorVec * <span class="number">0.5</span> + cls.halfVec)</span><br><span class="line">            vertexIds.append(meshFaceVertexIt.vertexId())</span><br><span class="line">            faceIds.append(meshFaceVertexIt.faceId())</span><br><span class="line">            meshFaceVertexIt.<span class="built_in">next</span>()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            fnMesh.setFaceVertexColors(colors, faceIds, vertexIds, modifier=modifier)</span><br><span class="line">            modifier.doIt()</span><br><span class="line">            colors = faceIds = vertexIds = <span class="literal">None</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MVtxNorColConverter</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">    __debug = <span class="literal">True</span></span><br><span class="line">    __convertClass = MMeshFaceVtxProcessorInterface</span><br><span class="line">    __validConvertClass = <span class="literal">False</span></span><br><span class="line">    __colorSetName = <span class="string">&quot;FaceVtxNorCol&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setConvertClass</span> (cls, inConvertClass):</span><br><span class="line">        <span class="comment"># type: (MMeshFaceVtxProcessorInterface) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> MMeshFaceVtxProcessorInterface.__subclasscheck__(inConvertClass):</span><br><span class="line">            cls.__convertClass = inConvertClass</span><br><span class="line">            cls.__validConvertClass = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&quot;Not valid convert class&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setColorSetName</span> (cls, colSetName):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(colSetName,<span class="built_in">str</span>):</span><br><span class="line">            cls.__colorSetName = colSetName</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getColorSetName</span> (cls):</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">str</span></span></span><br><span class="line">        <span class="keyword">return</span> cls.__colorSetName</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getCurConvertClassName</span> (cls):</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">str</span></span></span><br><span class="line">        <span class="keyword">return</span> cls.__convertClass.__name__</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_convertSelMesh</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        curMeshList = MSelectionHelper.getCurMeshSelections()</span><br><span class="line">        <span class="keyword">if</span> curMeshList.isEmpty(): </span><br><span class="line">            api.MGlobal.displayWarning(<span class="string">u&quot;No mesh has been selected?&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        </span><br><span class="line">        curMeshListIt = api.MItSelectionList(curMeshList)</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> (curMeshListIt.isDone()):</span><br><span class="line">            curMeshDagPath= curMeshListIt.getDagPath() <span class="comment"># type: api.MDagPath</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> cls.iterMeshFaceVtx(curMeshDagPath): <span class="built_in">print</span>(<span class="string">u&quot;process mesh \&quot;&#123;&#125;\&quot; fail&quot;</span>.<span class="built_in">format</span>(curMeshDagPath))</span><br><span class="line">            <span class="keyword">if</span> cmds.progressWindow( query=<span class="literal">True</span>, isCancelled=<span class="literal">True</span> ):</span><br><span class="line">                api.MGlobal.displayWarning(<span class="string">&quot;Processor end by user!&quot;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            curMeshListIt.<span class="built_in">next</span>()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">convertSelMesh</span> (cls):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            cls._convertSelMesh()</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> E:</span><br><span class="line">            api.MGlobal.displayError(<span class="built_in">str</span>(E))</span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Force end process window</span></span><br><span class="line">            cmds.progressWindow(endProgress=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">iterMeshFaceVtx</span> (cls, inDagPath):</span><br><span class="line">        <span class="comment"># type: (api.MDagPath) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cls.__validConvertClass :</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&quot;Not set a valid convert class&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> cls.__convertClass.iterMeshFaceVtx(inDagPath, cls.__colorSetName)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">runScript_nor2col</span>(<span class="params">*args, **kw</span>):</span><br><span class="line">    MVtxNorColConverter.setConvertClass(MMeshFaceVtxProcessorWsNor2Col)</span><br><span class="line">    MVtxNorColConverter.convertSelMesh()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">runScript_tanNor2tanCol</span>(<span class="params">*args, **kw</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Generate Tangent space Normal, test only!&quot;&quot;&quot;</span></span><br><span class="line">    MVtxNorColConverter.setConvertClass(MMeshFaceVtxProcessorTanOffsetNor2Col)</span><br><span class="line">    MVtxNorColConverter.convertSelMesh()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">runScript_col2nor</span>(<span class="params">*args, **kw</span>):</span><br><span class="line">    MVtxNorColConverter.setConvertClass(MMeshFaceVtxProcessorCol2Nor)</span><br><span class="line">    MVtxNorColConverter.convertSelMesh()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    runScript_nor2col()</span><br></pre></td></tr></table></figure><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><ul><li>理论上还是够快的</li><li>如果用C++ 重写, 应该可以考虑上多线程, 分割处理所有顶点面, 应当可以处理上亿三角形</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;因为项目需要, 编写了一个Maya脚本, 可以 快速 将顶点(切线&amp;#x2F;世界)法线转换为顶点色, 并可逆转换回来.&lt;/p&gt;
&lt;p&gt;基本基于OpenMaya API 1.0编写, 速度非常快.只需要几秒就可以处理100W+三角形&lt;/p&gt;</summary>
    
    
    
    <category term="水" scheme="http://mine-clever.art/categories/%E6%B0%B4/"/>
    
    
    <category term="破事水" scheme="http://mine-clever.art/tags/%E7%A0%B4%E4%BA%8B%E6%B0%B4/"/>
    
  </entry>
  
  <entry>
    <title>Unreal 模型材质绑定传递工具</title>
    <link href="http://mine-clever.art/2023/02/21/UnrealMatSlotCopyTool/"/>
    <id>http://mine-clever.art/2023/02/21/UnrealMatSlotCopyTool/</id>
    <published>2023-02-21T01:51:48.000Z</published>
    <updated>2023-02-23T12:00:55.568Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>模型美术的小伙伴 , 某日跑过来表示, 每次临时, 替换或者更新, 一个新的模型资产时</p><p>都需要手动把之前指过的材质再指一次, 非常麻烦, 特别是有50+材质的超级复杂模型, 简直想要自杀.</p><p>于是有了这个小脚本~</p><span id="more"></span>   <h1 id="Python-实现代码"><a href="#Python-实现代码" class="headerlink" title="Python 实现代码"></a>Python 实现代码</h1><ul><li>人生苦短!</li><li>CV大法好 !!</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># This Script was designed to copy material which have same slotName with different meshes asset object in Unreal Engine</span></span><br><span class="line"><span class="comment"># script by MineClever @ 2023</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> unreal <span class="keyword">as</span> unreal</span><br><span class="line"><span class="keyword">import</span> os <span class="keyword">as</span> os</span><br><span class="line"><span class="keyword">import</span> copy <span class="keyword">as</span> copy</span><br><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UnrealAssetSrcCtrl</span>():</span><br><span class="line">    <span class="string">u&quot;&quot;&quot;用于简单处理版本控制, 大规模检入检出时不应当使用此类型&quot;&quot;&quot;</span></span><br><span class="line">    _provider = unreal.SourceControl.current_provider()</span><br><span class="line">    _projectContentPath = unreal.Paths.project_content_dir()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, assetPath</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>) -&gt; <span class="literal">None</span></span></span><br><span class="line">        self.currentFile = self.ConvertPackagePathToFilePath(assetPath)</span><br><span class="line">        self.currentProvider = self._provider</span><br><span class="line">        self.currentFileState = unreal.SourceControl.query_file_state(self.currentFile)</span><br><span class="line">        <span class="comment"># self.currentFileState = unreal.SourceControlState(self.currentFile)</span></span><br><span class="line">        self.hasFileCheckOut = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ConvertPackagePathToFilePath</span> (inPackagePath) :</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>) -&gt; <span class="built_in">str</span></span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Convert &#x27;/Game/StarterContent/SomeName.SomeName&#x27; to &#x27;Drive:/Project/Content/StarterContent/SomeName.uasset&#x27;&quot;&quot;&quot;</span></span><br><span class="line">        standardPath =  unreal.Paths.make_standard_filename(inPackagePath)</span><br><span class="line">        uAssetPath = os.path.join( *unreal.Paths.split(standardPath)[<span class="number">0</span>:<span class="number">2</span>] ) + <span class="string">&quot;.uasset&quot;</span></span><br><span class="line">        fileSysPath = os.path.join(__class__._projectContentPath,uAssetPath.replace(<span class="string">&quot;/Game/&quot;</span>,<span class="string">&quot;&quot;</span>)).replace(<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;/&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> fileSysPath</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">UpdateFile</span>(<span class="params">self</span>):</span><br><span class="line">        currentFileState = self.currentFileState</span><br><span class="line">        <span class="keyword">if</span> (currentFileState.is_valid <span class="keyword">and</span> currentFileState.is_source_controlled):</span><br><span class="line">            bRevert = unreal.SourceControl.revert_file(self.currentFile,<span class="literal">True</span>)</span><br><span class="line">            bSync = unreal.SourceControl.sync_file(self.currentFile, <span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> (bRevert <span class="keyword">or</span> bSync)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">CheckOutFile</span>(<span class="params">self</span>):</span><br><span class="line">        currentFileState = self.currentFileState</span><br><span class="line">        self.hasFileCheckOut = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> (currentFileState.is_valid <span class="keyword">and</span> currentFileState.is_source_controlled):</span><br><span class="line">            <span class="keyword">if</span> (currentFileState.is_checked_out_other):</span><br><span class="line">                unreal.log_warning(<span class="string">u&quot;当前文件&#123;&#125;已经被其他人检出(锁定)&quot;</span>.<span class="built_in">format</span>(self.currentFile))</span><br><span class="line">            <span class="keyword">elif</span> (<span class="keyword">not</span> currentFileState.is_current):</span><br><span class="line">                unreal.log_warning(<span class="string">u&quot;当前文件&#123;&#125;版本与服务器版本不匹配,尝试更新...&quot;</span>.<span class="built_in">format</span>(self.currentFile))</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> self.UpdateFile():</span><br><span class="line">                    unreal.log_error(<span class="string">u&quot;当前文件&#123;&#125;无法同步, 请手动操作&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                unreal.SourceControl.check_out_file(self.currentFile, <span class="literal">True</span>)</span><br><span class="line">                self.hasFileCheckOut = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            unreal.log_warning(<span class="string">u&quot;当前文件&#123;&#125;未找到版本控制状态&quot;</span>.<span class="built_in">format</span>(self.currentFile))</span><br><span class="line">            self.hasFileCheckOut = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BaseAssetHelper</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    _assetEditorSubsystem = unreal.AssetEditorSubsystem()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetSelectedAssets</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">list</span>[unreal.Object]</span></span><br><span class="line">        <span class="keyword">return</span> unreal.EditorUtilityLibrary.get_selected_assets()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">CloseEditorForAssetPath</span>(<span class="params">cls, assetName</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>) -&gt; <span class="literal">None</span></span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            assetObject = unreal.find_asset(assetName)</span><br><span class="line">            cls._assetEditorSubsystem.close_all_editors_for_asset(assetObject)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> E:</span><br><span class="line">            unreal.log_error(<span class="string">&quot;Can not close asset: &#123;&#125;;\nErr: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(assetName, E))</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">CloseEditorForAssetObject</span>(<span class="params">cls, assetObject</span>):</span><br><span class="line">        <span class="comment"># type: (unreal.Object) -&gt; <span class="literal">None</span></span></span><br><span class="line">        cls._assetEditorSubsystem.close_all_editors_for_asset(assetObject)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MeshAssetSelectionHelper</span>(<span class="title class_ inherited__">BaseAssetHelper</span>):</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetMeshSelections</span>(<span class="params">cls</span>):</span><br><span class="line">        allSelectedAssets = cls.GetSelectedAssets()</span><br><span class="line">        validAsset = <span class="built_in">list</span>()  <span class="comment"># type: <span class="built_in">list</span>[unreal.StreamableRenderAsset]</span></span><br><span class="line">        <span class="keyword">for</span> curAsset <span class="keyword">in</span> allSelectedAssets:</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isinstance</span>(curAsset, (unreal.StaticMesh, unreal.SkeletalMesh))):</span><br><span class="line">                validAsset.append(curAsset)</span><br><span class="line">        <span class="keyword">return</span> validAsset</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MeshMaterialHelper</span> ():</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetMeshMaterials</span>(<span class="params">cls, pMesh</span>):</span><br><span class="line">        <span class="comment"># type: (unreal.StreamableRenderAsset) -&gt; unreal.Array[unreal.SkeletalMaterial] |unreal.Array[unreal.StaticMaterial] | <span class="literal">None</span></span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(pMesh, unreal.StaticMesh):</span><br><span class="line">            targetMaterials = pMesh.static_materials</span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">isinstance</span>(pMesh, unreal.SkeletalMesh):</span><br><span class="line">            targetMaterials = pMesh.materials</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> targetMaterials</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MeshAssetMaterialCopyTool</span> (<span class="title class_ inherited__">MeshMaterialHelper</span>):</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">CopyMaterialSlotA</span>(<span class="params">cls, pSource, pTarget</span>):</span><br><span class="line">        <span class="comment"># type: (unreal.StreamableRenderAsset, unreal.StreamableRenderAsset) -&gt; <span class="built_in">bool</span></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> get source material interfaces</span></span><br><span class="line">        sourceMaterials = cls.GetMeshMaterials(pSource)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> sourceMaterials:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> get target materials</span></span><br><span class="line">        targetMaterials = cls.GetMeshMaterials(pSource)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> targetMaterials:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        targetMatLength = targetMaterials.__len__()</span><br><span class="line"></span><br><span class="line">        raiseMeshTypeException: collections.<span class="type">Callable</span>[[unreal.StreamableRenderAsset],Exception] = \</span><br><span class="line">            <span class="keyword">lambda</span> inMesh: Exception(<span class="string">&quot;unsupported mesh type: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(inMesh.get_class().get_name()))</span><br><span class="line"></span><br><span class="line">        buildSrcMatMapping : collections.<span class="type">Callable</span>[[],<span class="built_in">dict</span>[unreal.Name, <span class="built_in">int</span>]] = \</span><br><span class="line">            <span class="keyword">lambda</span> : <span class="built_in">dict</span>((v,k) <span class="keyword">for</span> k, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(mat.material_slot_name <span class="keyword">for</span> mat <span class="keyword">in</span> sourceMaterials))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(pTarget, unreal.StaticMesh):</span><br><span class="line"></span><br><span class="line">            <span class="comment"># NOTE : source is static mesh</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(pSource, unreal.StaticMesh):</span><br><span class="line">                <span class="keyword">for</span> tarMatId <span class="keyword">in</span> <span class="built_in">range</span>(targetMatLength):</span><br><span class="line">                    curTarMatSlotName = targetMaterials[tarMatId].material_slot_name</span><br><span class="line">                    srcMatId = pSource.get_material_index(curTarMatSlotName)</span><br><span class="line">                    srcMatInterface = pSource.get_material(srcMatId)</span><br><span class="line">                    pTarget.set_material(tarMatId, srcMatInterface)</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> source is skeletal mesh</span></span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">isinstance</span>(pSource, unreal.SkeletalMesh):</span><br><span class="line">                <span class="comment"># <span class="doctag">NOTE:</span> build a enum dict for current source material map</span></span><br><span class="line">                srcMatMapping = buildSrcMatMapping()</span><br><span class="line">                <span class="keyword">for</span> tarMatId <span class="keyword">in</span> <span class="built_in">range</span>(targetMatLength):</span><br><span class="line">                    curTarMatSlotName = targetMaterials[tarMatId].material_slot_name</span><br><span class="line">                    srcMatId = srcMatMapping.get(curTarMatSlotName, <span class="number">0</span>)</span><br><span class="line">                    <span class="keyword">if</span> srcMatId:</span><br><span class="line">                        srcMatInterface = sourceMaterials[srcMatId].material_interface</span><br><span class="line">                        pTarget.set_material(tarMatId, srcMatInterface)</span><br><span class="line">            <span class="keyword">else</span> :</span><br><span class="line">                <span class="keyword">raise</span> raiseMeshTypeException(pSource)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">isinstance</span>(pTarget, unreal.SkeletalMesh):</span><br><span class="line">            unreal.log_warning(<span class="string">&quot;Cast material into skeletal mesh object, this method may cast fail ... &quot;</span>)</span><br><span class="line"></span><br><span class="line">            srcMatMapping = buildSrcMatMapping()</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> use copy module to easy copy our material array</span></span><br><span class="line">            newTarMatArray = copy.copy(targetMaterials)</span><br><span class="line">            <span class="keyword">for</span> tarMatId <span class="keyword">in</span> <span class="built_in">range</span>(targetMatLength):</span><br><span class="line">                curTarMatSlotName = targetMaterials[tarMatId].material_slot_name</span><br><span class="line">                srcMatId = srcMatMapping.get(curTarMatSlotName, <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">if</span> srcMatId:</span><br><span class="line">                    srcMatInterface = sourceMaterials[srcMatId].material_interface</span><br><span class="line">                    newTarMatArray[tarMatId].material_interface = srcMatInterface</span><br><span class="line">            pTarget.materials = newTarMatArray</span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            <span class="keyword">raise</span> raiseMeshTypeException(pTarget)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">runScript</span> (*args, **kw):</span><br><span class="line">    unreal.log(<span class="string">&quot;Start to process material transforming ...&quot;</span>)</span><br><span class="line">    allMeshSelections = MeshAssetSelectionHelper.GetMeshSelections()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> allMeshSelections:</span><br><span class="line">        unreal.log_error(<span class="string">&quot;&#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;Have to select two or more mesh asset to start ...&quot;</span>))</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    srcMesh = allMeshSelections[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,allMeshSelections.__len__()):</span><br><span class="line">        currentAsset = allMeshSelections[i]</span><br><span class="line">        unreal.log_warning(<span class="string">&quot;Current Target is : &#123;&#125;&quot;</span>.<span class="built_in">format</span>(currentAsset.get_full_name()))</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            MeshAssetSelectionHelper.CloseEditorForAssetObject(currentAsset)</span><br><span class="line">            UnrealAssetSrcCtrl(currentAsset.get_path_name()).CheckOutFile()</span><br><span class="line">            MeshAssetMaterialCopyTool.CopyMaterialSlotA(srcMesh, currentAsset)</span><br><span class="line">            unreal.EditorAssetLibrary.save_loaded_asset(currentAsset)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> E:</span><br><span class="line">            unreal.log_error(<span class="string">&quot;&#123;&#125;&quot;</span>.<span class="built_in">format</span>(E))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    runScript()</span><br></pre></td></tr></table></figure><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><ul><li>20230223 修复了版本控制在Unreal5中失败的问题</li></ul><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>由于Unreal Engine 的神奇设计…</p><p>导致即使都是网格类型, 但是, 接口也非常不统一</p><p>所有在处理Skeletal Mesh类型的材质时用了一些奇怪的方法.</p><p>原则上都可以用自己的方法来统一处理. </p><p>但是总感觉那里不大对, 因此按类型去判断了</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;模型美术的小伙伴 , 某日跑过来表示, 每次临时, 替换或者更新, 一个新的模型资产时&lt;/p&gt;
&lt;p&gt;都需要手动把之前指过的材质再指一次, 非常麻烦, 特别是有50+材质的超级复杂模型, 简直想要自杀.&lt;/p&gt;
&lt;p&gt;于是有了这个小脚本~&lt;/p&gt;</summary>
    
    
    
    <category term="UE" scheme="http://mine-clever.art/categories/UE/"/>
    
    <category term="Unreal" scheme="http://mine-clever.art/categories/UE/Unreal/"/>
    
    
    <category term="引擎" scheme="http://mine-clever.art/tags/%E5%BC%95%E6%93%8E/"/>
    
  </entry>
  
  <entry>
    <title>Python相机等效焦距转换</title>
    <link href="http://mine-clever.art/2022/10/22/PythonCameraFocalDistanceConvert/"/>
    <id>http://mine-clever.art/2022/10/22/PythonCameraFocalDistanceConvert/</id>
    <published>2022-10-22T06:39:19.000Z</published>
    <updated>2022-10-22T06:53:40.064Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>用于转换 相机胶片 大小变化时的 等效焦距.</p><span id="more"></span>   <hr><h1 id="Python实现代码"><a href="#Python实现代码" class="headerlink" title="Python实现代码"></a>Python实现代码</h1><p>CV大法好,  拷走就能用(</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Created by MineClever to convert camera film size</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> atan, sqrt</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MathCamFovConvert</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">    AngleToRad = <span class="number">0.017453292519943295</span></span><br><span class="line">    RadToAngle = <span class="number">57.29577951308232</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calcFovFormHeightWidth</span>(<span class="params">cls, w, h, focusDist, bRadian=<span class="literal">False</span></span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">bool</span>) -&gt; <span class="built_in">tuple</span>[<span class="built_in">float</span>,<span class="built_in">float</span>, <span class="built_in">float</span>]</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        input :w = FilmWidth(mm), h = FilmHeight(mm), focusDist(mm) = Focus Distance, bRadian -&gt; if return radian value.</span></span><br><span class="line"><span class="string">        return : tuple(HFov, VFov, DFov)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        dx = focusDist</span><br><span class="line">        cx= w /<span class="number">2</span></span><br><span class="line">        cy = h /<span class="number">2</span></span><br><span class="line">        dy = sqrt(cx*cx + cy*cy)</span><br><span class="line"></span><br><span class="line">        DFovHalf = atan(dy/dx)</span><br><span class="line">        DFov = DFovHalf * <span class="number">2</span></span><br><span class="line">        HFov = atan(cx/dx) * <span class="number">2</span></span><br><span class="line">        VFov = atan(cy/dx) * <span class="number">2</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> bRadian:</span><br><span class="line">            HFov *= cls.RadToAngle</span><br><span class="line">            VFov *= cls.RadToAngle</span><br><span class="line">            DFov *= cls.RadToAngle</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (HFov, VFov, DFov)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calcFocusDistSameLook</span> (cls, oriW, oriH, tarW, tarH, oriFocusDist, bLockHFov=<span class="literal">True</span>, bRadian= <span class="literal">False</span>):</span><br><span class="line">        <span class="comment"># type:(<span class="built_in">float</span> ,<span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">bool</span>, <span class="built_in">bool</span>)-&gt;<span class="built_in">tuple</span>[<span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">float</span>]</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        calcFocusDistSameLook calculate a new HFov, VFov, Focus Distance</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Arguments:</span></span><br><span class="line"><span class="string">            oriW -- origin width of film back size ;</span></span><br><span class="line"><span class="string">            oriH -- origin height of film back size ;</span></span><br><span class="line"><span class="string">            tarW -- target new width of film back size ;</span></span><br><span class="line"><span class="string">            tarH -- target new height of film back size;</span></span><br><span class="line"><span class="string">            oriFocusDist -- origin focal distance to film back ;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Keyword Arguments:</span></span><br><span class="line"><span class="string">            bLockHFov -- use origin HFov as reference (default: &#123;True&#125;)</span></span><br><span class="line"><span class="string">            bRadian -- return value as radian one (default: &#123;False&#125;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            return new HFov, new VHFov , new focal distance to film back as a tuple</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        oriDx = oriFocusDist</span><br><span class="line">        oriCx = oriW / <span class="number">2</span></span><br><span class="line">        oriCy = oriH / <span class="number">2</span></span><br><span class="line">        <span class="comment"># oriDy = sqrt(oriCx * oriCx + oriCy * oriCy)</span></span><br><span class="line"></span><br><span class="line">        oriHFovHalf = atan(oriCx / oriDx) <span class="comment"># 1/2 HFov</span></span><br><span class="line">        oriVFovHalf = atan(oriCy / oriDx) <span class="comment"># 1/2 VFov</span></span><br><span class="line"></span><br><span class="line">        newCx = tarW / <span class="number">2</span></span><br><span class="line">        newCy = tarH / <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> We should keep one fov sticked at least</span></span><br><span class="line">        <span class="keyword">if</span> bLockHFov : <span class="comment"># <span class="doctag">NOTE:</span> change cy only</span></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span>  newCx / tan(HFov/2[angle]) -&gt; new focus distance</span></span><br><span class="line">            newDx = newCx / (oriCx / oriDx)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Generate new VFov</span></span><br><span class="line">            newVFovHalf = atan(newCy / newDx) <span class="comment"># type: <span class="built_in">float</span></span></span><br><span class="line">            newVFov = newVFovHalf * <span class="number">2</span></span><br><span class="line">            newHFov = oriHFovHalf * <span class="number">2</span></span><br><span class="line">        <span class="keyword">else</span>: <span class="comment"># <span class="doctag">NOTE:</span> change cx only</span></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span>  newCy / tan(VFov/2[angle]) -&gt; new focus distance</span></span><br><span class="line">            newDx = newCy / (oriCy / oriDx)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Generate new HFov</span></span><br><span class="line">            newHFovHalf = atan(newCx / newDx)  <span class="comment"># type: <span class="built_in">float</span></span></span><br><span class="line">            newHFov = newHFovHalf * <span class="number">2</span></span><br><span class="line">            newVFov = oriVFovHalf * <span class="number">2</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># NOTE : convert to angle</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> bRadian:</span><br><span class="line">            newHFov *= cls.RadToAngle</span><br><span class="line">            newVFov *= cls.RadToAngle</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (newHFov, newVFov, newDx)</span><br></pre></td></tr></table></figure><h1 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h1><p><img data-src="/../img/PythonCameraFocalDistanceConvert/img_01.png" alt="Img_01"></p><p><img data-src="/../img/PythonCameraFocalDistanceConvert/img_02.png" alt="IMG_02"></p><p><img data-src="/../img/PythonCameraFocalDistanceConvert/img_03.png" alt="Convert"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;用于转换 相机胶片 大小变化时的 等效焦距.&lt;/p&gt;</summary>
    
    
    
    <category term="水" scheme="http://mine-clever.art/categories/%E6%B0%B4/"/>
    
    
    <category term="Python" scheme="http://mine-clever.art/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>用Python加载Unreal蓝图</title>
    <link href="http://mine-clever.art/2022/10/16/LoadUnrealBpByPython/"/>
    <id>http://mine-clever.art/2022/10/16/LoadUnrealBpByPython/</id>
    <published>2022-10-16T10:42:32.000Z</published>
    <updated>2022-10-22T06:30:29.416Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>用Python加载Unreal蓝图</p><span id="more"></span>   <h1 id="python实现"><a href="#python实现" class="headerlink" title="python实现"></a>python实现</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bp_class_object_path = <span class="string">&#x27;&#123;&#125;_C&#x27;</span>.<span class="built_in">format</span>(asset.object_path)</span><br><span class="line"><span class="comment">#this is the slow bit as it has to load the object</span></span><br><span class="line">bp_gen_object = unreal.load_asset(bp_class_object_path) </span><br><span class="line">blueprint_class_default = unreal.get_default_object(bp_gen_object)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;用Python加载Unreal蓝图&lt;/p&gt;</summary>
    
    
    
    <category term="水" scheme="http://mine-clever.art/categories/%E6%B0%B4/"/>
    
    
    <category term="破事水" scheme="http://mine-clever.art/tags/%E7%A0%B4%E4%BA%8B%E6%B0%B4/"/>
    
  </entry>
  
  <entry>
    <title>Unreal 获取关联资产名单代码片段</title>
    <link href="http://mine-clever.art/2022/08/28/UnrealPyAssetReferencers/"/>
    <id>http://mine-clever.art/2022/08/28/UnrealPyAssetReferencers/</id>
    <published>2022-08-28T09:08:58.000Z</published>
    <updated>2022-08-28T09:13:57.275Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>有时候从UE中找到所有关联资产非常不方便.</p><p>搞来搞去很麻烦. 找了个时间搞了个py脚本专门输出一个资产关联列表.</p><p>人生苦短, CV大法好.</p><span id="more"></span>   <h1 id="Python-代码片段"><a href="#Python-代码片段" class="headerlink" title="Python 代码片段"></a>Python 代码片段</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># python=3.8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Script to find Unreal Project assets easily</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># How to Use ? Take a selection in AssetContentBrowser then run script with console.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> unreal <span class="keyword">as</span> unreal; ue = unreal</span><br><span class="line"><span class="keyword">import</span> subprocess <span class="keyword">as</span> subprocess</span><br><span class="line"><span class="keyword">import</span> os <span class="keyword">as</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Typing hint</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">import</span> typing</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> E:</span><br><span class="line">    <span class="built_in">print</span>(E)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">DoWinCopy</span>(<span class="params">inCopy:<span class="built_in">str</span></span>) :</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Copy to windows clipboard&quot;&quot;&quot;</span></span><br><span class="line">    subprocess.run([<span class="string">&#x27;clip.exe&#x27;</span>], <span class="built_in">input</span>=<span class="built_in">str</span>(inCopy).strip().encode(<span class="string">&#x27;utf-16&#x27;</span>), check=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SelectionHelper</span> (<span class="title class_ inherited__">object</span>) :</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Help to get current Selection @ World and @ Content&quot;&quot;&quot;</span></span><br><span class="line">    __projectContentPath = unreal.Paths.project_content_dir()</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetSelectedAssets</span> (cls) :</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">list</span>[ue.Object]</span></span><br><span class="line">        <span class="keyword">return</span> unreal.EditorUtilityLibrary.get_selected_assets()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetSelectedActors</span> (cls) :</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">list</span>[ue.Actor]</span></span><br><span class="line">        <span class="keyword">return</span> unreal.EditorLevelLibrary.get_selected_level_actors()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetFullPathByObject</span> (cls, inUObject: ue.Object) -&gt; <span class="built_in">str</span> :</span><br><span class="line">        <span class="keyword">return</span> unreal.SystemLibrary.get_path_name(inUObject)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ConvertPackagePathToFilePath</span> (cls, inPackagePath: <span class="built_in">str</span>) -&gt; <span class="built_in">str</span> :</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Convert &#x27;/Game/StarterContent/SomeName&#x27; to &#x27;Drive:/Project/Content/StarterContent/SomeName&#x27;&quot;&quot;&quot;</span></span><br><span class="line">        fileSysPath = os.path.join(cls.__projectContentPath,inPackagePath.replace(<span class="string">&quot;/Game/&quot;</span>,<span class="string">&quot;&quot;</span>))</span><br><span class="line">        <span class="keyword">return</span> fileSysPath</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ConvertFilePathToPackagePath</span> (cls, inFilePath: <span class="built_in">str</span>) -&gt; <span class="built_in">str</span> :</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Convert &#x27;Drive:/Project/Content/StarterContent/SomeName(.uasset)&#x27; to &#x27;/Game/StarterContent/SomeName&#x27;&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> inFilePath.replace(<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;/&quot;</span>).replace(<span class="string">&quot;.uasset&quot;</span>,<span class="string">&quot;&quot;</span>).replace(cls.__projectContentPath,<span class="string">&quot;/Game/&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ReferenceHelper</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">    __assetRegistryInstance: ue.AssetRegistry = unreal.AssetRegistryHelpers.get_asset_registry()</span><br><span class="line">    </span><br><span class="line">    __referenceOptions = unreal.AssetRegistryDependencyOptions()</span><br><span class="line">    __referenceOptions.include_hard_management_references = <span class="literal">True</span></span><br><span class="line">    __referenceOptions.include_hard_package_references = <span class="literal">True</span></span><br><span class="line">    __referenceOptions.include_soft_management_references = <span class="literal">True</span></span><br><span class="line">    __referenceOptions.include_soft_package_references = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetReferencersPathByPackagePath</span> (cls, inPackagePath: <span class="built_in">str</span>) :</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Ref to https://docs.unrealengine.com/4.27/en-US/PythonAPI/class/AssetRegistry.html&quot;&quot;&quot;</span></span><br><span class="line">        allReferencersPackage : <span class="built_in">list</span>[<span class="built_in">str</span>] = cls.__assetRegistryInstance.get_referencers(inPackagePath,cls.__referenceOptions)</span><br><span class="line">        <span class="keyword">return</span> allReferencersPackage</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetDependenciesPathByPackagePath</span> (cls, inPackagePath: <span class="built_in">str</span>) :</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Ref to https://docs.unrealengine.com/4.27/en-US/PythonAPI/class/AssetRegistry.html&quot;&quot;&quot;</span></span><br><span class="line">        allDependenciesPackage : <span class="built_in">list</span>[<span class="built_in">str</span>] = cls.__assetRegistryInstance.get_dependencies(inPackagePath,cls.__referenceOptions)</span><br><span class="line">        <span class="keyword">return</span> allDependenciesPackage</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetAllReferencersPathFromSelectedAssets</span> (cls) :</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Get all referenced assets path with current selection in AssetContent&quot;&quot;&quot;</span></span><br><span class="line">        assets = SelectionHelper.GetSelectedAssets()</span><br><span class="line">        assetPaths: <span class="built_in">set</span>[<span class="built_in">str</span>] = <span class="built_in">set</span>()</span><br><span class="line">        <span class="keyword">for</span> asset <span class="keyword">in</span> assets:</span><br><span class="line">            path = unreal.Paths.get_base_filename(asset.get_path_name(),remove_path=<span class="literal">False</span>)</span><br><span class="line">            assetPaths.add(path)</span><br><span class="line">            referencedPaths: <span class="built_in">list</span>[<span class="built_in">str</span>] = unreal.EditorAssetLibrary.find_package_referencers_for_asset(path)</span><br><span class="line">            assetPaths.update(referencedPaths)</span><br><span class="line">        <span class="keyword">return</span> assetPaths</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetAllDependenciesPath</span> (cls, assetArray , bDeep=<span class="literal">False</span>, maxDeep = <span class="number">10</span>) :</span><br><span class="line">        <span class="comment"># type: (typing.Iterable[ue.Object], <span class="built_in">bool</span> , <span class="built_in">int</span>) -&gt; <span class="built_in">set</span>[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Get all referenced assets path with input array of assets object&quot;&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> set is more fast than list !</span></span><br><span class="line">        assetsPath: <span class="built_in">set</span>[<span class="built_in">str</span>] = <span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line">        MakeValidPath: typing.<span class="type">Callable</span>[[<span class="built_in">list</span>[<span class="built_in">str</span>]], typing.Iterable[<span class="built_in">str</span>]] = \</span><br><span class="line">            <span class="keyword">lambda</span> inPaths : \</span><br><span class="line">                (<span class="built_in">str</span>(name) <span class="keyword">if</span> <span class="keyword">not</span> (<span class="built_in">str</span>(name).startswith(<span class="string">&quot;/Script/&quot;</span>) <span class="keyword">or</span> <span class="built_in">str</span>(name).startswith(<span class="string">&quot;/Engine/&quot;</span>)) <span class="keyword">else</span> <span class="literal">None</span> \</span><br><span class="line">                    <span class="keyword">for</span> name <span class="keyword">in</span> inPaths)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">DeepLoop</span> (inAssets: <span class="built_in">str</span>, deepCount=<span class="number">0</span>):</span><br><span class="line">            <span class="string">&quot;&quot;&quot;recursion to find all paths&quot;&quot;&quot;</span></span><br><span class="line">            <span class="keyword">if</span> deepCount &gt; maxDeep: <span class="keyword">return</span></span><br><span class="line">            deepCount+=<span class="number">1</span></span><br><span class="line">            insideAssetsPath:<span class="built_in">set</span>[<span class="built_in">str</span>] = <span class="built_in">set</span>()</span><br><span class="line">            insideDependenciesPath: <span class="built_in">list</span>[<span class="built_in">str</span>] = cls.GetDependenciesPathByPackagePath(inAssets)</span><br><span class="line">            insideAssetsPath.update(MakeValidPath (insideDependenciesPath))</span><br><span class="line">            insideAssetsPath.add(inAssets)</span><br><span class="line">            insideAssetsPath.discard(<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Find Path not in assetsPath</span></span><br><span class="line">            <span class="keyword">for</span> diffAssetsPath <span class="keyword">in</span> insideAssetsPath:</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> diffAssetsPath <span class="keyword">in</span> assetsPath:</span><br><span class="line">                    assetsPath.add(diffAssetsPath)</span><br><span class="line">                    DeepLoop(diffAssetsPath,deepCount)</span><br><span class="line">            assetsPath.update(insideAssetsPath)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> asset <span class="keyword">in</span> assetArray:</span><br><span class="line">            path = unreal.Paths.get_base_filename(asset.get_path_name(),remove_path=<span class="literal">False</span>)</span><br><span class="line">            DependenciesPath: <span class="built_in">list</span>[<span class="built_in">str</span>] = cls.GetDependenciesPathByPackagePath(path)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(DependenciesPath, <span class="built_in">type</span>(<span class="literal">None</span>)):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> remove all script path</span></span><br><span class="line">            assetsPath.update(MakeValidPath(DependenciesPath))</span><br><span class="line">            assetsPath.add(path)</span><br><span class="line">            assetsPath.discard(<span class="literal">None</span>)</span><br><span class="line">            <span class="keyword">if</span> bDeep:</span><br><span class="line">                <span class="keyword">for</span> subAsset <span class="keyword">in</span> assetsPath.copy():</span><br><span class="line">                    DeepLoop(subAsset)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> assetsPath</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetAllDependenciesPathFromSelectedAssets</span> (cls, bDeep=<span class="literal">False</span>, maxDeep = <span class="number">10</span>) :</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Get all referenced assets path with current selection in AssetContent&quot;&quot;&quot;</span></span><br><span class="line">        assets = SelectionHelper.GetSelectedAssets()</span><br><span class="line">        <span class="keyword">return</span> cls.GetAllDependenciesPath(assets, bDeep, maxDeep)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetAllDependenciesPathFromSelectedMeshActors</span> (cls, bDeep=<span class="literal">False</span>, maxDeep = <span class="number">10</span>) :</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Get all referenced assets path with current selection in AssetContent&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        assets: <span class="built_in">set</span>[ue.Object] = <span class="built_in">set</span>()</span><br><span class="line">        allActors = SelectionHelper.GetSelectedActors()</span><br><span class="line">        <span class="keyword">for</span> actor <span class="keyword">in</span> allActors:</span><br><span class="line">            staticMeshComponents: <span class="built_in">list</span>[ue.StaticMeshComponent] = actor.get_components_by_class(ue.StaticMeshComponent)</span><br><span class="line">            skeletalMeshComponents: <span class="built_in">list</span>[ue.SkeletalMeshComponent]  = actor.get_components_by_class(ue.SkeletalMeshComponent)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(staticMeshComponents) &gt; <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">for</span> comp <span class="keyword">in</span> staticMeshComponents:</span><br><span class="line">                    assets.add(comp.static_mesh)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(skeletalMeshComponents) &gt;<span class="number">0</span> :</span><br><span class="line">                <span class="keyword">for</span> comp <span class="keyword">in</span> skeletalMeshComponents:</span><br><span class="line">                    assets.add(comp.skeletal_mesh)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> cls.GetAllDependenciesPath(assets, bDeep, maxDeep)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">RunScript</span>(<span class="params">bViewActor=<span class="literal">True</span>,bDoCopy=<span class="literal">True</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Choose from current ViewportActors or Assets in ContentBrowser&quot;&quot;&quot;</span></span><br><span class="line">    method = ReferenceHelper.GetAllDependenciesPathFromSelectedMeshActors \</span><br><span class="line">        <span class="keyword">if</span> bViewActor <span class="keyword">else</span> ReferenceHelper.GetAllDependenciesPathFromSelectedAssets</span><br><span class="line">    result = <span class="built_in">list</span>(method(bDeep=<span class="literal">True</span>,maxDeep=<span class="number">10</span>));result.sort()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># <span class="doctag">NOTE:</span> Make ContentBrowser sync with current result list </span></span><br><span class="line">    unreal.EditorAssetLibrary.sync_browser_to_objects(result)</span><br><span class="line">    <span class="comment"># for strName in result : print(strName)</span></span><br><span class="line">    <span class="keyword">if</span> bDoCopy: DoWinCopy(result)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    RunScript(bViewActor=<span class="literal">True</span>,bDoCopy=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;有时候从UE中找到所有关联资产非常不方便.&lt;/p&gt;
&lt;p&gt;搞来搞去很麻烦. 找了个时间搞了个py脚本专门输出一个资产关联列表.&lt;/p&gt;
&lt;p&gt;人生苦短, CV大法好.&lt;/p&gt;</summary>
    
    
    
    <category term="水" scheme="http://mine-clever.art/categories/%E6%B0%B4/"/>
    
    
    <category term="python" scheme="http://mine-clever.art/tags/python/"/>
    
    <category term="unreal" scheme="http://mine-clever.art/tags/unreal/"/>
    
  </entry>
  
  <entry>
    <title>找文件用的Python代码片段</title>
    <link href="http://mine-clever.art/2022/08/20/PyCodeToTraversePaths/"/>
    <id>http://mine-clever.art/2022/08/20/PyCodeToTraversePaths/</id>
    <published>2022-08-20T07:04:42.000Z</published>
    <updated>2022-08-21T12:14:07.140Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>python 很方便</p><p>但是用的时候还是要有手.</p><p>索性弄个片段, 可以只用脚 去找文件了</p><span id="more"></span>   <h1 id="代码片段"><a href="#代码片段" class="headerlink" title="代码片段"></a>代码片段</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># python=2.7</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os <span class="keyword">as</span> os</span><br><span class="line"><span class="keyword">import</span> re <span class="keyword">as</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># <span class="doctag">NOTE:</span> 仅用于类型注释</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">import</span> typing <span class="keyword">as</span> typing</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FilePathProcessor</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="string">u&quot;&quot;&quot;用于处理文件的类&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">CheckIfDirExist</span> (cls, dirPath):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>)-&gt;<span class="literal">None</span></span></span><br><span class="line">        <span class="string">u&quot;&quot;&quot;判断文件夹是否存在, 否则抛出异常&quot;&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(dirPath):</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">u&quot;不存在文件夹, 或不是文件夹 : &#123;&#125;&quot;</span>.<span class="built_in">format</span>(dirPath))</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetAllFileWithExt</span> (cls, dirPath, extFormat, bSingleDir=<span class="literal">True</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>, <span class="built_in">str</span>, <span class="built_in">bool</span>) -&gt; typing.Iterable[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="string">u&quot;&quot;&quot;遍历文件夹以寻找特定格式的文件&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> 判断文件夹是否存在, 否则抛出异常</span></span><br><span class="line">        cls.CheckIfDirExist (dirPath)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> 小写后缀扩展格式</span></span><br><span class="line">        lowerExtFormat = extFormat.lower()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> 返回一个 路径生成器</span></span><br><span class="line">        <span class="keyword">if</span> bSingleDir: <span class="comment"># NOTE 单层模式</span></span><br><span class="line">            <span class="keyword">for</span> fileName <span class="keyword">in</span> os.listdir(dirPath):</span><br><span class="line">                tempFilePath = os.path.join(dirPath,fileName)</span><br><span class="line">                <span class="comment"># <span class="doctag">NOTE:</span> 非目录 &amp;&amp; 以extFormat结尾</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">not</span> os.path.isdir(tempFilePath)) <span class="keyword">and</span> (fileName.lower().endswith(lowerExtFormat)):</span><br><span class="line">                    <span class="keyword">yield</span> tempFilePath</span><br><span class="line">        <span class="keyword">else</span> : <span class="comment"># NOTE 遍历所有子目录</span></span><br><span class="line">            <span class="keyword">for</span> dirPath,dirNames,fileNames <span class="keyword">in</span> os.walk(dirPath):</span><br><span class="line">                <span class="keyword">for</span> fileName <span class="keyword">in</span> fileNames:</span><br><span class="line">                    <span class="comment"># <span class="doctag">NOTE:</span> 以extFormat结尾</span></span><br><span class="line">                    <span class="keyword">if</span> fileName.lower().endswith(lowerExtFormat):</span><br><span class="line">                        <span class="keyword">yield</span> os.path.join(dirPath, fileName)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetAllFileRegexWithExt</span> (cls, dirPath, extFormat, bSingleDir=<span class="literal">True</span>, bUseRegex=<span class="literal">False</span>, regexRule=<span class="string">&quot;&quot;</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>, <span class="built_in">str</span>, <span class="built_in">bool</span>, <span class="built_in">bool</span>, <span class="built_in">str</span>) -&gt; typing.Iterable[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="string">u&quot;&quot;&quot;遍历文件夹以寻找特定格式的文件, 且可选是否包含特定的Regex&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        pathGenerator = cls.GetAllFileWithExt(dirPath,extFormat,bSingleDir)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> bUseRegex: <span class="comment"># NOTE 不使用正则表达式</span></span><br><span class="line">            <span class="keyword">for</span> filePath <span class="keyword">in</span> pathGenerator:</span><br><span class="line">                <span class="keyword">yield</span> filePath</span><br><span class="line">        <span class="keyword">else</span> : <span class="comment"># NOTE 使用正则表达式</span></span><br><span class="line">            regexMatchRule = re.<span class="built_in">compile</span>(regexRule,re.I)</span><br><span class="line">            <span class="keyword">for</span> filePath <span class="keyword">in</span> pathGenerator:</span><br><span class="line">                regexMatched = regexMatchRule.search(os.path.basename(filePath))</span><br><span class="line">                <span class="keyword">if</span> regexMatched != <span class="literal">None</span> :</span><br><span class="line">                    <span class="keyword">yield</span> filePath</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># <span class="doctag">NOTE:</span> Easy CV!</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    targetDirPath = os.environ[<span class="string">&quot;userprofile&quot;</span>]</span><br><span class="line">    targetExtFormat = <span class="string">&quot;.fbx&quot;</span></span><br><span class="line">    bUseSingleDir = <span class="literal">False</span></span><br><span class="line">    bUseRegex = <span class="literal">True</span></span><br><span class="line">    regexRule = <span class="string">r&quot;^anim.*?&quot;</span></span><br><span class="line">    filePathGenerator = FilePathProcessor.GetAllFileRegexWithExt(</span><br><span class="line">                        targetDirPath,</span><br><span class="line">                        targetExtFormat,</span><br><span class="line">                        bUseSingleDir,</span><br><span class="line">                        bUseRegex,</span><br><span class="line">                        regexRule)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> filePath <span class="keyword">in</span> filePathGenerator :</span><br><span class="line">        <span class="built_in">print</span>(filePath)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;python 很方便&lt;/p&gt;
&lt;p&gt;但是用的时候还是要有手.&lt;/p&gt;
&lt;p&gt;索性弄个片段, 可以只用脚 去找文件了&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="http://mine-clever.art/categories/python/"/>
    
    
    <category term="破事水" scheme="http://mine-clever.art/tags/%E7%A0%B4%E4%BA%8B%E6%B0%B4/"/>
    
  </entry>
  
  <entry>
    <title>切线空间和对象空间的转换</title>
    <link href="http://mine-clever.art/2022/07/07/TangetSwapObjectSpaceShader/"/>
    <id>http://mine-clever.art/2022/07/07/TangetSwapObjectSpaceShader/</id>
    <published>2022-07-06T16:56:31.000Z</published>
    <updated>2022-07-06T17:03:11.576Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>因为一时找不到工具用来转换模型的切线空间和对象空间.</p><p>整了一个Substance Painter 可以方便直接处理.</p><span id="more"></span>   <hr><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>由于Substance的引擎可以直接读取TBN信息.</p><p>通过构建TBN矩阵的转置与否,直接转换. </p><p>相当简单.</p><p>存储成 <strong>.glsl</strong> 后缀格式,直接拖进Substance Painter</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">This Shader was made for Substance Painter</span></span><br><span class="line"><span class="comment">help converting Tangent Space into Obeject/World Space</span></span><br><span class="line"><span class="comment">or converting ObjectSpace to Tangent Space</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#define BLACK_COLOR vec4(0.0f,0.0f,0.0f,1.0f)</span></span><br><span class="line"><span class="meta">#define WHITE_COLOR vec4(1.0f,1.0f,1.0f,1.0f)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import lib-utils.glsl</span><br><span class="line">import lib-env.glsl</span><br><span class="line">import lib-normal.glsl</span><br><span class="line">import lib-alpha.glsl</span><br><span class="line">import lib-vectors.glsl</span><br><span class="line">import lib-sparse.glsl</span><br><span class="line">import lib-sampler.glsl</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//--------texure Sampler ---------------------------------------------------//</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//: param auto channel_user0</span></span><br><span class="line"><span class="keyword">uniform</span> SamplerSparse InputSpaceTexSampler;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//-------- About ----------------------------------------------------//</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: true, &quot;label&quot;: &quot;MineClever&#x27;s Space Converter&quot;, &quot;group&quot;: &quot;About&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> tAuthor;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: true, &quot;label&quot;: &quot;Version 0.0.3&quot;, &quot;group&quot;: &quot;About&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> tAuthor_version;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//-------- Space ----------------------------------------------------//</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;Tangent Space&quot;, &quot;group&quot;: &quot;Convert Space&quot; &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bSwapSpace;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123;</span></span><br><span class="line"><span class="comment">//:   &quot;default&quot;: 0,</span></span><br><span class="line"><span class="comment">//:   &quot;label&quot;: &quot;Remap Input XYZ&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;widget&quot;: &quot;combobox&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;group&quot;: &quot;Convert Space&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;values&quot;: &#123;</span></span><br><span class="line"><span class="comment">//:     &quot;XYZ&quot;: 0,</span></span><br><span class="line"><span class="comment">//:     &quot;XZY&quot;: 1,</span></span><br><span class="line"><span class="comment">//:     &quot;YXZ&quot;: 2,</span></span><br><span class="line"><span class="comment">//:     &quot;YZX&quot;: 3,</span></span><br><span class="line"><span class="comment">//:     &quot;ZXY&quot;: 4,</span></span><br><span class="line"><span class="comment">//:     &quot;ZYX&quot;: 5</span></span><br><span class="line"><span class="comment">//:   &#125;</span></span><br><span class="line"><span class="comment">//: &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">int</span> XYZOrderType;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;-X&quot;, &quot;group&quot;: &quot;Convert Space&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> Xnegative;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;-Y&quot;, &quot;group&quot;: &quot;Convert Space&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> Ynegative;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;-Z&quot;, &quot;group&quot;: &quot;Convert Space&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> Znegative;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//-------- Tools ----------------------------------------------------//</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: true, &quot;label&quot;: &quot;unsigned Input Image&quot;, &quot;group&quot;: &quot;Input&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bPacked;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: true, &quot;label&quot;: &quot;Compute Binormal Direction&quot;, &quot;group&quot;: &quot;Input&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bInputTBN;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;Decode Input Gamma&quot;, &quot;group&quot;: &quot;Input&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bInputGamma;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123;</span></span><br><span class="line"><span class="comment">//:   &quot;default&quot;: 0,</span></span><br><span class="line"><span class="comment">//:   &quot;label&quot;: &quot;Input Gamma Type&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;widget&quot;: &quot;combobox&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;group&quot;: &quot;Input&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;values&quot;: &#123;</span></span><br><span class="line"><span class="comment">//:     &quot;sRGB&quot;: 0,</span></span><br><span class="line"><span class="comment">//:     &quot;Gamma 2.2 (Tga)&quot;: 1</span></span><br><span class="line"><span class="comment">//:   &#125;</span></span><br><span class="line"><span class="comment">//: &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">int</span> EnumGammaType;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;Flip Y&quot;, &quot;group&quot;: &quot;Output&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bFlipY;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;Use Output Gamma&quot;, &quot;group&quot;: &quot;Output&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bOutputGamma;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123;</span></span><br><span class="line"><span class="comment">//:   &quot;default&quot;: 0,</span></span><br><span class="line"><span class="comment">//:   &quot;label&quot;: &quot;Output Gamma Type&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;widget&quot;: &quot;combobox&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;group&quot;: &quot;Output&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;values&quot;: &#123;</span></span><br><span class="line"><span class="comment">//:     &quot;sRGB&quot;: 0,</span></span><br><span class="line"><span class="comment">//:     &quot;Gamma 2.2 (Tga)&quot;: 1</span></span><br><span class="line"><span class="comment">//:   &#125;</span></span><br><span class="line"><span class="comment">//: &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">int</span> EnumOutputGamma;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;Use Signed Float(Exr Only)&quot;, &quot;group&quot;: &quot;Output&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bOutputSigned;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;Normalize Output&quot;, &quot;group&quot;: &quot;Output&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bOutputNormalized;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//-------- Debug ----------------------------------------------------//</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123;</span></span><br><span class="line"><span class="comment">//:   &quot;default&quot;: 0,</span></span><br><span class="line"><span class="comment">//:   &quot;label&quot;: &quot;Viewport&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;widget&quot;: &quot;combobox&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;group&quot;: &quot;Debug&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;values&quot;: &#123;</span></span><br><span class="line"><span class="comment">//:     &quot;Output Map&quot;: 0,</span></span><br><span class="line"><span class="comment">//:     &quot;Input Map&quot;: 1</span></span><br><span class="line"><span class="comment">//:   &#125;</span></span><br><span class="line"><span class="comment">//: &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">int</span> EnumDebugView;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">// HLSL function help to port/cast</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> saturate(<span class="type">float</span> v)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">clamp</span>(v, <span class="number">0.0</span>, <span class="number">1.0</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">vec2</span> saturate(<span class="type">vec2</span> v)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">clamp</span>(v, <span class="number">0.0</span>, <span class="number">1.0</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">vec3</span> saturate(<span class="type">vec3</span> v)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">clamp</span>(v, <span class="number">0.0</span>, <span class="number">1.0</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">vec4</span> saturate(<span class="type">vec4</span> v)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">clamp</span>(v, <span class="number">0.0</span>, <span class="number">1.0</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//custom Substance engine function</span></span><br><span class="line"><span class="type">float</span> sampleWithDefault(SamplerSparse sampler, SparseCoord coord, <span class="type">float</span> defaultValue)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">vec2</span> value = textureSparse(sampler, coord).rg;</span><br><span class="line"><span class="keyword">return</span> value.r + defaultValue * (<span class="number">1.0</span> - value.g);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">vec3</span> sampleWithColor(SamplerSparse sampler, SparseCoord coord,<span class="type">vec3</span> defaultColor)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">vec4</span> Color = textureSparse(sampler, coord).rgba;</span><br><span class="line">    Color.rgb = <span class="built_in">mix</span>(defaultColor.rgb, Color.rgb, Color.a);</span><br><span class="line"><span class="keyword">return</span> Color.rgb;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* build TNB Matrix InputValue pixel shader*/</span></span><br><span class="line"><span class="type">mat3</span> buildTBN (<span class="type">vec3</span> T, <span class="type">vec3</span> B, <span class="type">vec3</span> N)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">mat3</span> (T,B,N);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* easily switching the range between [0,1] and [-1,1]*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">vec3</span> unpackNormalMap (<span class="type">vec3</span> InputValue)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">vec3</span> OUT;</span><br><span class="line">    <span class="comment">//OUT = (InputValue - 0.5f) * 2.0f;</span></span><br><span class="line">    OUT = <span class="number">2</span> * InputValue - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> OUT;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">vec4</span> unpackNormalMap (<span class="type">vec4</span> InputValue)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">vec4</span> OUT;</span><br><span class="line">    OUT.xyz = unpackNormalMap(InputValue.xyz);</span><br><span class="line">    OUT.w = InputValue.w;</span><br><span class="line">    <span class="keyword">return</span> OUT;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">vec3</span> packNormalMap (<span class="type">vec3</span> InputValue)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">vec3</span> OUT;</span><br><span class="line">    <span class="comment">//OUT = ( InputValue + 1.0f ) * 0.5f;</span></span><br><span class="line">    OUT = <span class="number">0.5</span> * InputValue + <span class="number">0.5</span>;</span><br><span class="line">    <span class="keyword">return</span> OUT;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> rcp (<span class="type">float</span> InputValue)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1.0</span>f/InputValue;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Gamma Function designed for user*/</span></span><br><span class="line"><span class="type">vec3</span> deGamma (<span class="type">vec3</span> InputValue, <span class="type">int</span> gammaType = <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    OUT = (gammaType == <span class="number">0</span>) ? linear2sRGB(InputValue) : <span class="built_in">pow</span>(InputValue,<span class="type">vec3</span>(rcp(<span class="number">2.2</span>)));</span><br><span class="line">    <span class="keyword">return</span> OUT;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">vec3</span> enGamma (<span class="type">vec3</span> InputValue, <span class="type">int</span> gammaType = <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    OUT = (gammaType == <span class="number">0</span>) ? sRGB2linear(InputValue) : <span class="built_in">pow</span>(InputValue,<span class="type">vec3</span>(<span class="number">2.2</span>));</span><br><span class="line">    <span class="keyword">return</span> OUT;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* This function was desigined to make swizzle xyz by user */</span></span><br><span class="line"><span class="type">vec3</span> remapXYZorder (<span class="type">vec3</span> InputValue, <span class="type">int</span> orderType)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">vec3</span> OUT;</span><br><span class="line">    <span class="keyword">switch</span>(orderType)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span> :</span><br><span class="line">            OUT.xyz = InputValue.xzy;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span> :</span><br><span class="line">            OUT.xyz = InputValue.yxz;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span> :</span><br><span class="line">            OUT.xyz = InputValue.yzx;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span> :</span><br><span class="line">            OUT.xyz = InputValue.zxy;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span> :</span><br><span class="line">            OUT.xyz = InputValue.zyx;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            OUT.xyz = InputValue.xyz;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> OUT;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* fragmentShader Here (surface shader) */</span></span><br><span class="line"><span class="type">void</span> shade(V2F inputs) &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="type">vec3</span> T,B,N;</span><br><span class="line">    <span class="comment">/* use engine function to get correct TBN */</span></span><br><span class="line">    <span class="comment">//LocalVectors vectors = computeLocalFrame(inputs);</span></span><br><span class="line">    <span class="comment">// N = vectors.normal;</span></span><br><span class="line">    <span class="comment">// B = vectors.bitangent;</span></span><br><span class="line">    <span class="comment">// T = vectors.tangent;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Compute by ourself */</span></span><br><span class="line">    N = <span class="built_in">normalize</span>(inputs.normal);</span><br><span class="line">    T = <span class="built_in">normalize</span>(inputs.tangent);</span><br><span class="line">    B = <span class="built_in">cross</span>(N,T);</span><br><span class="line">    <span class="type">float</span> binormalDirection = (<span class="built_in">dot</span>(B, inputs.bitangent) &lt; <span class="number">0.0</span>) &amp;&amp; (bInputTBN) ? <span class="number">-1</span> : <span class="number">1</span>;</span><br><span class="line">    B *= binormalDirection;</span><br><span class="line"></span><br><span class="line">    <span class="type">mat3</span> TBN = buildTBN(T, B, N);</span><br><span class="line"></span><br><span class="line">    TBN = bSwapSpace ? <span class="built_in">transpose</span>(TBN) : TBN;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* mapping [0,1] to [-1,1]*/</span></span><br><span class="line">    <span class="type">vec3</span> XYZnegative = <span class="number">1</span> - <span class="type">vec3</span>(Xnegative, Ynegative , Znegative) * <span class="number">2</span> ;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">/* sample input map with filpper */</span></span><br><span class="line">    <span class="type">vec3</span> originInputSpaceColor;</span><br><span class="line">    originInputSpaceColor = sampleWithColor(InputSpaceTexSampler, inputs.sparse_coord, N);</span><br><span class="line"></span><br><span class="line">    originInputSpaceColor = bPacked ? unpackNormalMap(originInputSpaceColor) : originInputSpaceColor;</span><br><span class="line"></span><br><span class="line">    originInputSpaceColor = remapXYZorder(originInputSpaceColor,XYZOrderType) * XYZnegative;</span><br><span class="line">    <span class="type">vec3</span> inputSpaceColor = originInputSpaceColor;</span><br><span class="line">    </span><br><span class="line">    inputSpaceColor = bInputGamma ? deGamma(inputSpaceColor, EnumGammaType) : inputSpaceColor;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* converting Space by TBN Matrix */</span></span><br><span class="line">    <span class="type">vec3</span> outputSpaceColor = inputSpaceColor.rgb * TBN;</span><br><span class="line"></span><br><span class="line">    outputSpaceColor = bOutputNormalized ? <span class="built_in">normalize</span>(outputSpaceColor) : outputSpaceColor;</span><br><span class="line"></span><br><span class="line">    outputSpaceColor.y = bFlipY ? -outputSpaceColor.y : outputSpaceColor.y;</span><br><span class="line"></span><br><span class="line">    outputSpaceColor = bOutputSigned ? outputSpaceColor : packNormalMap( outputSpaceColor );</span><br><span class="line"></span><br><span class="line">    outputSpaceColor = bOutputGamma ? enGamma(outputSpaceColor, EnumOutputGamma) : outputSpaceColor;</span><br><span class="line"></span><br><span class="line">    outputSpaceColor = <span class="built_in">mix</span>(outputSpaceColor,inputSpaceColor,EnumDebugView * <span class="number">1.0</span>);</span><br><span class="line"></span><br><span class="line">    diffuseShadingOutput(outputSpaceColor.rgb);<span class="comment">//sv_target::COLOR</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;因为一时找不到工具用来转换模型的切线空间和对象空间.&lt;/p&gt;
&lt;p&gt;整了一个Substance Painter 可以方便直接处理.&lt;/p&gt;</summary>
    
    
    
    <category term="水" scheme="http://mine-clever.art/categories/%E6%B0%B4/"/>
    
    
    <category term="破事水" scheme="http://mine-clever.art/tags/%E7%A0%B4%E4%BA%8B%E6%B0%B4/"/>
    
  </entry>
  
  <entry>
    <title>矩阵变换</title>
    <link href="http://mine-clever.art/2022/07/03/MatrixTrans/"/>
    <id>http://mine-clever.art/2022/07/03/MatrixTrans/</id>
    <published>2022-07-02T18:08:16.000Z</published>
    <updated>2022-07-02T18:12:48.840Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>一些矩阵处理的常用规则</p><span id="more"></span>  <h1 id="理解左乘和右乘"><a href="#理解左乘和右乘" class="headerlink" title="理解左乘和右乘"></a>理解左乘和右乘</h1><p>当三维坐标点发生旋转时，如果采用矩阵运算就会需要考虑“左乘”和“右乘”。</p><p>若绕静坐标系（世界坐标系）旋转，则左乘，也是变换矩阵*坐标矩阵；</p><p>若是绕动坐标系旋转（自身建立一个坐标系），则右乘，也就是坐标矩阵*变换矩阵。</p><h1 id="视角"><a href="#视角" class="headerlink" title="视角"></a>视角</h1><p>总结来说, 这是个视角问题 , 右乘获取新坐标矩阵 , 左乘还是原来的坐标矩阵.</p><p>类似于 旋转地图自身固定(右乘) 与 旋转自身地图固定(左乘) 的区别</p><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">obj_local_matrix = obj_world_matrix * inverse_parent_world_matrix <span class="comment"># 右乘</span></span><br><span class="line">obj_world_matrix = obj_local_matrix * parent_world_matrix <span class="comment"># 左乘</span></span><br><span class="line"></span><br><span class="line">obj_relative_to_other_matrix = obj_world_matrix * inverse_other_world_matrix</span><br><span class="line">obj_world_matrix = obj_relative_to_other_matrix * other_world_matrix</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;一些矩阵处理的常用规则&lt;/p&gt;</summary>
    
    
    
    <category term="水" scheme="http://mine-clever.art/categories/%E6%B0%B4/"/>
    
    
    <category term="矩阵" scheme="http://mine-clever.art/tags/%E7%9F%A9%E9%98%B5/"/>
    
  </entry>
  
</feed>
