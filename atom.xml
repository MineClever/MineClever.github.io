<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MineClever&#39;s Blog</title>
  
  <subtitle>Some Technical Artist&#39;s Log</subtitle>
  <link href="http://mine-clever.art/atom.xml" rel="self"/>
  
  <link href="http://mine-clever.art/"/>
  <updated>2022-10-22T06:46:54.727Z</updated>
  <id>http://mine-clever.art/</id>
  
  <author>
    <name>Mine Clever</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python相机等效焦距转换</title>
    <link href="http://mine-clever.art/2022/10/22/PythonCameraFocalDistanceConvert/"/>
    <id>http://mine-clever.art/2022/10/22/PythonCameraFocalDistanceConvert/</id>
    <published>2022-10-22T06:39:19.000Z</published>
    <updated>2022-10-22T06:46:54.727Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>用于转换 相机胶片 大小变化时的 等效焦距.</p><span id="more"></span>   <hr><h1 id="Python实现代码"><a href="#Python实现代码" class="headerlink" title="Python实现代码"></a>Python实现代码</h1><p>CV大法好,  拷走就能用(</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Created by MineClever to convert camera film size</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> atan, sqrt</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MathCamFovConvert</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">    AngleToRad = <span class="number">0.017453292519943295</span></span><br><span class="line">    RadToAngle = <span class="number">57.29577951308232</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calcFovFormHeightWidth</span>(<span class="params">cls, w, h, focusDist, bRadian=<span class="literal">False</span></span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">bool</span>) -&gt; <span class="built_in">tuple</span>[<span class="built_in">float</span>,<span class="built_in">float</span>, <span class="built_in">float</span>]</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        input :w = FilmWidth(mm), h = FilmHeight(mm), focusDist(mm) = Focus Distance, bRadian -&gt; if return radian value.</span></span><br><span class="line"><span class="string">        return : tuple(HFov, VFov, DFov)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        dx = focusDist</span><br><span class="line">        cx= w /<span class="number">2</span></span><br><span class="line">        cy = h /<span class="number">2</span></span><br><span class="line">        dy = sqrt(cx*cx + cy*cy)</span><br><span class="line"></span><br><span class="line">        DFovHalf = atan(dy/dx)</span><br><span class="line">        DFov = DFovHalf * <span class="number">2</span></span><br><span class="line">        HFov = atan(cx/dx) * <span class="number">2</span></span><br><span class="line">        VFov = atan(cy/dx) * <span class="number">2</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> bRadian:</span><br><span class="line">            HFov *= cls.RadToAngle</span><br><span class="line">            VFov *= cls.RadToAngle</span><br><span class="line">            DFov *= cls.RadToAngle</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (HFov, VFov, DFov)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calcFocusDistSameLook</span> (cls, oriW, oriH, tarW, tarH, oriFocusDist, bLockHFov=<span class="literal">True</span>, bRadian= <span class="literal">False</span>):</span><br><span class="line">        <span class="comment"># type:(<span class="built_in">float</span> ,<span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">bool</span>, <span class="built_in">bool</span>)-&gt;<span class="built_in">tuple</span>[<span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">float</span>]</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        calcFocusDistSameLook calculate a new HFov, VFov, Focus Distance</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Arguments:</span></span><br><span class="line"><span class="string">            oriW -- origin width of film back size ;</span></span><br><span class="line"><span class="string">            oriH -- origin height of film back size ;</span></span><br><span class="line"><span class="string">            tarW -- target new width of film back size ;</span></span><br><span class="line"><span class="string">            tarH -- target new height of film back size;</span></span><br><span class="line"><span class="string">            oriFocusDist -- origin focal distance to film back ;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Keyword Arguments:</span></span><br><span class="line"><span class="string">            bLockHFov -- use origin HFov as reference (default: &#123;True&#125;)</span></span><br><span class="line"><span class="string">            bRadian -- return value as radian one (default: &#123;False&#125;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            return new HFov, new VHFov , new focal distance to film back as a tuple</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        oriDx = oriFocusDist</span><br><span class="line">        oriCx = oriW / <span class="number">2</span></span><br><span class="line">        oriCy = oriH / <span class="number">2</span></span><br><span class="line">        <span class="comment"># oriDy = sqrt(oriCx * oriCx + oriCy * oriCy)</span></span><br><span class="line"></span><br><span class="line">        oriHFovHalf = atan(oriCx / oriDx) <span class="comment"># 1/2 HFov</span></span><br><span class="line">        oriVFovHalf = atan(oriCy / oriDx) <span class="comment"># 1/2 VFov</span></span><br><span class="line"></span><br><span class="line">        newCx = tarW / <span class="number">2</span></span><br><span class="line">        newCy = tarH / <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> We should keep one fov sticked at least</span></span><br><span class="line">        <span class="keyword">if</span> bLockHFov : <span class="comment"># <span class="doctag">NOTE:</span> change cy only</span></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span>  newCx / tan(HFov/2[angle]) -&gt; new focus distance</span></span><br><span class="line">            newDx = newCx / (oriCx / oriDx)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Generate new VFov</span></span><br><span class="line">            newVFovHalf = atan(newCy / newDx) <span class="comment"># type: <span class="built_in">float</span></span></span><br><span class="line">            newVFov = newVFovHalf * <span class="number">2</span></span><br><span class="line">            newHFov = oriHFovHalf * <span class="number">2</span></span><br><span class="line">        <span class="keyword">else</span>: <span class="comment"># <span class="doctag">NOTE:</span> change cx only</span></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span>  newCy / tan(VFov/2[angle]) -&gt; new focus distance</span></span><br><span class="line">            newDx = newCy / (oriCy / oriDx)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Generate new HFov</span></span><br><span class="line">            newHFovHalf = atan(newCx / newDx)  <span class="comment"># type: <span class="built_in">float</span></span></span><br><span class="line">            newHFov = newHFovHalf * <span class="number">2</span></span><br><span class="line">            newVFov = oriVFovHalf * <span class="number">2</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># NOTE : convert to angle</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> bRadian:</span><br><span class="line">            newHFov *= cls.RadToAngle</span><br><span class="line">            newVFov *= cls.RadToAngle</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (newHFov, newVFov, newDx)</span><br></pre></td></tr></table></figure><h1 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h1><img data-src="../img/PythonCameraFocalDistanceConvert/e374300d222847feb783651097dc1ad5.jpeg" alt="img"  /><p><img data-src="/../img/PythonCameraFocalDistanceConvert/51e64a7bcbac488f836207598b32413b.jpeg" alt="img"></p><p><img data-src="/../img/PythonCameraFocalDistanceConvert/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAcmVubWVuZ3Fpc2hlbmc=,size_20,color_FFFFFF,t_70,g_se,x_16.png" alt="在这里插入图片描述"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;用于转换 相机胶片 大小变化时的 等效焦距.&lt;/p&gt;</summary>
    
    
    
    <category term="水" scheme="http://mine-clever.art/categories/%E6%B0%B4/"/>
    
    
    <category term="Python" scheme="http://mine-clever.art/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>用Python加载Unreal蓝图</title>
    <link href="http://mine-clever.art/2022/10/16/LoadUnrealBpByPython/"/>
    <id>http://mine-clever.art/2022/10/16/LoadUnrealBpByPython/</id>
    <published>2022-10-16T10:42:32.000Z</published>
    <updated>2022-10-22T06:30:29.416Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>用Python加载Unreal蓝图</p><span id="more"></span>   <h1 id="python实现"><a href="#python实现" class="headerlink" title="python实现"></a>python实现</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bp_class_object_path = <span class="string">&#x27;&#123;&#125;_C&#x27;</span>.<span class="built_in">format</span>(asset.object_path)</span><br><span class="line"><span class="comment">#this is the slow bit as it has to load the object</span></span><br><span class="line">bp_gen_object = unreal.load_asset(bp_class_object_path) </span><br><span class="line">blueprint_class_default = unreal.get_default_object(bp_gen_object)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;用Python加载Unreal蓝图&lt;/p&gt;</summary>
    
    
    
    <category term="水" scheme="http://mine-clever.art/categories/%E6%B0%B4/"/>
    
    
    <category term="破事水" scheme="http://mine-clever.art/tags/%E7%A0%B4%E4%BA%8B%E6%B0%B4/"/>
    
  </entry>
  
  <entry>
    <title>Unreal 获取关联资产名单代码片段</title>
    <link href="http://mine-clever.art/2022/08/28/UnrealPyAssetReferencers/"/>
    <id>http://mine-clever.art/2022/08/28/UnrealPyAssetReferencers/</id>
    <published>2022-08-28T09:08:58.000Z</published>
    <updated>2022-08-28T09:13:57.275Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>有时候从UE中找到所有关联资产非常不方便.</p><p>搞来搞去很麻烦. 找了个时间搞了个py脚本专门输出一个资产关联列表.</p><p>人生苦短, CV大法好.</p><span id="more"></span>   <h1 id="Python-代码片段"><a href="#Python-代码片段" class="headerlink" title="Python 代码片段"></a>Python 代码片段</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># python=3.8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Script to find Unreal Project assets easily</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># How to Use ? Take a selection in AssetContentBrowser then run script with console.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> unreal <span class="keyword">as</span> unreal; ue = unreal</span><br><span class="line"><span class="keyword">import</span> subprocess <span class="keyword">as</span> subprocess</span><br><span class="line"><span class="keyword">import</span> os <span class="keyword">as</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Typing hint</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">import</span> typing</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> E:</span><br><span class="line">    <span class="built_in">print</span>(E)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">DoWinCopy</span>(<span class="params">inCopy:<span class="built_in">str</span></span>) :</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Copy to windows clipboard&quot;&quot;&quot;</span></span><br><span class="line">    subprocess.run([<span class="string">&#x27;clip.exe&#x27;</span>], <span class="built_in">input</span>=<span class="built_in">str</span>(inCopy).strip().encode(<span class="string">&#x27;utf-16&#x27;</span>), check=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SelectionHelper</span> (<span class="title class_ inherited__">object</span>) :</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Help to get current Selection @ World and @ Content&quot;&quot;&quot;</span></span><br><span class="line">    __projectContentPath = unreal.Paths.project_content_dir()</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetSelectedAssets</span> (cls) :</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">list</span>[ue.Object]</span></span><br><span class="line">        <span class="keyword">return</span> unreal.EditorUtilityLibrary.get_selected_assets()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetSelectedActors</span> (cls) :</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">list</span>[ue.Actor]</span></span><br><span class="line">        <span class="keyword">return</span> unreal.EditorLevelLibrary.get_selected_level_actors()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetFullPathByObject</span> (cls, inUObject: ue.Object) -&gt; <span class="built_in">str</span> :</span><br><span class="line">        <span class="keyword">return</span> unreal.SystemLibrary.get_path_name(inUObject)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ConvertPackagePathToFilePath</span> (cls, inPackagePath: <span class="built_in">str</span>) -&gt; <span class="built_in">str</span> :</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Convert &#x27;/Game/StarterContent/SomeName&#x27; to &#x27;Drive:/Project/Content/StarterContent/SomeName&#x27;&quot;&quot;&quot;</span></span><br><span class="line">        fileSysPath = os.path.join(cls.__projectContentPath,inPackagePath.replace(<span class="string">&quot;/Game/&quot;</span>,<span class="string">&quot;&quot;</span>))</span><br><span class="line">        <span class="keyword">return</span> fileSysPath</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ConvertFilePathToPackagePath</span> (cls, inFilePath: <span class="built_in">str</span>) -&gt; <span class="built_in">str</span> :</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Convert &#x27;Drive:/Project/Content/StarterContent/SomeName(.uasset)&#x27; to &#x27;/Game/StarterContent/SomeName&#x27;&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> inFilePath.replace(<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;/&quot;</span>).replace(<span class="string">&quot;.uasset&quot;</span>,<span class="string">&quot;&quot;</span>).replace(cls.__projectContentPath,<span class="string">&quot;/Game/&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ReferenceHelper</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">    __assetRegistryInstance: ue.AssetRegistry = unreal.AssetRegistryHelpers.get_asset_registry()</span><br><span class="line">    </span><br><span class="line">    __referenceOptions = unreal.AssetRegistryDependencyOptions()</span><br><span class="line">    __referenceOptions.include_hard_management_references = <span class="literal">True</span></span><br><span class="line">    __referenceOptions.include_hard_package_references = <span class="literal">True</span></span><br><span class="line">    __referenceOptions.include_soft_management_references = <span class="literal">True</span></span><br><span class="line">    __referenceOptions.include_soft_package_references = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetReferencersPathByPackagePath</span> (cls, inPackagePath: <span class="built_in">str</span>) :</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Ref to https://docs.unrealengine.com/4.27/en-US/PythonAPI/class/AssetRegistry.html&quot;&quot;&quot;</span></span><br><span class="line">        allReferencersPackage : <span class="built_in">list</span>[<span class="built_in">str</span>] = cls.__assetRegistryInstance.get_referencers(inPackagePath,cls.__referenceOptions)</span><br><span class="line">        <span class="keyword">return</span> allReferencersPackage</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetDependenciesPathByPackagePath</span> (cls, inPackagePath: <span class="built_in">str</span>) :</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Ref to https://docs.unrealengine.com/4.27/en-US/PythonAPI/class/AssetRegistry.html&quot;&quot;&quot;</span></span><br><span class="line">        allDependenciesPackage : <span class="built_in">list</span>[<span class="built_in">str</span>] = cls.__assetRegistryInstance.get_dependencies(inPackagePath,cls.__referenceOptions)</span><br><span class="line">        <span class="keyword">return</span> allDependenciesPackage</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetAllReferencersPathFromSelectedAssets</span> (cls) :</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Get all referenced assets path with current selection in AssetContent&quot;&quot;&quot;</span></span><br><span class="line">        assets = SelectionHelper.GetSelectedAssets()</span><br><span class="line">        assetPaths: <span class="built_in">set</span>[<span class="built_in">str</span>] = <span class="built_in">set</span>()</span><br><span class="line">        <span class="keyword">for</span> asset <span class="keyword">in</span> assets:</span><br><span class="line">            path = unreal.Paths.get_base_filename(asset.get_path_name(),remove_path=<span class="literal">False</span>)</span><br><span class="line">            assetPaths.add(path)</span><br><span class="line">            referencedPaths: <span class="built_in">list</span>[<span class="built_in">str</span>] = unreal.EditorAssetLibrary.find_package_referencers_for_asset(path)</span><br><span class="line">            assetPaths.update(referencedPaths)</span><br><span class="line">        <span class="keyword">return</span> assetPaths</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetAllDependenciesPath</span> (cls, assetArray , bDeep=<span class="literal">False</span>, maxDeep = <span class="number">10</span>) :</span><br><span class="line">        <span class="comment"># type: (typing.Iterable[ue.Object], <span class="built_in">bool</span> , <span class="built_in">int</span>) -&gt; <span class="built_in">set</span>[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Get all referenced assets path with input array of assets object&quot;&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> set is more fast than list !</span></span><br><span class="line">        assetsPath: <span class="built_in">set</span>[<span class="built_in">str</span>] = <span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line">        MakeValidPath: typing.<span class="type">Callable</span>[[<span class="built_in">list</span>[<span class="built_in">str</span>]], typing.Iterable[<span class="built_in">str</span>]] = \</span><br><span class="line">            <span class="keyword">lambda</span> inPaths : \</span><br><span class="line">                (<span class="built_in">str</span>(name) <span class="keyword">if</span> <span class="keyword">not</span> (<span class="built_in">str</span>(name).startswith(<span class="string">&quot;/Script/&quot;</span>) <span class="keyword">or</span> <span class="built_in">str</span>(name).startswith(<span class="string">&quot;/Engine/&quot;</span>)) <span class="keyword">else</span> <span class="literal">None</span> \</span><br><span class="line">                    <span class="keyword">for</span> name <span class="keyword">in</span> inPaths)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">DeepLoop</span> (inAssets: <span class="built_in">str</span>, deepCount=<span class="number">0</span>):</span><br><span class="line">            <span class="string">&quot;&quot;&quot;recursion to find all paths&quot;&quot;&quot;</span></span><br><span class="line">            <span class="keyword">if</span> deepCount &gt; maxDeep: <span class="keyword">return</span></span><br><span class="line">            deepCount+=<span class="number">1</span></span><br><span class="line">            insideAssetsPath:<span class="built_in">set</span>[<span class="built_in">str</span>] = <span class="built_in">set</span>()</span><br><span class="line">            insideDependenciesPath: <span class="built_in">list</span>[<span class="built_in">str</span>] = cls.GetDependenciesPathByPackagePath(inAssets)</span><br><span class="line">            insideAssetsPath.update(MakeValidPath (insideDependenciesPath))</span><br><span class="line">            insideAssetsPath.add(inAssets)</span><br><span class="line">            insideAssetsPath.discard(<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Find Path not in assetsPath</span></span><br><span class="line">            <span class="keyword">for</span> diffAssetsPath <span class="keyword">in</span> insideAssetsPath:</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> diffAssetsPath <span class="keyword">in</span> assetsPath:</span><br><span class="line">                    assetsPath.add(diffAssetsPath)</span><br><span class="line">                    DeepLoop(diffAssetsPath,deepCount)</span><br><span class="line">            assetsPath.update(insideAssetsPath)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> asset <span class="keyword">in</span> assetArray:</span><br><span class="line">            path = unreal.Paths.get_base_filename(asset.get_path_name(),remove_path=<span class="literal">False</span>)</span><br><span class="line">            DependenciesPath: <span class="built_in">list</span>[<span class="built_in">str</span>] = cls.GetDependenciesPathByPackagePath(path)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(DependenciesPath, <span class="built_in">type</span>(<span class="literal">None</span>)):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> remove all script path</span></span><br><span class="line">            assetsPath.update(MakeValidPath(DependenciesPath))</span><br><span class="line">            assetsPath.add(path)</span><br><span class="line">            assetsPath.discard(<span class="literal">None</span>)</span><br><span class="line">            <span class="keyword">if</span> bDeep:</span><br><span class="line">                <span class="keyword">for</span> subAsset <span class="keyword">in</span> assetsPath.copy():</span><br><span class="line">                    DeepLoop(subAsset)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> assetsPath</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetAllDependenciesPathFromSelectedAssets</span> (cls, bDeep=<span class="literal">False</span>, maxDeep = <span class="number">10</span>) :</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Get all referenced assets path with current selection in AssetContent&quot;&quot;&quot;</span></span><br><span class="line">        assets = SelectionHelper.GetSelectedAssets()</span><br><span class="line">        <span class="keyword">return</span> cls.GetAllDependenciesPath(assets, bDeep, maxDeep)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetAllDependenciesPathFromSelectedMeshActors</span> (cls, bDeep=<span class="literal">False</span>, maxDeep = <span class="number">10</span>) :</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Get all referenced assets path with current selection in AssetContent&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        assets: <span class="built_in">set</span>[ue.Object] = <span class="built_in">set</span>()</span><br><span class="line">        allActors = SelectionHelper.GetSelectedActors()</span><br><span class="line">        <span class="keyword">for</span> actor <span class="keyword">in</span> allActors:</span><br><span class="line">            staticMeshComponents: <span class="built_in">list</span>[ue.StaticMeshComponent] = actor.get_components_by_class(ue.StaticMeshComponent)</span><br><span class="line">            skeletalMeshComponents: <span class="built_in">list</span>[ue.SkeletalMeshComponent]  = actor.get_components_by_class(ue.SkeletalMeshComponent)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(staticMeshComponents) &gt; <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">for</span> comp <span class="keyword">in</span> staticMeshComponents:</span><br><span class="line">                    assets.add(comp.static_mesh)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(skeletalMeshComponents) &gt;<span class="number">0</span> :</span><br><span class="line">                <span class="keyword">for</span> comp <span class="keyword">in</span> skeletalMeshComponents:</span><br><span class="line">                    assets.add(comp.skeletal_mesh)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> cls.GetAllDependenciesPath(assets, bDeep, maxDeep)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">RunScript</span>(<span class="params">bViewActor=<span class="literal">True</span>,bDoCopy=<span class="literal">True</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Choose from current ViewportActors or Assets in ContentBrowser&quot;&quot;&quot;</span></span><br><span class="line">    method = ReferenceHelper.GetAllDependenciesPathFromSelectedMeshActors \</span><br><span class="line">        <span class="keyword">if</span> bViewActor <span class="keyword">else</span> ReferenceHelper.GetAllDependenciesPathFromSelectedAssets</span><br><span class="line">    result = <span class="built_in">list</span>(method(bDeep=<span class="literal">True</span>,maxDeep=<span class="number">10</span>));result.sort()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># <span class="doctag">NOTE:</span> Make ContentBrowser sync with current result list </span></span><br><span class="line">    unreal.EditorAssetLibrary.sync_browser_to_objects(result)</span><br><span class="line">    <span class="comment"># for strName in result : print(strName)</span></span><br><span class="line">    <span class="keyword">if</span> bDoCopy: DoWinCopy(result)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    RunScript(bViewActor=<span class="literal">True</span>,bDoCopy=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;有时候从UE中找到所有关联资产非常不方便.&lt;/p&gt;
&lt;p&gt;搞来搞去很麻烦. 找了个时间搞了个py脚本专门输出一个资产关联列表.&lt;/p&gt;
&lt;p&gt;人生苦短, CV大法好.&lt;/p&gt;</summary>
    
    
    
    <category term="水" scheme="http://mine-clever.art/categories/%E6%B0%B4/"/>
    
    
    <category term="python" scheme="http://mine-clever.art/tags/python/"/>
    
    <category term="unreal" scheme="http://mine-clever.art/tags/unreal/"/>
    
  </entry>
  
  <entry>
    <title>找文件用的Python代码片段</title>
    <link href="http://mine-clever.art/2022/08/20/PyCodeToTraversePaths/"/>
    <id>http://mine-clever.art/2022/08/20/PyCodeToTraversePaths/</id>
    <published>2022-08-20T07:04:42.000Z</published>
    <updated>2022-08-21T12:14:07.140Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>python 很方便</p><p>但是用的时候还是要有手.</p><p>索性弄个片段, 可以只用脚 去找文件了</p><span id="more"></span>   <h1 id="代码片段"><a href="#代码片段" class="headerlink" title="代码片段"></a>代码片段</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># python=2.7</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os <span class="keyword">as</span> os</span><br><span class="line"><span class="keyword">import</span> re <span class="keyword">as</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># <span class="doctag">NOTE:</span> 仅用于类型注释</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">import</span> typing <span class="keyword">as</span> typing</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FilePathProcessor</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="string">u&quot;&quot;&quot;用于处理文件的类&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">CheckIfDirExist</span> (cls, dirPath):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>)-&gt;<span class="literal">None</span></span></span><br><span class="line">        <span class="string">u&quot;&quot;&quot;判断文件夹是否存在, 否则抛出异常&quot;&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(dirPath):</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">u&quot;不存在文件夹, 或不是文件夹 : &#123;&#125;&quot;</span>.<span class="built_in">format</span>(dirPath))</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetAllFileWithExt</span> (cls, dirPath, extFormat, bSingleDir=<span class="literal">True</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>, <span class="built_in">str</span>, <span class="built_in">bool</span>) -&gt; typing.Iterable[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="string">u&quot;&quot;&quot;遍历文件夹以寻找特定格式的文件&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> 判断文件夹是否存在, 否则抛出异常</span></span><br><span class="line">        cls.CheckIfDirExist (dirPath)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> 小写后缀扩展格式</span></span><br><span class="line">        lowerExtFormat = extFormat.lower()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> 返回一个 路径生成器</span></span><br><span class="line">        <span class="keyword">if</span> bSingleDir: <span class="comment"># NOTE 单层模式</span></span><br><span class="line">            <span class="keyword">for</span> fileName <span class="keyword">in</span> os.listdir(dirPath):</span><br><span class="line">                tempFilePath = os.path.join(dirPath,fileName)</span><br><span class="line">                <span class="comment"># <span class="doctag">NOTE:</span> 非目录 &amp;&amp; 以extFormat结尾</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">not</span> os.path.isdir(tempFilePath)) <span class="keyword">and</span> (fileName.lower().endswith(lowerExtFormat)):</span><br><span class="line">                    <span class="keyword">yield</span> tempFilePath</span><br><span class="line">        <span class="keyword">else</span> : <span class="comment"># NOTE 遍历所有子目录</span></span><br><span class="line">            <span class="keyword">for</span> dirPath,dirNames,fileNames <span class="keyword">in</span> os.walk(dirPath):</span><br><span class="line">                <span class="keyword">for</span> fileName <span class="keyword">in</span> fileNames:</span><br><span class="line">                    <span class="comment"># <span class="doctag">NOTE:</span> 以extFormat结尾</span></span><br><span class="line">                    <span class="keyword">if</span> fileName.lower().endswith(lowerExtFormat):</span><br><span class="line">                        <span class="keyword">yield</span> os.path.join(dirPath, fileName)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetAllFileRegexWithExt</span> (cls, dirPath, extFormat, bSingleDir=<span class="literal">True</span>, bUseRegex=<span class="literal">False</span>, regexRule=<span class="string">&quot;&quot;</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>, <span class="built_in">str</span>, <span class="built_in">bool</span>, <span class="built_in">bool</span>, <span class="built_in">str</span>) -&gt; typing.Iterable[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="string">u&quot;&quot;&quot;遍历文件夹以寻找特定格式的文件, 且可选是否包含特定的Regex&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        pathGenerator = cls.GetAllFileWithExt(dirPath,extFormat,bSingleDir)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> bUseRegex: <span class="comment"># NOTE 不使用正则表达式</span></span><br><span class="line">            <span class="keyword">for</span> filePath <span class="keyword">in</span> pathGenerator:</span><br><span class="line">                <span class="keyword">yield</span> filePath</span><br><span class="line">        <span class="keyword">else</span> : <span class="comment"># NOTE 使用正则表达式</span></span><br><span class="line">            regexMatchRule = re.<span class="built_in">compile</span>(regexRule,re.I)</span><br><span class="line">            <span class="keyword">for</span> filePath <span class="keyword">in</span> pathGenerator:</span><br><span class="line">                regexMatched = regexMatchRule.search(os.path.basename(filePath))</span><br><span class="line">                <span class="keyword">if</span> regexMatched != <span class="literal">None</span> :</span><br><span class="line">                    <span class="keyword">yield</span> filePath</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># <span class="doctag">NOTE:</span> Easy CV!</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    targetDirPath = os.environ[<span class="string">&quot;userprofile&quot;</span>]</span><br><span class="line">    targetExtFormat = <span class="string">&quot;.fbx&quot;</span></span><br><span class="line">    bUseSingleDir = <span class="literal">False</span></span><br><span class="line">    bUseRegex = <span class="literal">True</span></span><br><span class="line">    regexRule = <span class="string">r&quot;^anim.*?&quot;</span></span><br><span class="line">    filePathGenerator = FilePathProcessor.GetAllFileRegexWithExt(</span><br><span class="line">                        targetDirPath,</span><br><span class="line">                        targetExtFormat,</span><br><span class="line">                        bUseSingleDir,</span><br><span class="line">                        bUseRegex,</span><br><span class="line">                        regexRule)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> filePath <span class="keyword">in</span> filePathGenerator :</span><br><span class="line">        <span class="built_in">print</span>(filePath)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;python 很方便&lt;/p&gt;
&lt;p&gt;但是用的时候还是要有手.&lt;/p&gt;
&lt;p&gt;索性弄个片段, 可以只用脚 去找文件了&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="http://mine-clever.art/categories/python/"/>
    
    
    <category term="破事水" scheme="http://mine-clever.art/tags/%E7%A0%B4%E4%BA%8B%E6%B0%B4/"/>
    
  </entry>
  
  <entry>
    <title>切线空间和对象空间的转换</title>
    <link href="http://mine-clever.art/2022/07/07/TangetSwapObjectSpaceShader/"/>
    <id>http://mine-clever.art/2022/07/07/TangetSwapObjectSpaceShader/</id>
    <published>2022-07-06T16:56:31.000Z</published>
    <updated>2022-07-06T17:03:11.576Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>因为一时找不到工具用来转换模型的切线空间和对象空间.</p><p>整了一个Substance Painter 可以方便直接处理.</p><span id="more"></span>   <hr><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>由于Substance的引擎可以直接读取TBN信息.</p><p>通过构建TBN矩阵的转置与否,直接转换. </p><p>相当简单.</p><p>存储成 <strong>.glsl</strong> 后缀格式,直接拖进Substance Painter</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">This Shader was made for Substance Painter</span></span><br><span class="line"><span class="comment">help converting Tangent Space into Obeject/World Space</span></span><br><span class="line"><span class="comment">or converting ObjectSpace to Tangent Space</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#define BLACK_COLOR vec4(0.0f,0.0f,0.0f,1.0f)</span></span><br><span class="line"><span class="meta">#define WHITE_COLOR vec4(1.0f,1.0f,1.0f,1.0f)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import lib-utils.glsl</span><br><span class="line">import lib-env.glsl</span><br><span class="line">import lib-normal.glsl</span><br><span class="line">import lib-alpha.glsl</span><br><span class="line">import lib-vectors.glsl</span><br><span class="line">import lib-sparse.glsl</span><br><span class="line">import lib-sampler.glsl</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//--------texure Sampler ---------------------------------------------------//</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//: param auto channel_user0</span></span><br><span class="line"><span class="keyword">uniform</span> SamplerSparse InputSpaceTexSampler;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//-------- About ----------------------------------------------------//</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: true, &quot;label&quot;: &quot;MineClever&#x27;s Space Converter&quot;, &quot;group&quot;: &quot;About&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> tAuthor;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: true, &quot;label&quot;: &quot;Version 0.0.3&quot;, &quot;group&quot;: &quot;About&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> tAuthor_version;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//-------- Space ----------------------------------------------------//</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;Tangent Space&quot;, &quot;group&quot;: &quot;Convert Space&quot; &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bSwapSpace;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123;</span></span><br><span class="line"><span class="comment">//:   &quot;default&quot;: 0,</span></span><br><span class="line"><span class="comment">//:   &quot;label&quot;: &quot;Remap Input XYZ&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;widget&quot;: &quot;combobox&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;group&quot;: &quot;Convert Space&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;values&quot;: &#123;</span></span><br><span class="line"><span class="comment">//:     &quot;XYZ&quot;: 0,</span></span><br><span class="line"><span class="comment">//:     &quot;XZY&quot;: 1,</span></span><br><span class="line"><span class="comment">//:     &quot;YXZ&quot;: 2,</span></span><br><span class="line"><span class="comment">//:     &quot;YZX&quot;: 3,</span></span><br><span class="line"><span class="comment">//:     &quot;ZXY&quot;: 4,</span></span><br><span class="line"><span class="comment">//:     &quot;ZYX&quot;: 5</span></span><br><span class="line"><span class="comment">//:   &#125;</span></span><br><span class="line"><span class="comment">//: &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">int</span> XYZOrderType;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;-X&quot;, &quot;group&quot;: &quot;Convert Space&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> Xnegative;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;-Y&quot;, &quot;group&quot;: &quot;Convert Space&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> Ynegative;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;-Z&quot;, &quot;group&quot;: &quot;Convert Space&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> Znegative;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//-------- Tools ----------------------------------------------------//</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: true, &quot;label&quot;: &quot;unsigned Input Image&quot;, &quot;group&quot;: &quot;Input&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bPacked;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: true, &quot;label&quot;: &quot;Compute Binormal Direction&quot;, &quot;group&quot;: &quot;Input&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bInputTBN;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;Decode Input Gamma&quot;, &quot;group&quot;: &quot;Input&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bInputGamma;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123;</span></span><br><span class="line"><span class="comment">//:   &quot;default&quot;: 0,</span></span><br><span class="line"><span class="comment">//:   &quot;label&quot;: &quot;Input Gamma Type&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;widget&quot;: &quot;combobox&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;group&quot;: &quot;Input&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;values&quot;: &#123;</span></span><br><span class="line"><span class="comment">//:     &quot;sRGB&quot;: 0,</span></span><br><span class="line"><span class="comment">//:     &quot;Gamma 2.2 (Tga)&quot;: 1</span></span><br><span class="line"><span class="comment">//:   &#125;</span></span><br><span class="line"><span class="comment">//: &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">int</span> EnumGammaType;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;Flip Y&quot;, &quot;group&quot;: &quot;Output&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bFlipY;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;Use Output Gamma&quot;, &quot;group&quot;: &quot;Output&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bOutputGamma;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123;</span></span><br><span class="line"><span class="comment">//:   &quot;default&quot;: 0,</span></span><br><span class="line"><span class="comment">//:   &quot;label&quot;: &quot;Output Gamma Type&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;widget&quot;: &quot;combobox&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;group&quot;: &quot;Output&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;values&quot;: &#123;</span></span><br><span class="line"><span class="comment">//:     &quot;sRGB&quot;: 0,</span></span><br><span class="line"><span class="comment">//:     &quot;Gamma 2.2 (Tga)&quot;: 1</span></span><br><span class="line"><span class="comment">//:   &#125;</span></span><br><span class="line"><span class="comment">//: &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">int</span> EnumOutputGamma;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;Use Signed Float(Exr Only)&quot;, &quot;group&quot;: &quot;Output&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bOutputSigned;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;Normalize Output&quot;, &quot;group&quot;: &quot;Output&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bOutputNormalized;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//-------- Debug ----------------------------------------------------//</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123;</span></span><br><span class="line"><span class="comment">//:   &quot;default&quot;: 0,</span></span><br><span class="line"><span class="comment">//:   &quot;label&quot;: &quot;Viewport&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;widget&quot;: &quot;combobox&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;group&quot;: &quot;Debug&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;values&quot;: &#123;</span></span><br><span class="line"><span class="comment">//:     &quot;Output Map&quot;: 0,</span></span><br><span class="line"><span class="comment">//:     &quot;Input Map&quot;: 1</span></span><br><span class="line"><span class="comment">//:   &#125;</span></span><br><span class="line"><span class="comment">//: &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">int</span> EnumDebugView;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">// HLSL function help to port/cast</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> saturate(<span class="type">float</span> v)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">clamp</span>(v, <span class="number">0.0</span>, <span class="number">1.0</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">vec2</span> saturate(<span class="type">vec2</span> v)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">clamp</span>(v, <span class="number">0.0</span>, <span class="number">1.0</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">vec3</span> saturate(<span class="type">vec3</span> v)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">clamp</span>(v, <span class="number">0.0</span>, <span class="number">1.0</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">vec4</span> saturate(<span class="type">vec4</span> v)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">clamp</span>(v, <span class="number">0.0</span>, <span class="number">1.0</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//custom Substance engine function</span></span><br><span class="line"><span class="type">float</span> sampleWithDefault(SamplerSparse sampler, SparseCoord coord, <span class="type">float</span> defaultValue)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">vec2</span> value = textureSparse(sampler, coord).rg;</span><br><span class="line"><span class="keyword">return</span> value.r + defaultValue * (<span class="number">1.0</span> - value.g);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">vec3</span> sampleWithColor(SamplerSparse sampler, SparseCoord coord,<span class="type">vec3</span> defaultColor)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">vec4</span> Color = textureSparse(sampler, coord).rgba;</span><br><span class="line">    Color.rgb = <span class="built_in">mix</span>(defaultColor.rgb, Color.rgb, Color.a);</span><br><span class="line"><span class="keyword">return</span> Color.rgb;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* build TNB Matrix InputValue pixel shader*/</span></span><br><span class="line"><span class="type">mat3</span> buildTBN (<span class="type">vec3</span> T, <span class="type">vec3</span> B, <span class="type">vec3</span> N)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">mat3</span> (T,B,N);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* easily switching the range between [0,1] and [-1,1]*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">vec3</span> unpackNormalMap (<span class="type">vec3</span> InputValue)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">vec3</span> OUT;</span><br><span class="line">    <span class="comment">//OUT = (InputValue - 0.5f) * 2.0f;</span></span><br><span class="line">    OUT = <span class="number">2</span> * InputValue - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> OUT;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">vec4</span> unpackNormalMap (<span class="type">vec4</span> InputValue)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">vec4</span> OUT;</span><br><span class="line">    OUT.xyz = unpackNormalMap(InputValue.xyz);</span><br><span class="line">    OUT.w = InputValue.w;</span><br><span class="line">    <span class="keyword">return</span> OUT;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">vec3</span> packNormalMap (<span class="type">vec3</span> InputValue)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">vec3</span> OUT;</span><br><span class="line">    <span class="comment">//OUT = ( InputValue + 1.0f ) * 0.5f;</span></span><br><span class="line">    OUT = <span class="number">0.5</span> * InputValue + <span class="number">0.5</span>;</span><br><span class="line">    <span class="keyword">return</span> OUT;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> rcp (<span class="type">float</span> InputValue)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1.0</span>f/InputValue;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Gamma Function designed for user*/</span></span><br><span class="line"><span class="type">vec3</span> deGamma (<span class="type">vec3</span> InputValue, <span class="type">int</span> gammaType = <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    OUT = (gammaType == <span class="number">0</span>) ? linear2sRGB(InputValue) : <span class="built_in">pow</span>(InputValue,<span class="type">vec3</span>(rcp(<span class="number">2.2</span>)));</span><br><span class="line">    <span class="keyword">return</span> OUT;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">vec3</span> enGamma (<span class="type">vec3</span> InputValue, <span class="type">int</span> gammaType = <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    OUT = (gammaType == <span class="number">0</span>) ? sRGB2linear(InputValue) : <span class="built_in">pow</span>(InputValue,<span class="type">vec3</span>(<span class="number">2.2</span>));</span><br><span class="line">    <span class="keyword">return</span> OUT;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* This function was desigined to make swizzle xyz by user */</span></span><br><span class="line"><span class="type">vec3</span> remapXYZorder (<span class="type">vec3</span> InputValue, <span class="type">int</span> orderType)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">vec3</span> OUT;</span><br><span class="line">    <span class="keyword">switch</span>(orderType)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span> :</span><br><span class="line">            OUT.xyz = InputValue.xzy;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span> :</span><br><span class="line">            OUT.xyz = InputValue.yxz;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span> :</span><br><span class="line">            OUT.xyz = InputValue.yzx;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span> :</span><br><span class="line">            OUT.xyz = InputValue.zxy;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span> :</span><br><span class="line">            OUT.xyz = InputValue.zyx;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            OUT.xyz = InputValue.xyz;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> OUT;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* fragmentShader Here (surface shader) */</span></span><br><span class="line"><span class="type">void</span> shade(V2F inputs) &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="type">vec3</span> T,B,N;</span><br><span class="line">    <span class="comment">/* use engine function to get correct TBN */</span></span><br><span class="line">    <span class="comment">//LocalVectors vectors = computeLocalFrame(inputs);</span></span><br><span class="line">    <span class="comment">// N = vectors.normal;</span></span><br><span class="line">    <span class="comment">// B = vectors.bitangent;</span></span><br><span class="line">    <span class="comment">// T = vectors.tangent;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Compute by ourself */</span></span><br><span class="line">    N = <span class="built_in">normalize</span>(inputs.normal);</span><br><span class="line">    T = <span class="built_in">normalize</span>(inputs.tangent);</span><br><span class="line">    B = <span class="built_in">cross</span>(N,T);</span><br><span class="line">    <span class="type">float</span> binormalDirection = (<span class="built_in">dot</span>(B, inputs.bitangent) &lt; <span class="number">0.0</span>) &amp;&amp; (bInputTBN) ? <span class="number">-1</span> : <span class="number">1</span>;</span><br><span class="line">    B *= binormalDirection;</span><br><span class="line"></span><br><span class="line">    <span class="type">mat3</span> TBN = buildTBN(T, B, N);</span><br><span class="line"></span><br><span class="line">    TBN = bSwapSpace ? <span class="built_in">transpose</span>(TBN) : TBN;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* mapping [0,1] to [-1,1]*/</span></span><br><span class="line">    <span class="type">vec3</span> XYZnegative = <span class="number">1</span> - <span class="type">vec3</span>(Xnegative, Ynegative , Znegative) * <span class="number">2</span> ;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">/* sample input map with filpper */</span></span><br><span class="line">    <span class="type">vec3</span> originInputSpaceColor;</span><br><span class="line">    originInputSpaceColor = sampleWithColor(InputSpaceTexSampler, inputs.sparse_coord, N);</span><br><span class="line"></span><br><span class="line">    originInputSpaceColor = bPacked ? unpackNormalMap(originInputSpaceColor) : originInputSpaceColor;</span><br><span class="line"></span><br><span class="line">    originInputSpaceColor = remapXYZorder(originInputSpaceColor,XYZOrderType) * XYZnegative;</span><br><span class="line">    <span class="type">vec3</span> inputSpaceColor = originInputSpaceColor;</span><br><span class="line">    </span><br><span class="line">    inputSpaceColor = bInputGamma ? deGamma(inputSpaceColor, EnumGammaType) : inputSpaceColor;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* converting Space by TBN Matrix */</span></span><br><span class="line">    <span class="type">vec3</span> outputSpaceColor = inputSpaceColor.rgb * TBN;</span><br><span class="line"></span><br><span class="line">    outputSpaceColor = bOutputNormalized ? <span class="built_in">normalize</span>(outputSpaceColor) : outputSpaceColor;</span><br><span class="line"></span><br><span class="line">    outputSpaceColor.y = bFlipY ? -outputSpaceColor.y : outputSpaceColor.y;</span><br><span class="line"></span><br><span class="line">    outputSpaceColor = bOutputSigned ? outputSpaceColor : packNormalMap( outputSpaceColor );</span><br><span class="line"></span><br><span class="line">    outputSpaceColor = bOutputGamma ? enGamma(outputSpaceColor, EnumOutputGamma) : outputSpaceColor;</span><br><span class="line"></span><br><span class="line">    outputSpaceColor = <span class="built_in">mix</span>(outputSpaceColor,inputSpaceColor,EnumDebugView * <span class="number">1.0</span>);</span><br><span class="line"></span><br><span class="line">    diffuseShadingOutput(outputSpaceColor.rgb);<span class="comment">//sv_target::COLOR</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;因为一时找不到工具用来转换模型的切线空间和对象空间.&lt;/p&gt;
&lt;p&gt;整了一个Substance Painter 可以方便直接处理.&lt;/p&gt;</summary>
    
    
    
    <category term="水" scheme="http://mine-clever.art/categories/%E6%B0%B4/"/>
    
    
    <category term="破事水" scheme="http://mine-clever.art/tags/%E7%A0%B4%E4%BA%8B%E6%B0%B4/"/>
    
  </entry>
  
  <entry>
    <title>矩阵变换</title>
    <link href="http://mine-clever.art/2022/07/03/MatrixTrans/"/>
    <id>http://mine-clever.art/2022/07/03/MatrixTrans/</id>
    <published>2022-07-02T18:08:16.000Z</published>
    <updated>2022-07-02T18:12:48.840Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>一些矩阵处理的常用规则</p><span id="more"></span>  <h1 id="理解左乘和右乘"><a href="#理解左乘和右乘" class="headerlink" title="理解左乘和右乘"></a>理解左乘和右乘</h1><p>当三维坐标点发生旋转时，如果采用矩阵运算就会需要考虑“左乘”和“右乘”。</p><p>若绕静坐标系（世界坐标系）旋转，则左乘，也是变换矩阵*坐标矩阵；</p><p>若是绕动坐标系旋转（自身建立一个坐标系），则右乘，也就是坐标矩阵*变换矩阵。</p><h1 id="视角"><a href="#视角" class="headerlink" title="视角"></a>视角</h1><p>总结来说, 这是个视角问题 , 右乘获取新坐标矩阵 , 左乘还是原来的坐标矩阵.</p><p>类似于 旋转地图自身固定(右乘) 与 旋转自身地图固定(左乘) 的区别</p><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">obj_local_matrix = obj_world_matrix * inverse_parent_world_matrix <span class="comment"># 右乘</span></span><br><span class="line">obj_world_matrix = obj_local_matrix * parent_world_matrix <span class="comment"># 左乘</span></span><br><span class="line"></span><br><span class="line">obj_relative_to_other_matrix = obj_world_matrix * inverse_other_world_matrix</span><br><span class="line">obj_world_matrix = obj_relative_to_other_matrix * other_world_matrix</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;一些矩阵处理的常用规则&lt;/p&gt;</summary>
    
    
    
    <category term="水" scheme="http://mine-clever.art/categories/%E6%B0%B4/"/>
    
    
    <category term="矩阵" scheme="http://mine-clever.art/tags/%E7%9F%A9%E9%98%B5/"/>
    
  </entry>
  
  <entry>
    <title>实用 Unreal Engine API</title>
    <link href="http://mine-clever.art/2022/06/14/UnrealUsefulApi/"/>
    <id>http://mine-clever.art/2022/06/14/UnrealUsefulApi/</id>
    <published>2022-06-14T11:31:29.000Z</published>
    <updated>2022-06-14T11:35:39.940Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>一些实用的Unreal Engine API方便查找</p><span id="more"></span>   <h1 id="基于UKismetSystemLibrary"><a href="#基于UKismetSystemLibrary" class="headerlink" title="基于UKismetSystemLibrary"></a>基于UKismetSystemLibrary</h1><p>转自 : <a href="https://www.cnblogs.com/shiroe/p/14743901.html">https://www.cnblogs.com/shiroe/p/14743901.html</a></p><h2 id="获取各类名称"><a href="#获取各类名称" class="headerlink" title="获取各类名称"></a>获取各类名称</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Returns the actual object name.</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category = <span class="string">&quot;Utilities&quot;</span>)</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetObjectName</span><span class="params">(<span class="type">const</span> UObject* Object)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the full path to the specified object.</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities&quot;</span>)</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetPathName</span><span class="params">(<span class="type">const</span> UObject* Object)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the display name (or actor label), for displaying as a debugging aid.</span></span><br><span class="line"><span class="comment">// Note: In editor builds, this is the actor label.  In non-editor builds, this is the actual object name.  This function should not be used to uniquely identify actors!</span></span><br><span class="line"><span class="comment">// It is not localized and should not be used for display to an end user of a game.</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities&quot;</span>)</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetDisplayName</span><span class="params">(<span class="type">const</span> UObject* Object)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the display name of a class</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category = <span class="string">&quot;Utilities&quot;</span>, meta = (DisplayName = <span class="string">&quot;Get Display Name&quot;</span>))</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetClassDisplayName</span><span class="params">(UClass* Class)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Engine build number, for displaying to end users.</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Development&quot;</span>, meta=(BlueprintThreadSafe))</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetEngineVersion</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Get the name of the current game  */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Game&quot;</span>, meta=(BlueprintThreadSafe))</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetGameName</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Get the current user name from the OS */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities|Platform&quot;</span>)</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetPlatformUserName</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the platform specific unique device id */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities|Platform&quot;</span>, meta = (DeprecatedFunction, DeprecationMessage = <span class="string">&quot;Use GetDeviceId instead&quot;</span>))</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetUniqueDeviceId</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the platform specific unique device id */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities|Platform&quot;</span>)</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetDeviceId</span><span class="params">()</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="获取各种状态"><a href="#获取各种状态" class="headerlink" title="获取各种状态"></a>获取各种状态</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** Returns whether the world this object is in is the host or not */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Networking&quot;</span>, meta=(WorldContext=<span class="string">&quot;WorldContextObject&quot;</span>) )</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsServer</span><span class="params">(<span class="type">const</span> UObject* WorldContextObject)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns whether this is running on a dedicated server */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Networking&quot;</span>, meta=(WorldContext=<span class="string">&quot;WorldContextObject&quot;</span>))</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsDedicatedServer</span><span class="params">(<span class="type">const</span> UObject* WorldContextObject)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns whether this game instance is stand alone (no networking). */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Networking&quot;</span>, meta=(WorldContext=<span class="string">&quot;WorldContextObject&quot;</span>))</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsStandalone</span><span class="params">(<span class="type">const</span> UObject* WorldContextObject)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns whether we&#x27;re currently running in split screen (more than one local player). */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category = <span class="string">&quot;Utilities&quot;</span>, meta = (WorldContext = <span class="string">&quot;WorldContextObject&quot;</span>))</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsSplitScreen</span><span class="params">(<span class="type">const</span> UObject* WorldContextObject)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns whether this is a build that is packaged for distribution */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Development&quot;</span>, meta=(BlueprintThreadSafe))</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsPackagedForDistribution</span><span class="params">()</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="获取时间"><a href="#获取时间" class="headerlink" title="获取时间"></a>获取时间</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Get the current game time, in seconds. This stops when the game is paused and is affected by slomo. </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @param WorldContextObjectWorld context</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities|Time&quot;</span>, meta=(WorldContext=<span class="string">&quot;WorldContextObject&quot;</span>) )</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">float</span> <span class="title">GetGameTimeInSeconds</span><span class="params">(<span class="type">const</span> UObject* WorldContextObject)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the value of GFrameCounter, a running count of the number of frames that have occurred. */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category = <span class="string">&quot;Utilities&quot;</span>)</span><br><span class="line"><span class="function"><span class="type">static</span> int64 <span class="title">GetFrameCount</span><span class="params">()</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="获取常见路径"><a href="#获取常见路径" class="headerlink" title="获取常见路径"></a>获取常见路径</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Returns the full system path to a UObject</span></span><br><span class="line"><span class="comment">// If given a non-asset UObject, it will return an empty string</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category = <span class="string">&quot;Utilities&quot;</span>)</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetSystemPath</span><span class="params">(<span class="type">const</span> UObject* Object)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Get the directory of the current project */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities|Paths&quot;</span>, meta=(BlueprintThreadSafe))</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetProjectDirectory</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Get the content directory of the current project */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities|Paths&quot;</span>, meta=(BlueprintThreadSafe))</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetProjectContentDirectory</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Get the saved directory of the current project */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities|Paths&quot;</span>, meta=(BlueprintThreadSafe))</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetProjectSavedDirectory</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Get the current user dir from the OS */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category = <span class="string">&quot;Utilities|Platform&quot;</span>)</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetPlatformUserDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="路径转换"><a href="#路径转换" class="headerlink" title="路径转换"></a>路径转换</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Converts passed in filename to use a relative path */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities|Paths&quot;</span>)</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ConvertToRelativePath</span><span class="params">(<span class="type">const</span> FString&amp; Filename)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Converts passed in filename to use a absolute path */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities|Paths&quot;</span>)</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ConvertToAbsolutePath</span><span class="params">(<span class="type">const</span> FString&amp; Filename)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Convert all / and \ to TEXT(&quot;/&quot;) */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities|Paths&quot;</span>, meta=(BlueprintThreadSafe))</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">NormalizeFilename</span><span class="params">(<span class="type">const</span> FString&amp; InFilename)</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="FPaths-——-更全的路径"><a href="#FPaths-——-更全的路径" class="headerlink" title="FPaths —— 更全的路径"></a>FPaths —— 更全的路径</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Path helpers for retrieving game dir, engine dir, etc.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CORE_API</span> FPaths</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Should the &quot;saved&quot; directory structures be rooted in the user dir or relative to the &quot;engine/game&quot; </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">ShouldSaveToUserDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory the application was launched from (useful for commandline utilities)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">LaunchDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Returns the base directory of the &quot;core&quot; engine that can be shared across</span></span><br><span class="line"><span class="comment"> * several games or across games &amp; mods. Shaders and base localization files</span></span><br><span class="line"><span class="comment"> * e.g. reside in the engine directory.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return engine directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Returns the root directory for user-specific engine files. Always writable.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* @return root user directory</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineUserDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Returns the root directory for user-specific engine files which can be shared between versions. Always writable.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* @return root user directory</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineVersionAgnosticUserDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Returns the content directory of the &quot;core&quot; engine that can be shared across</span></span><br><span class="line"><span class="comment"> * several games or across games &amp; mods. </span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return engine content directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineContentDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory the root configuration files are located.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return root config directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineConfigDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the Editor Settings directory of the engine</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return Editor Settings directory.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineEditorSettingsDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the intermediate directory of the engine</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return content directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineIntermediateDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the saved directory of the engine</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return Saved directory.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineSavedDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the plugins directory of the engine</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return Plugins directory.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EnginePluginsDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory for default Editor UI Layout files of the engine</span></span><br><span class="line"><span class="comment"> * @return Directory for default Editor UI Layout files.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineDefaultLayoutDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory for project Editor UI Layout files of the engine</span></span><br><span class="line"><span class="comment"> * @return Directory for project Editor UI Layout files.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineProjectLayoutDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory for user-generated Editor UI Layout files of the engine</span></span><br><span class="line"><span class="comment"> * @return Directory for user-generated Editor UI Layout files.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineUserLayoutDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* Returns the base directory enterprise directory.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* @return enterprise directory</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EnterpriseDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Returns the enterprise plugins directory</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* @return Plugins directory.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EnterprisePluginsDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Returns the enterprise FeaturePack directory</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* @return FeaturePack directory.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EnterpriseFeaturePackDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory where engine platform extensions reside</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return engine platform extensions directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EnginePlatformExtensionsDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory where the project&#x27;s platform extensions reside</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return project platform extensions directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProjectPlatformExtensionsDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns platform and restricted extensions that are present and valid (for platforms, it uses FDataDrivePlatformInfo to determine valid platforms, it doesn&#x27;t just use what&#x27;s present)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return BaseDir and usable extension directories under BaseDir (either Engine or Project)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> TArray&lt;FString&gt; <span class="title">GetExtensionDirs</span><span class="params">(<span class="type">const</span> FString&amp; BaseDir, <span class="type">const</span> FString&amp; SubDir=FString())</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the root directory of the engine directory tree</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return Root directory.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">RootDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the base directory of the current project by looking at FApp::GetProjectName().</span></span><br><span class="line"><span class="comment"> * This is usually a subdirectory of the installation</span></span><br><span class="line"><span class="comment"> * root directory and can be overridden on the command line to allow self</span></span><br><span class="line"><span class="comment"> * contained mod support.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return base directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProjectDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Returns the root directory for user-specific game files.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* @return game user directory</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProjectUserDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the content directory of the current game by looking at FApp::GetProjectName().</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return content directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProjectContentDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Returns the directory the root configuration files are located.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* @return root config directory</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProjectConfigDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the saved directory of the current game by looking at FApp::GetProjectName().</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return saved directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">const</span> FString&amp; <span class="title">ProjectSavedDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the intermediate directory of the current game by looking at FApp::GetProjectName().</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return intermediate directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProjectIntermediateDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ShaderWorkingDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the plugins directory of the current game by looking at FApp::GetProjectName().</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return plugins directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProjectPluginsDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the mods directory of the current project by looking at FApp::GetProjectName().</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return mods directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProjectModsDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* Returns true if a writable directory for downloaded data that persists across play sessions is available</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">HasProjectPersistentDownloadDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* Returns the writable directory for downloaded data that persists across play sessions.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProjectPersistentDownloadDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory the engine uses to look for the source leaf ini files. This</span></span><br><span class="line"><span class="comment"> * can&#x27;t be an .ini variable for obvious reasons.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return source config directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">SourceConfigDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory the engine saves generated config files.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return config directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GeneratedConfigDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory the engine stores sandbox output</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return sandbox directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">SandboxesDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory the engine uses to output profiling files.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return log directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProfilingDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory the engine uses to output screenshot files.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return screenshot directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ScreenShotDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory the engine uses to output BugIt files.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return screenshot directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">BugItDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory the engine uses to output user requested video capture files.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return Video capture directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">VideoCaptureDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory the engine uses to output logs. This currently can&#x27;t </span></span><br><span class="line"><span class="comment"> * be an .ini setting as the game starts logging before it can read from .ini</span></span><br><span class="line"><span class="comment"> * files.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return log directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProjectLogDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the directory for automation save files */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">AutomationDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the directory for automation save files that are meant to be deleted every run */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">AutomationTransientDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the directory for results of automation tests. May be deleted every run. */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">AutomationReportsDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the directory for automation log files */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">AutomationLogDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the directory for local files used in cloud emulation or support */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">CloudDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the directory that contains subfolders for developer-specific content */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GameDevelopersDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns The folder name for the developer-specific directory for the current user */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GameUserDeveloperFolderName</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns The directory that contains developer-specific content for the current user */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GameUserDeveloperDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the directory for temp files used for diffing */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">DiffDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Returns a list of engine-specific localization paths</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">const</span> TArray&lt;FString&gt;&amp; <span class="title">GetEngineLocalizationPaths</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Returns a list of editor-specific localization paths</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">const</span> TArray&lt;FString&gt;&amp; <span class="title">GetEditorLocalizationPaths</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Returns a list of property name localization paths</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">const</span> TArray&lt;FString&gt;&amp; <span class="title">GetPropertyNameLocalizationPaths</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Returns a list of tool tip localization paths</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">const</span> TArray&lt;FString&gt;&amp; <span class="title">GetToolTipLocalizationPaths</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Returns a list of game-specific localization paths</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">const</span> TArray&lt;FString&gt;&amp; <span class="title">GetGameLocalizationPaths</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get the name of the platform-specific localization sub-folder</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetPlatformLocalizationFolderName</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Returns a list of restricted/internal folder names (without any slashes) which may be tested against full paths to determine if a path is restricted or not.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">const</span> TArray&lt;FString&gt;&amp; <span class="title">GetRestrictedFolderNames</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Determines if supplied path uses a restricted/internal subdirectory.Note that slashes are normalized and character case is ignored for the comparison.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsRestrictedPath</span><span class="params">(<span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the saved directory that is not game specific. This is usually the same as</span></span><br><span class="line"><span class="comment"> * EngineSavedDir().</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return saved directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GameAgnosticSavedDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the directory where engine source code files are kept */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineSourceDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the directory where game source code files are kept */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GameSourceDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the directory where feature packs are kept */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">FeaturePackDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Checks whether the path to the project file, if any, is set.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return true if the path is set, false otherwise.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsProjectFilePathSet</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Gets the path to the project file.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return Project file path.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetProjectFilePath</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Sets the path to the project file.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param NewGameProjectFilePath - The project file path to set.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">SetProjectFilePath</span><span class="params">( <span class="type">const</span> FString&amp; NewGameProjectFilePath )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Gets the extension for this filename.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @parambIncludeDotif true, includes the leading dot in the result</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @returnthe extension of this filename, or an empty string if the filename doesn&#x27;t have an extension.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetExtension</span><span class="params">( <span class="type">const</span> FString&amp; InPath, <span class="type">bool</span> bIncludeDot=<span class="literal">false</span> )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the filename (with extension), minus any path information.</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetCleanFilename</span><span class="params">(<span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the filename (with extension), minus any path information.</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetCleanFilename</span><span class="params">(FString&amp;&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the same thing as GetCleanFilename, but without the extension</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetBaseFilename</span><span class="params">(<span class="type">const</span> FString&amp; InPath, <span class="type">bool</span> bRemovePath=<span class="literal">true</span> )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the same thing as GetCleanFilename, but without the extension</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetBaseFilename</span><span class="params">(FString&amp;&amp; InPath, <span class="type">bool</span> bRemovePath = <span class="literal">true</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the path in front of the filename</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetPath</span><span class="params">(<span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the path in front of the filename</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetPath</span><span class="params">(FString&amp;&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the leaf in the path</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetPathLeaf</span><span class="params">(<span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the leaf in the path</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetPathLeaf</span><span class="params">(FString&amp;&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Changes the extension of the given filename (does nothing if the file has no extension) */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ChangeExtension</span><span class="params">(<span class="type">const</span> FString&amp; InPath, <span class="type">const</span> FString&amp; InNewExtension)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Sets the extension of the given filename (like ChangeExtension, but also applies the extension if the file doesn&#x27;t have one) */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">SetExtension</span><span class="params">(<span class="type">const</span> FString&amp; InPath, <span class="type">const</span> FString&amp; InNewExtension)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns true if this file was found, false otherwise */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">FileExists</span><span class="params">(<span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns true if this directory was found, false otherwise */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">DirectoryExists</span><span class="params">(<span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns true if this path represents a root drive or volume */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsDrive</span><span class="params">(<span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns true if this path is relative to another path */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsRelative</span><span class="params">(<span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Convert all / and \ to TEXT(&quot;/&quot;) */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">NormalizeFilename</span><span class="params">(FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Checks if two paths are the same.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param PathA First path to check.</span></span><br><span class="line"><span class="comment"> * @param PathB Second path to check.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @returns True if both paths are the same. False otherwise.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsSamePath</span><span class="params">(<span class="type">const</span> FString&amp; PathA, <span class="type">const</span> FString&amp; PathB)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Determines if a path is under a given directory */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsUnderDirectory</span><span class="params">(<span class="type">const</span> FString&amp; InPath, <span class="type">const</span> FString&amp; InDirectory)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Normalize all / and \ to TEXT(&quot;/&quot;) and remove any trailing TEXT(&quot;/&quot;) if the character before that is not a TEXT(&quot;/&quot;) or a colon */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">NormalizeDirectoryName</span><span class="params">(FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Takes a fully pathed string and eliminates relative pathing (eg: annihilates &quot;..&quot; with the adjacent directory).</span></span><br><span class="line"><span class="comment"> * Assumes all slashes have been converted to TEXT(&#x27;/&#x27;).</span></span><br><span class="line"><span class="comment"> * For example, takes the string:</span></span><br><span class="line"><span class="comment"> *BaseDirectory/SomeDirectory/../SomeOtherDirectory/Filename.ext</span></span><br><span class="line"><span class="comment"> * and converts it to:</span></span><br><span class="line"><span class="comment"> *BaseDirectory/SomeOtherDirectory/Filename.ext</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">CollapseRelativeDirectories</span><span class="params">(FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Removes duplicate slashes in paths.</span></span><br><span class="line"><span class="comment"> * Assumes all slashes have been converted to TEXT(&#x27;/&#x27;).</span></span><br><span class="line"><span class="comment"> * For example, takes the string:</span></span><br><span class="line"><span class="comment"> *BaseDirectory/SomeDirectory//SomeOtherDirectory////Filename.ext</span></span><br><span class="line"><span class="comment"> * and converts it to:</span></span><br><span class="line"><span class="comment"> *BaseDirectory/SomeDirectory/SomeOtherDirectory/Filename.ext</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">RemoveDuplicateSlashes</span><span class="params">(FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Make fully standard &quot;Unreal&quot; pathname:</span></span><br><span class="line"><span class="comment"> *    - Normalizes path separators [NormalizeFilename]</span></span><br><span class="line"><span class="comment"> *    - Removes extraneous separators  [NormalizeDirectoryName, as well removing adjacent separators]</span></span><br><span class="line"><span class="comment"> *    - Collapses internal ..&#x27;s</span></span><br><span class="line"><span class="comment"> *    - Makes relative to Engine\Binaries\&lt;Platform&gt; (will ALWAYS start with ..\..\..)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">CreateStandardFilename</span><span class="params">(<span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">MakeStandardFilename</span><span class="params">(FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Takes an &quot;Unreal&quot; pathname and converts it to a platform filename. */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">MakePlatformFilename</span><span class="params">(FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Assuming both paths (or filenames) are relative to the same base dir, modifies InPath to be relative to InRelativeTo</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param InPath Path to change to be relative to InRelativeTo</span></span><br><span class="line"><span class="comment"> * @param InRelativeTo Path to use as the new relative base</span></span><br><span class="line"><span class="comment"> * @returns true if InPath was changed to be relative</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">MakePathRelativeTo</span><span class="params">( FString&amp; InPath, <span class="type">const</span> TCHAR* InRelativeTo )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Converts a relative path name to a fully qualified name relative to the process BaseDir().</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ConvertRelativePathToFull</span><span class="params">(<span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Converts a relative path name to a fully qualified name relative to the process BaseDir().</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ConvertRelativePathToFull</span><span class="params">(FString&amp;&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Converts a relative path name to a fully qualified name relative to the specified BasePath.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ConvertRelativePathToFull</span><span class="params">(<span class="type">const</span> FString&amp; BasePath, <span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Converts a relative path name to a fully qualified name relative to the specified BasePath.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ConvertRelativePathToFull</span><span class="params">(<span class="type">const</span> FString&amp; BasePath, FString&amp;&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Converts a relative path name to a fully qualified name relative to the specified BasePath.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ConvertRelativePathToFull</span><span class="params">(FString&amp;&amp; BasePath, <span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Converts a relative path name to a fully qualified name relative to the specified BasePath.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ConvertRelativePathToFull</span><span class="params">(FString&amp;&amp; BasePath, FString&amp;&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Converts a normal path to a sandbox path (in Saved/Sandboxes).</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param InSandboxName The name of the sandbox.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ConvertToSandboxPath</span><span class="params">( <span class="type">const</span> FString&amp; InPath, <span class="type">const</span> TCHAR* InSandboxName )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Converts a sandbox (in Saved/Sandboxes) path to a normal path.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param InSandboxName The name of the sandbox.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ConvertFromSandboxPath</span><span class="params">( <span class="type">const</span> FString&amp; InPath, <span class="type">const</span> TCHAR* InSandboxName )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Creates a temporary filename with the specified prefix.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param Path The file pathname.</span></span><br><span class="line"><span class="comment"> * @param Prefix The file prefix.</span></span><br><span class="line"><span class="comment"> * @param Extension File extension (&#x27;.&#x27; required).</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">CreateTempFilename</span><span class="params">( <span class="type">const</span> TCHAR* Path, <span class="type">const</span> TCHAR* Prefix = TEXT(<span class="string">&quot;&quot;</span>), <span class="type">const</span> TCHAR* Extension = TEXT(<span class="string">&quot;.tmp&quot;</span>) )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Returns a string containing all invalid characters as dictated by the operating system</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetInvalidFileSystemChars</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*Returns a string that is safe to use as a filename because all items in</span></span><br><span class="line"><span class="comment">*GetInvalidFileSystemChars() are removed</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">MakeValidFileName</span><span class="params">(<span class="type">const</span> FString&amp; InString, <span class="type">const</span> TCHAR InReplacementChar=<span class="number">0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Validates that the parts that make up the path contain no invalid characters as dictated by the operating system</span></span><br><span class="line"><span class="comment"> * Note that this is a different set of restrictions to those imposed by FPackageName</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param InPath - path to validate</span></span><br><span class="line"><span class="comment"> * @param OutReason - optional parameter to fill with the failure reason</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">ValidatePath</span><span class="params">( <span class="type">const</span> FString&amp; InPath, FText* OutReason = <span class="literal">nullptr</span> )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Parses a fully qualified or relative filename into its components (filename, path, extension).</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @paramPath[out] receives the value of the path portion of the input string</span></span><br><span class="line"><span class="comment"> * @paramFilename[out] receives the value of the filename portion of the input string</span></span><br><span class="line"><span class="comment"> * @paramExtension[out] receives the value of the extension portion of the input string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">Split</span><span class="params">( <span class="type">const</span> FString&amp; InPath, FString&amp; PathPart, FString&amp; FilenamePart, FString&amp; ExtensionPart )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Gets the relative path to get from BaseDir to RootDirectory  */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">const</span> FString&amp; <span class="title">GetRelativePathToRoot</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span>... PathTypes&gt;</span><br><span class="line"><span class="function">FORCEINLINE <span class="type">static</span> FString <span class="title">Combine</span><span class="params">(PathTypes&amp;&amp;... InPaths)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">const</span> TCHAR* Paths[] = &#123; <span class="built_in">GetTCharPtr</span>(<span class="built_in">Forward</span>&lt;PathTypes&gt;(InPaths))... &#125;;</span><br><span class="line">FString Out;</span><br><span class="line"></span><br><span class="line"><span class="built_in">CombineInternal</span>(Out, Paths, <span class="built_in">UE_ARRAY_COUNT</span>(Paths));</span><br><span class="line"><span class="keyword">return</span> Out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Frees any memory retained by FPaths.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">TearDown</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">CombineInternal</span><span class="params">(FString&amp; OutPath, <span class="type">const</span> TCHAR** Paths, int32 NumPaths)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">FStaticData</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">FORCEINLINE <span class="type">static</span> <span class="type">const</span> TCHAR* <span class="title">GetTCharPtr</span><span class="params">(<span class="type">const</span> TCHAR* Ptr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> Ptr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">FORCEINLINE <span class="type">static</span> <span class="type">const</span> TCHAR* <span class="title">GetTCharPtr</span><span class="params">(<span class="type">const</span> FString&amp; Str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> *Str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns, if any, the value of the -userdir command line argument. This can be used to sandbox artifacts to a desired location */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">const</span> FString&amp; <span class="title">CustomUserDirArgument</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns, if any, the value of the -shaderworkingdir command line argument. This can be used to sandbox shader working files to a desired location */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">const</span> FString&amp; <span class="title">CustomShaderDirArgument</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;一些实用的Unreal Engine API方便查找&lt;/p&gt;</summary>
    
    
    
    <category term="unreal" scheme="http://mine-clever.art/categories/unreal/"/>
    
    
    <category term="unreal" scheme="http://mine-clever.art/tags/unreal/"/>
    
    <category term="ue" scheme="http://mine-clever.art/tags/ue/"/>
    
    <category term="api" scheme="http://mine-clever.art/tags/api/"/>
    
  </entry>
  
  <entry>
    <title>using 關鍵字在 C++ 中的幾種用法</title>
    <link href="http://mine-clever.art/2022/06/12/CppUsing/"/>
    <id>http://mine-clever.art/2022/06/12/CppUsing/</id>
    <published>2022-06-12T02:14:59.000Z</published>
    <updated>2022-06-12T02:43:04.293Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p><strong>using 關鍵字在 C++ 中的幾種用法</strong></p><span id="more"></span>   <h1 id="1-using-声明"><a href="#1-using-声明" class="headerlink" title="1. using 声明"></a>1. using 声明</h1><p><code>using 聲明 (using declaration)</code> 是將命名空間中單個名字註入到當前作用域的機製，</p><p>使得在當前作用域下訪問另一個作用域下的成員時無需使用限定符 <code>::</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">using</span> std::map</span><br><span class="line">    map&lt;<span class="type">int</span>, std::string&gt; the_map; <span class="comment">//ok</span></span><br><span class="line">&#125;</span><br><span class="line">map&lt;<span class="type">int</span>, std::string&gt; the_map2;  <span class="comment">//error</span></span><br></pre></td></tr></table></figure><p>using 聲明將其它 namespace 的成員引入本命名空間的 當前作用域 (包括其嵌套作用域)  。</p><p>一個 using 聲明一次只引入一個命名空間成員，它使得無論程序中使用哪些名字，都非常準確。</p><p>利用 using 聲明，可以改變派生類對父類成員的訪問控製:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span>&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="type">int</span> bn1;</span><br><span class="line">    <span class="type">int</span> bn2;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Derived</span>: <span class="keyword">private</span> Base&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">using</span> Base::bn1;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DerivedAgain</span>: <span class="keyword">public</span> Derived&#123;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Derived d;</span><br><span class="line">    DerivedAgain da; </span><br><span class="line">    d.bn1 = <span class="number">1</span>;</span><br><span class="line">    d.bn2 = <span class="number">2</span>; <span class="comment">//error, &#x27;bn2&#x27; is a private member of &#x27;Base&#x27;</span></span><br><span class="line">    da.bn1 = <span class="number">3</span>;  <span class="comment">//ok</span></span><br><span class="line">    std::cout&lt;&lt;d.bn1&lt;&lt;std::endl;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>盡管 Derived 對 base 是私有繼承，但通過 using 聲明，我們還是可以在 Derived 中訪問其成員，</p><p>且後續的繼承同樣不受 private 限定的影響。</p><h1 id="2-using-指示-引入命名空間"><a href="#2-using-指示-引入命名空間" class="headerlink" title="2. using 指示 (引入命名空間)"></a>2. using 指示 (引入命名空間)</h1><p>using 指示 (using directive) 是使一個命名空間中的 所有 名字都在該作用域中可見的機製。</p><p>這是最常用的方式了。需要註意的是命名沖突問題。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">namespace</span> n1&#123; </span><br><span class="line">    <span class="type">int</span> n1_member = <span class="number">10</span>; </span><br><span class="line">    <span class="type">int</span> m = <span class="number">11</span>; </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> m = <span class="number">12</span>; </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">namespace</span> n1; </span><br><span class="line">    std::cout&lt;&lt;n1_member&lt;&lt;std::endl;</span><br><span class="line">    <span class="comment">//std::cout&lt;&lt;m&lt;&lt;std::endl;  //error 命名沖突</span></span><br><span class="line">    std::cout&lt;&lt;::m&lt;&lt;std::endl;</span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> m = <span class="number">13</span>; <span class="comment">//ok, 局部變量屏蔽命名空間變量</span></span><br><span class="line">    std::cout&lt;&lt;m&lt;&lt;std::endl;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Notice</code>: 盡管 using指示很方便，但在實際工作中應該盡量避免：</p><p>它一下子將另一個 namespace 中的成員全部引入了，一不小心就會出現命<code>名空間汙染</code>問題。</p><h1 id="3-類型重定義，取代-typedef"><a href="#3-類型重定義，取代-typedef" class="headerlink" title="3. 類型重定義，取代 typedef"></a>3. 類型重定義，取代 typedef</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> alias = <span class="keyword">typename</span></span><br></pre></td></tr></table></figure><p>這是 C++11 中的新用法，比 typedef 更能表達別名的定義。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> fun = <span class="built_in">void</span> (*)(<span class="type">int</span>, <span class="type">int</span>);</span><br><span class="line"><span class="comment">//typedef void (*fun)(int, int); //與上一句等價</span></span><br><span class="line"><span class="keyword">using</span> int16 = <span class="type">short</span>;</span><br><span class="line"><span class="comment">//typedef short int16; //與上一句等價</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    std::cout&lt;&lt;<span class="built_in">sizeof</span>(int16)&lt;&lt;std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 C++98&#x2F;03 中 ，typedef 重定義有一些限製，比如，模板。</p><p>我們想實現這樣一個模板：將一個 int 映射到任意類型，類似於我們想表達這種效果：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> std::map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; <span class="type">map_int_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> std::map&lt;<span class="type">int</span>, std::string&gt; <span class="type">map_str_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> std::map&lt;<span class="type">int</span>, <span class="type">bool</span>&gt; <span class="type">map_b_t</span>;</span><br><span class="line"><span class="comment">//... Others</span></span><br></pre></td></tr></table></figure><p>我們在 C++98&#x2F;03 中必須這樣寫：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> Val&gt;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">int_map</span>&#123;</span><br><span class="line">    <span class="keyword">typedef</span> std::map&lt;<span class="type">int</span>, Val&gt; type;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    int_map&lt;<span class="type">int</span>&gt;::type imap;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在C++11 中，我們可以使用 using 重定義模板 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> Val&gt;</span><br><span class="line"><span class="keyword">using</span> <span class="type">int_map_t</span> = std::map&lt;<span class="type">int</span>, Val&gt;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int_map_t</span>&lt;<span class="type">int</span>&gt; imap;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;using 關鍵字在 C++ 中的幾種用法&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="cpp" scheme="http://mine-clever.art/categories/cpp/"/>
    
    
    <category term="破事水" scheme="http://mine-clever.art/tags/%E7%A0%B4%E4%BA%8B%E6%B0%B4/"/>
    
    <category term="cpp" scheme="http://mine-clever.art/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>修复Windows 事件10016</title>
    <link href="http://mine-clever.art/2022/05/15/FixWindowDCOM/"/>
    <id>http://mine-clever.art/2022/05/15/FixWindowDCOM/</id>
    <published>2022-05-15T04:49:26.000Z</published>
    <updated>2022-06-12T02:43:25.797Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>因为Windows的一个阿三更新, 破坏了DCOM的权限设置</p><p>从而导致了PerAppRuntimeBroken的权限被破坏</p><span id="more"></span>   <h1 id="修复1"><a href="#修复1" class="headerlink" title="修复1"></a>修复1</h1><ol><li><p>使用 <strong>Regedit</strong> 命令，转至 HKEY_LOCAL_MACHINE 注册表值, 直接搜索CLSID。</p><p> <strong>注：</strong> 以非管理员用户身份配置查看时时，CLSID 值会以事件标识 10016 显示在事件查看器中。</p></li><li><p>在“注册表编辑器”窗格中，双击<strong>默认</strong>。</p></li><li><p>在“编辑字符串”对话框中，复制值数据字符串。</p></li><li><p>单击<strong>开始 &gt; 控制面板 &gt; 管理工具 &gt; 组件服务</strong>。</p></li><li><p>在“组件服务”窗口中，展开<strong>组件服务 &gt; 计算机 &gt; 我的电脑</strong>，并双击 <strong>DCOM</strong>。</p></li><li><p>在“DCOM 配置”窗格中，找到所复制的字符串（程序名），右键单击程序名，然后单击<strong>属性</strong>。</p></li><li><p>在“属性”窗口中，选择<strong>安全</strong>选项卡。</p></li><li><p>在“启动和激活权限”组框下，选择<strong>自定义</strong>，然后单击<strong>编辑</strong>。这将打开“启动和激活权限”窗口。</p></li><li><p>单击<strong>添加</strong>，输入非管理员用户到权限列表中，然后单击<strong>确定</strong>。</p></li><li><p>针对“本地启动”和“本地激活”选中<strong>允许</strong>复选框，然后单击<strong>确定</strong>。</p></li></ol><h1 id="修复2"><a href="#修复2" class="headerlink" title="修复2:"></a>修复2:</h1><ol><li>下载 NSudo 或者 ExecTi </li><li>用 超级权限(TruestedInstaller) 启动Dcomcnfg</li><li>找到 对应的 DCOM组件 (在“DCOM 配置”窗格中，找到所复制的字符串（程序名），右键单击程序名，然后单击<strong>属性</strong>。)</li><li>在“属性”窗口中，选择<strong>安全</strong>选项卡。</li><li>在“启动和激活权限”组框下，选择<strong>自定义</strong>，然后单击<strong>编辑</strong>。这将打开“启动和激活权限”窗口。</li><li>单击<strong>添加</strong>，输入非管理员用户到权限列表中，然后单击<strong>确定</strong>。</li><li>针对“本地启动”和“本地激活”选中<strong>允许</strong>复选框，然后单击<strong>确定</strong>。</li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;因为Windows的一个阿三更新, 破坏了DCOM的权限设置&lt;/p&gt;
&lt;p&gt;从而导致了PerAppRuntimeBroken的权限被破坏&lt;/p&gt;</summary>
    
    
    
    <category term="水" scheme="http://mine-clever.art/categories/%E6%B0%B4/"/>
    
    
    <category term="破事水" scheme="http://mine-clever.art/tags/%E7%A0%B4%E4%BA%8B%E6%B0%B4/"/>
    
  </entry>
  
  <entry>
    <title>有向距離場 Signed Distance Filed</title>
    <link href="http://mine-clever.art/2022/04/26/SignedDistanceFiled/"/>
    <id>http://mine-clever.art/2022/04/26/SignedDistanceFiled/</id>
    <published>2022-04-26T14:10:27.000Z</published>
    <updated>2022-05-03T16:52:36.900Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>本文主要用於記錄<strong>有向距離場</strong>的資料</p><ul><li><p>添加了可直接使用的Python实现</p></li><li><p>添加了部分资料</p></li><li><p>未完…</p></li></ul><span id="more"></span>   <h1 id="最终用Python整了一个脚本方便大家快速CV大法"><a href="#最终用Python整了一个脚本方便大家快速CV大法" class="headerlink" title="最终用Python整了一个脚本方便大家快速CV大法"></a>最终用Python整了一个脚本方便大家快速CV大法</h1><h2 id="结果预览"><a href="#结果预览" class="headerlink" title="结果预览"></a>结果预览</h2><p><img data-src="/../img/SignedDistanceFiled/image-20220429003908138.png" alt="image-20220429003908138"></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>python3</li><li>openCV</li><li>numpy</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _*_ coding=utf-8 _*_</span></span><br><span class="line"><span class="comment"># MineClever &#x27;s 2D SDF Generator~</span></span><br><span class="line"><span class="comment"># 8SSEDT Method</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os, sys</span><br><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># def type</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Vector2</span> ():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, x=<span class="number">0</span>,y=<span class="number">0</span></span>):</span><br><span class="line">        self.data = np.array((x,y),dtype=<span class="built_in">float</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">x</span> (self):</span><br><span class="line">        <span class="keyword">return</span> self.data[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">    @x.setter</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">x</span> (self, value):</span><br><span class="line">        self.data[<span class="number">0</span>] = (value)</span><br><span class="line">        </span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">y</span> (self):</span><br><span class="line">        <span class="keyword">return</span> self.data[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">    @y.setter</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">y</span> (self, value):</span><br><span class="line">        self.data[<span class="number">1</span>] = (value)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__add__</span> (self, value):</span><br><span class="line">        <span class="keyword">return</span> Vector2((self.x+value.x),(self.y+value.y))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">length_squared</span> (self) -&gt; <span class="built_in">float</span>:</span><br><span class="line">        <span class="keyword">return</span> (self.x*self.x + self.y*self.y)</span><br><span class="line">        <span class="comment"># return np.square(self.data)</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">length</span> (self) -&gt; <span class="built_in">float</span>:</span><br><span class="line">        <span class="keyword">return</span> np.sqrt(self.length_squared())</span><br><span class="line">    </span><br><span class="line"><span class="comment"># For a bitmap with representation:</span></span><br><span class="line"><span class="comment"># [0][0][0]</span></span><br><span class="line"><span class="comment"># [0][1][1]</span></span><br><span class="line"><span class="comment"># [1][1][1]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># using relative offset [offset x, offset y] :</span></span><br><span class="line"><span class="comment"># [-1,-1][0,-1][1,-1]</span></span><br><span class="line"><span class="comment"># [-1, 0][0, 0][1, 0]</span></span><br><span class="line"><span class="comment"># [-1, 1][0, 1][1, 1]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SSEDT8</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Grid</span> ():</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, width:<span class="built_in">int</span> , height:<span class="built_in">int</span></span>):  </span><br><span class="line">            self.width = width</span><br><span class="line">            self.height = height</span><br><span class="line">            self.size = Vector2(self.width,self.height)</span><br><span class="line">            self.distances = [Vector2(<span class="number">0</span>,<span class="number">0</span>)]* (self.width*self.height)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">__str__</span> (self):</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;width:&#123;&#125;,height:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(self.size.x, self.size.y)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">has</span> (self, x:<span class="built_in">int</span>, y:<span class="built_in">int</span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">            <span class="keyword">return</span> (<span class="number">0</span> &lt;= x <span class="keyword">and</span> x &lt; self.size.x <span class="keyword">and</span> <span class="number">0</span> &lt;= self.size.y <span class="keyword">and</span> y &lt; self.size.y)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">_index</span> (self, x:<span class="built_in">int</span>, y:<span class="built_in">int</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">            <span class="comment"># print (&quot;x : &#123;&#125;, y: &#123;&#125;&quot;.format(x,y))</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">int</span>(y * self.size.x + x)</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">get_size</span>(<span class="params">self</span>) -&gt; Vector2:</span><br><span class="line">            <span class="keyword">return</span> self.size</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">get_dist</span>(<span class="params">self, x:<span class="built_in">int</span>, y:<span class="built_in">int</span></span>) -&gt; Vector2:</span><br><span class="line">            <span class="comment"># print (self._index(x,y))</span></span><br><span class="line">            <span class="keyword">return</span> self.distances[self._index(x,y)]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">set_dist</span>(<span class="params">self, x:<span class="built_in">int</span>, y:<span class="built_in">int</span>, p_dinstance:Vector2</span>) :</span><br><span class="line">            self.distances[self._index(x,y)] = p_dinstance</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">update</span> (self, x:<span class="built_in">int</span>, y:<span class="built_in">int</span>, offset:Vector2):</span><br><span class="line">            pos = Vector2(x,y)</span><br><span class="line">            offset_pos = pos + offset</span><br><span class="line">            distance = self.get_dist(x, y)</span><br><span class="line">            dist_sq = distance.length_squared()</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (self.has(offset_pos.x, offset_pos.y)):</span><br><span class="line">                offset_dist = self.get_dist(offset_pos.x, offset_pos.y) + offset</span><br><span class="line">                offset_sq = offset_dist.length_squared()</span><br><span class="line">                <span class="keyword">if</span> (offset_sq &lt; dist_sq):</span><br><span class="line">                    self.set_dist(x, y, offset_dist)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">apply_offsets</span> (cls, p_grid : Grid,x :<span class="built_in">int</span> ,y :<span class="built_in">int</span>, p_offsets:<span class="built_in">list</span>):</span><br><span class="line">        size = <span class="built_in">len</span>(p_offsets)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(size):</span><br><span class="line">            p_grid.update(x,y,p_offsets[i])</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">apply_pass</span> (cls, p_grid : Grid, p_offsets1 : <span class="built_in">list</span>, p_offsets2 : <span class="built_in">list</span>, inverted=<span class="literal">False</span>):</span><br><span class="line">        grid_size = p_grid.get_size()</span><br><span class="line">        width = grid_size.x</span><br><span class="line">        height = grid_size.y</span><br><span class="line">        <span class="keyword">if</span> (inverted):</span><br><span class="line">            y = height - <span class="number">1</span></span><br><span class="line">            x = width - <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> (y &gt; <span class="number">0</span>):</span><br><span class="line">                <span class="keyword">while</span> (x &gt;= <span class="number">0</span>):</span><br><span class="line">                    cls.apply_offsets(p_grid, x, y, p_offsets1)</span><br><span class="line">                    x -= <span class="number">1</span></span><br><span class="line">                <span class="comment"># else:</span></span><br><span class="line">                <span class="comment">#     x = 0</span></span><br><span class="line">                <span class="keyword">while</span> (x &lt; width):</span><br><span class="line">                    cls.apply_offsets(p_grid, x, y, p_offsets2)</span><br><span class="line">                    x += <span class="number">1</span></span><br><span class="line">                y -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            y = <span class="number">0</span></span><br><span class="line">            x = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> (y &lt; height) :</span><br><span class="line">                <span class="keyword">while</span> (x &lt; width):</span><br><span class="line">                    cls.apply_offsets(p_grid, x, y, p_offsets1)</span><br><span class="line">                    x += <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    x = width - <span class="number">1</span></span><br><span class="line">                <span class="keyword">while</span> (x &gt; <span class="number">0</span>):</span><br><span class="line">                    cls.apply_offsets(p_grid, x, y, p_offsets2)</span><br><span class="line">                    x -= <span class="number">1</span></span><br><span class="line">                y += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_bind_methods</span>():</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">do_sdf</span> (cls, p_input_image_path=<span class="string">&#x27;&#x27;</span>,p_output_image_path=<span class="string">&#x27;&#x27;</span>,p_max_img_size = <span class="number">1024</span>, p_px_scale = <span class="number">0.025</span>):</span><br><span class="line">        <span class="comment"># read img by openCV</span></span><br><span class="line">        img = cv2.imread(p_input_image_path,cv2.IMREAD_UNCHANGED)</span><br><span class="line"></span><br><span class="line">        width = img.shape[<span class="number">0</span>]</span><br><span class="line">        height = img.shape[<span class="number">1</span>]</span><br><span class="line">        max_len = height <span class="keyword">if</span> height &gt; width <span class="keyword">else</span> width</span><br><span class="line">        <span class="built_in">print</span> (img.shape)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> max_len &gt; p_max_img_size:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;do scale&quot;</span>)</span><br><span class="line">            scale_fac = p_max_img_size / max_len</span><br><span class="line">            <span class="built_in">print</span> (scale_fac)</span><br><span class="line">            img = cv2.resize(img,dsize=(<span class="built_in">int</span>(width*scale_fac) , <span class="built_in">int</span>(height* scale_fac)),interpolation=cv2.INTER_LANCZOS4)</span><br><span class="line">            width = img.shape[<span class="number">0</span>]</span><br><span class="line">            height = img.shape[<span class="number">1</span>]</span><br><span class="line">        </span><br><span class="line">        cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</span><br><span class="line">        <span class="built_in">print</span> (img.shape)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Initialise grids</span></span><br><span class="line">        grid1 = cls.Grid(width,height)</span><br><span class="line">        grid2 = cls.Grid(width,height)</span><br><span class="line">        DISTANT = <span class="number">999999</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(width):</span><br><span class="line">                img_pixel = img[x][y][<span class="number">2</span>] / <span class="number">255</span> <span class="comment"># convert 255 -&gt; 1.0</span></span><br><span class="line">                distance = <span class="number">0</span> <span class="keyword">if</span> img_pixel &gt; <span class="number">0.5</span> <span class="keyword">else</span> DISTANT</span><br><span class="line">                grid1.set_dist(x, y, Vector2(distance, distance))</span><br><span class="line">                substract_dist = DISTANT - distance</span><br><span class="line">                grid2.set_dist(x, y, Vector2(substract_dist, substract_dist))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"># using relative offset [offset x, offset y] :</span></span><br><span class="line">        <span class="comment"># [-1,-1][0,-1][1,-1]</span></span><br><span class="line">        <span class="comment"># [-1, 0][0, 0][1, 0]</span></span><br><span class="line">        <span class="comment"># [-1, 1][0, 1][1, 1]</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Pass 1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># [2] [1] [ ]</span></span><br><span class="line">        <span class="comment"># [0] [ ] [ ]</span></span><br><span class="line">        <span class="comment"># [3] [ ] [ ]</span></span><br><span class="line">        offsets1 = <span class="built_in">list</span>()</span><br><span class="line">        offsets1.append(Vector2(-<span class="number">1</span>, <span class="number">0</span>))     <span class="comment"># 0</span></span><br><span class="line">        offsets1.append(Vector2(<span class="number">0</span>, -<span class="number">1</span>))     <span class="comment"># 1</span></span><br><span class="line">        offsets1.append(Vector2(-<span class="number">1</span>, -<span class="number">1</span>))    <span class="comment"># 2 </span></span><br><span class="line">        offsets1.append(Vector2(<span class="number">1</span>, -<span class="number">1</span>))     <span class="comment"># 3</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># [ ] [ ] [ ]</span></span><br><span class="line">        <span class="comment"># [ ] [ ] [0]</span></span><br><span class="line">        <span class="comment"># [ ] [ ] [ ]</span></span><br><span class="line">        offsets2 = <span class="built_in">list</span>()</span><br><span class="line">        offsets1.append(Vector2(<span class="number">1</span>, <span class="number">0</span>))      <span class="comment"># 0</span></span><br><span class="line">        </span><br><span class="line">        cls.apply_pass(grid1 , offsets1 ,offsets2 ,<span class="literal">False</span>)</span><br><span class="line">        cls.apply_pass(grid2 , offsets1 ,offsets2 ,<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Pass 2</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># [ ] [ ] [ ]</span></span><br><span class="line">        <span class="comment"># [ ] [ ] [0]</span></span><br><span class="line">        <span class="comment"># [2] [1] [3]</span></span><br><span class="line">        offsets1.clear()</span><br><span class="line">        offsets1.append(Vector2(<span class="number">1</span>, <span class="number">0</span>))  <span class="comment"># 0</span></span><br><span class="line">        offsets1.append(Vector2(<span class="number">0</span>, <span class="number">1</span>))  <span class="comment"># 1</span></span><br><span class="line">        offsets1.append(Vector2(-<span class="number">1</span>, <span class="number">1</span>)) <span class="comment"># 2</span></span><br><span class="line">        offsets1.append(Vector2(<span class="number">1</span>, <span class="number">1</span>))  <span class="comment"># 3</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># [ ] [ ] [ ]</span></span><br><span class="line">        <span class="comment"># [0] [ ] [ ]</span></span><br><span class="line">        <span class="comment"># [ ] [ ] [ ]</span></span><br><span class="line">        offsets2.clear()</span><br><span class="line">        offsets2.append(Vector2(-<span class="number">1</span>, <span class="number">0</span>)) <span class="comment"># 0</span></span><br><span class="line"></span><br><span class="line">        cls.apply_pass(grid1 , offsets1 ,offsets2 ,<span class="literal">True</span>)</span><br><span class="line">        cls.apply_pass(grid2 , offsets1 ,offsets2 ,<span class="literal">True</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># make Img data</span></span><br><span class="line">        out_img = np.zeros((width,height),dtype=np.float16)</span><br><span class="line">        <span class="comment"># print(out_img.shape)</span></span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(width):</span><br><span class="line">                distance1 = grid1.get_dist(x, y)</span><br><span class="line">                distance2 = grid2.get_dist(x, y)</span><br><span class="line">                distance = distance2.length() - distance1.length()</span><br><span class="line">                distance = (<span class="number">1</span> + <span class="built_in">max</span>(-<span class="number">1</span>, <span class="built_in">min</span>(distance * p_px_scale, <span class="number">1</span>))) / <span class="number">2.0</span></span><br><span class="line">                out_img[x][y] = distance</span><br><span class="line"></span><br><span class="line">        out_img_scaled = np.clip(out_img *<span class="number">255</span>,<span class="number">0</span>,<span class="number">255</span>).astype(<span class="string">&#x27;uint8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        cv2.imwrite(p_output_image_path,out_img_scaled)</span><br><span class="line">        </span><br></pre></td></tr></table></figure><h1 id="收集的距離場算法與實現"><a href="#收集的距離場算法與實現" class="headerlink" title="收集的距離場算法與實現"></a>收集的距離場算法與實現</h1><h2 id="欧几里得距离转换（EDT）算法"><a href="#欧几里得距离转换（EDT）算法" class="headerlink" title="欧几里得距离转换（EDT）算法"></a>欧几里得距离转换（EDT）算法</h2><ul><li>Ref : <a href="https://blog.csdn.net/tianwaifeimao/article/details/45078661">https://blog.csdn.net/tianwaifeimao/article/details/45078661</a></li></ul><p><em><strong>*0 前言*</strong></em> </p><p>欧几里得距离转换 (Euclidean Distance Transform, EDT) 简单的说即是以最常用的欧几里得距离作为</p><p>距离度量，找到每一个前景点到最近的背景点之间的距离。文中提及所有的算法中，均是将二维图片</p><p>转为两个一维向量的方式进行。</p><p><u>一些基本定义：</u></p><ul><li><p>背景点为 0，黑色，为感兴趣点，Voronioi elements，sites；</p></li><li><p>前景点为 1：白色；</p></li><li><p>VR:  某一背景点的 VR 指的前景点集合，这些前景点到此背景点的距离比到其他背景点距离都要短。</p></li><li><p>VS：某一前景点的 VS 指的是背景点的集合，这些背景点到此前景点距离比到其他前景点距离都要短。</p></li></ul><p><em><strong>1. Saito 的算法：</strong></em></p><p><strong>step1：1-D Transformation</strong></p><p>上到下，计算每一行中前景点到<strong>本行</strong>背景点距离最近的平方，得到中间结果 G；<strong>公式如下：</strong></p><p><img data-src="/../img/SignedDistanceFiled/20150416180332929.bmp" alt="公式"></p><p>如下图 :</p><p>(a) 为<strong>原图</strong></p><p>(b) 为 <strong>同一行的</strong>距离平方图, 即 G</p><p><img data-src="/../img/SignedDistanceFiled/20150416180042220.bmp" alt="圖像(a), (b)"></p><p><strong>step2：2-D Transformation</strong></p><p><strong>从左到右</strong>，对每一列，对中间结果 G 进行操作，计算本列背景点与本行背景点距离平方和的最小值，得到距离图（Distance Map）H；</p><p>如下图（4 即使最近距离的平方）.</p><p><img data-src="/../img/SignedDistanceFiled/20150416180603781.bmp" alt="2-D Transformation"></p><h2 id="8SSEDT-算法"><a href="#8SSEDT-算法" class="headerlink" title="8SSEDT 算法"></a>8SSEDT 算法</h2><p>Ref : <a href="https://github.com/Lisapple/8SSEDT">https://github.com/Lisapple/8SSEDT</a></p><h3 id="8點有向按序-歐幾里得距離轉換"><a href="#8點有向按序-歐幾里得距離轉換" class="headerlink" title="8點有向按序 歐幾里得距離轉換"></a>8點有向按序 歐幾里得距離轉換</h3><hr><p>有向距離場 (SDF) 是由二值圖像 計算得來, 在每像素上 , 到<strong>最近像素</strong>的<em>有向距離</em>(可正可負) <strong>有不同值</strong>. 前景像素為正距離 , 背景像素為負距離. 下文中, 有向和有符號是統一意思. 有符號更加符合寫程式的觀點.</p><h4 id="例"><a href="#例" class="headerlink" title="例:"></a>例:</h4><p><img data-src="/../img/SignedDistanceFiled/image-20220427222044743.png"></p><p>每像素會擁有一個距離值:</p><p>(暗灰色像素為正值 &amp;&amp; 負值為亮灰色)</p><p><img data-src="/../img/SignedDistanceFiled/image-20220427222056596.png"></p><h4 id="簡單位圖為例"><a href="#簡單位圖為例" class="headerlink" title="簡單位圖為例"></a>簡單位圖為例</h4><p>对于 位图 表示為:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[0]</span><span class="selector-attr">[0]</span><span class="selector-attr">[0]</span></span><br><span class="line"><span class="selector-attr">[0]</span><span class="selector-attr">[1]</span><span class="selector-attr">[1]</span></span><br><span class="line"><span class="selector-attr">[1]</span><span class="selector-attr">[1]</span><span class="selector-attr">[1]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>限定全部 0 顯示為像素在 (白色) 形狀之外(也叫:背景)且全部 1 在形狀之内 (也叫:前景).</p><p>最終結果表示為:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[-2]</span><span class="selector-attr">[-1]</span><span class="selector-attr">[-1]</span></span><br><span class="line"><span class="selector-attr">[-1]</span><span class="selector-attr">[ 1]</span><span class="selector-attr">[ 1]</span></span><br><span class="line"><span class="selector-attr">[ 1]</span><span class="selector-attr">[ 2]</span><span class="selector-attr">[ 2]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>第一個像素 (背景) 為 在一個到前景為 -2 (此時為 有向-平方) 的距離.</p></li><li><p>最後一個像素 (前景) 為在一個到背景為 1 的距離.</p></li></ul><h4 id="構建初始網格"><a href="#構建初始網格" class="headerlink" title="構建初始網格"></a>構建初始網格</h4><p>For each pixel, we need to build a <em>first grid</em> (grid #1) with a distance duet <code>(dx, dy)</code></p><p>like <code>(dx=0, dy=0)</code> if inside (foreground) and <code>(dx=∞, dy=∞)</code> if outside (background)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[∞]</span><span class="selector-attr">[∞]</span><span class="selector-attr">[∞]</span></span><br><span class="line"><span class="selector-attr">[∞]</span><span class="selector-attr">[0]</span><span class="selector-attr">[0]</span></span><br><span class="line"><span class="selector-attr">[0]</span><span class="selector-attr">[0]</span><span class="selector-attr">[0]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>with <code>(0, 0)</code> represented by <code>0</code> and <code>(∞, ∞)</code> by <code>∞</code>.</p><p>and a <code>second grid</code> (grid #2) with inverted distances:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[0]</span><span class="selector-attr">[0]</span><span class="selector-attr">[0]</span></span><br><span class="line"><span class="selector-attr">[0]</span><span class="selector-attr">[∞]</span><span class="selector-attr">[∞]</span></span><br><span class="line"><span class="selector-attr">[∞]</span><span class="selector-attr">[∞]</span><span class="selector-attr">[∞]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>Note:</strong> All pixel out of bounds are use the value <code>(∞, ∞)</code> as:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">∞  ∞  ∞ </span><br><span class="line">∞ <span class="selector-attr">[x]</span><span class="selector-attr">[∞]</span></span><br><span class="line">∞ <span class="selector-attr">[∞]</span><span class="selector-attr">[0]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>Computing grids:</li></ul><p>To get the distance <code>x</code>, we look all neighbours (from <code>#1</code> to <code>#8</code>) distances:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[#1]</span><span class="selector-attr">[#2]</span><span class="selector-attr">[#3]</span></span><br><span class="line"><span class="selector-attr">[#4]</span><span class="selector-attr">[ x]</span><span class="selector-attr">[#5]</span></span><br><span class="line"><span class="selector-attr">[#6]</span><span class="selector-attr">[#7]</span><span class="selector-attr">[#8]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>using relative offset <code>[offset x, offset y]</code> to <code>x</code> like so:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[-1,-1]</span><span class="selector-attr">[0,-1]</span><span class="selector-attr">[1,-1]</span></span><br><span class="line"><span class="selector-attr">[-1, 0]</span><span class="selector-attr">[0, 0]</span><span class="selector-attr">[1, 0]</span></span><br><span class="line"><span class="selector-attr">[-1, 1]</span><span class="selector-attr">[0, 1]</span><span class="selector-attr">[1, 1]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>then the final value of <code>x</code> is</p><p><code>x = min(#0.distance, ..., #7.distance)</code></p><p>using the distance function that compute the magnitude of the distance with offset:</p><p><code>#?.distance = sqrt( (?dx + offset x)^2 + (?dy + offset y)^2 )</code></p><p>This gives:</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#1.distance = (∞<span class="string">-1</span>, ∞<span class="string">-1</span>).distance = √(∞^2 + ∞^2) = ∞</span><br><span class="line">#2.distance = (∞<span class="string">+0</span>, ∞<span class="string">-1</span>).distance = √(∞^2 + ∞^2) = ∞</span><br><span class="line">#3.distance = (∞<span class="string">+1</span>, ∞<span class="string">-1</span>).distance = √(∞^2 + ∞^2) = ∞</span><br><span class="line">#4.distance = (∞<span class="string">-1</span>, ∞<span class="string">+0</span>).distance = √(∞^2 + ∞^2) = ∞</span><br><span class="line">#5.distance = (0<span class="string">+1</span>, 0<span class="string">+0</span>).distance = √(1^2 + 0^2) = 1</span><br><span class="line">#6.distance = (0<span class="string">-1</span>, 0<span class="string">+1</span>).distance = √(<span class="string">-1</span>^2 + 1^2) = √2</span><br><span class="line">#7.distance = (0<span class="string">+0</span>, 0<span class="string">+1</span>).distance = √(0^2 + 1^2) = 1</span><br><span class="line">#8.distance = (0<span class="string">+1</span>, 0<span class="string">+1</span>).distance = √(1^2 + 1^2) = √2</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>so</p><p><code>x = min(#0.distance, ..., #7.distance]) = 1</code></p><ul><li>Updated grid:</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[∞]</span><span class="selector-attr">[∞]</span><span class="selector-attr">[∞]</span></span><br><span class="line"><span class="selector-attr">[∞]</span><span class="selector-attr">[1]</span><span class="selector-attr">[0]</span></span><br><span class="line"><span class="selector-attr">[0]</span><span class="selector-attr">[0]</span><span class="selector-attr">[0]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Then process the next cell on the right.</p><h4 id="Computing-method"><a href="#Computing-method" class="headerlink" title="Computing method"></a>Computing method</h4><p>In total 4 passes are necessary to compute all distances, two sequential passes, for each grid #1 and #2.  </p><p>Using the initialised grid:</p><p>(from left to right, top to bottom)</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">   - - - &gt;</span><br><span class="line">| <span class="comment">[?]</span><span class="comment">[?]</span><span class="comment">[?]</span></span><br><span class="line">| <span class="comment">[?]</span><span class="comment">[x]</span><span class="comment">[ ]</span></span><br><span class="line">v <span class="comment">[ ]</span><span class="comment">[ ]</span><span class="comment">[ ]</span></span><br></pre></td></tr></table></figure><p>then (using the same grid)</p><p>(from right to left)</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">   &lt; - - -</span><br><span class="line">| <span class="comment">[ ]</span><span class="comment">[ ]</span><span class="comment">[ ]</span></span><br><span class="line">| <span class="comment">[ ]</span><span class="comment">[x]</span><span class="comment">[?]</span></span><br><span class="line">v <span class="comment">[ ]</span><span class="comment">[ ]</span><span class="comment">[ ]</span></span><br></pre></td></tr></table></figure><p>then</p><p>(from right to left, bottom to top)</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">   &lt; - - -</span><br><span class="line">^ <span class="comment">[ ]</span><span class="comment">[ ]</span><span class="comment">[ ]</span></span><br><span class="line">| <span class="comment">[ ]</span><span class="comment">[x]</span><span class="comment">[?]</span></span><br><span class="line">| <span class="comment">[?]</span><span class="comment">[?]</span><span class="comment">[?]</span></span><br></pre></td></tr></table></figure><p>then:</p><p>(from left to right)</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">   - - - &gt;</span><br><span class="line">^ <span class="comment">[ ]</span><span class="comment">[ ]</span><span class="comment">[ ]</span></span><br><span class="line">| <span class="comment">[?]</span><span class="comment">[x]</span><span class="comment">[ ]</span></span><br><span class="line">| <span class="comment">[ ]</span><span class="comment">[ ]</span><span class="comment">[ ]</span></span><br></pre></td></tr></table></figure><h4 id="Computing-final-signed-distances"><a href="#Computing-final-signed-distances" class="headerlink" title="Computing final signed distances"></a>Computing final signed distances</h4><p>Once the four steps applied on the grid #1 and #2,<br>we compute the difference of the magnitude of each cell (pixel) <code>#n1</code> and <code>#n2</code> of the two grids:</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">foreach (#n1 <span class="keyword">of</span> grid #<span class="number">1</span>) and (#n2 <span class="keyword">of</span> grid #<span class="number">2</span>):</span><br><span class="line">final distance = #n1.distance - #n2.distance</span><br></pre></td></tr></table></figure><p>with <code>#n.distance = sqrt( #n.dx * #n.dx + #n.dy * #n.dy )</code>.</p><h4 id="References"><a href="#References" class="headerlink" title="References"></a>References</h4><p>Distance field generator with C++ and SDL <a href="http://www.codersnotes.com/notes/signed-distance-fields/">codersnotes.com</a></p><p>Valve paper on distance field <a href="http://www.valvesoftware.com/publications/2007/SIGGRAPH2007_AlphaTestedMagnification.pdf">Improved Alpha-Tested Magnification for Vector Textures and Special Effects</a></p><h2 id="3D有符号距离场原理及实现"><a href="#3D有符号距离场原理及实现" class="headerlink" title="3D有符号距离场原理及实现"></a>3D有符号距离场原理及实现</h2><p>Ref: <a href="http://www.bimant.com/blog/signed-distance-field-implementation/">http://www.bimant.com/blog/signed-distance-field-implementation/</a></p><h2 id="Dead-Reckoning-算法"><a href="#Dead-Reckoning-算法" class="headerlink" title="Dead Reckoning 算法"></a>Dead Reckoning 算法</h2><p>Ref : <a href="https://segmentfault.com/a/1190000041250697">https://segmentfault.com/a/1190000041250697</a></p><h2 id="在Unity的實現"><a href="#在Unity的實現" class="headerlink" title="在Unity的實現"></a>在Unity的實現</h2><p>Ref : <a href="https://zznewclear13.github.io/posts/calculate-signed-distance-field-using-compute-shader/">https://zznewclear13.github.io/posts/calculate-signed-distance-field-using-compute-shader/</a></p><hr>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;本文主要用於記錄&lt;strong&gt;有向距離場&lt;/strong&gt;的資料&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;添加了可直接使用的Python实现&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加了部分资料&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;未完…&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="資料" scheme="http://mine-clever.art/categories/%E8%B3%87%E6%96%99/"/>
    
    
    <category term="SDF" scheme="http://mine-clever.art/tags/SDF/"/>
    
    <category term="距離場" scheme="http://mine-clever.art/tags/%E8%B7%9D%E9%9B%A2%E5%A0%B4/"/>
    
  </entry>
  
</feed>
