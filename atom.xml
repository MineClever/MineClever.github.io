<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MineClever&#39;s Blog</title>
  
  <subtitle>Some Technical Artist&#39;s Log</subtitle>
  <link href="http://mine-clever.art/atom.xml" rel="self"/>
  
  <link href="http://mine-clever.art/"/>
  <updated>2024-12-17T14:42:39.718Z</updated>
  <id>http://mine-clever.art/</id>
  
  <author>
    <name>Mine Clever</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>create custom Control Rig class in c++</title>
    <link href="http://mine-clever.art/2024/12/17/CreateCustomCppControlRigForUnrealEngine/"/>
    <id>http://mine-clever.art/2024/12/17/CreateCustomCppControlRigForUnrealEngine/</id>
    <published>2024-12-17T14:33:05.000Z</published>
    <updated>2024-12-17T14:42:39.718Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>How do I create a new custom c++ class which inherits from <code>ControlRig</code>?<br>Copy from: <a href="https://gamedev.stackexchange.com/questions/211984/how-to-create-custom-control-rig-class-in-c">https://gamedev.stackexchange.com/questions/211984/how-to-create-custom-control-rig-class-in-c</a></p><span id="more"></span>   <p>First add the following modules to the <code>&lt;project-name&gt;.Build.cs</code> file:</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PublicDependencyModuleNames.AddRange(<span class="keyword">new</span> <span class="built_in">string</span>[] &#123; </span><br><span class="line">   ...</span><br><span class="line">   <span class="string">&quot;ControlRig&quot;</span>,</span><br><span class="line">   <span class="string">&quot;RigVM&quot;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Then rebuild your project, since I’m on linux using the pre compiled Unreal Engine I use the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /path/to/Engine/Build/BatchFiles/Linux/</span><br><span class="line"></span><br><span class="line">./Build.sh Development Linux -Project=<span class="string">&quot;/path/to/your/project/&lt;project-name&gt;.uproject&quot;</span> -TargetType=Editor</span><br></pre></td></tr></table></figure><h2 id="1-Creating-a-custom-Control-Rig-class"><a href="#1-Creating-a-custom-Control-Rig-class" class="headerlink" title="1. Creating a custom Control Rig class"></a>1. Creating a custom <code>Control Rig</code> class</h2><p>Here’s the template to create a custom control rig class:</p><p>*<strong>CustomControlRig.h*</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ControlRig.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;CustomControlRig.generated.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">UCLASS</span>(Blueprintable) <span class="comment">// without this the class won&#x27;t show up in the editor</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MYPROJECT_API</span> UCustomControlRig : <span class="keyword">public</span> UControlRig &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">GENERATED_BODY</span>()</span><br><span class="line"></span><br><span class="line">   <span class="keyword">protected</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">bool</span> <span class="title">Execute</span><span class="params">(<span class="type">const</span> FName&amp; InEventName)</span> <span class="keyword">override</span></span>; <span class="comment">// Tick() equivalent</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Initialize</span><span class="params">(<span class="type">bool</span> bRequestInit)</span> <span class="keyword">override</span></span>; <span class="comment">// BeginPlay() equivalent, initialize variables here</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>*<strong>CustomControlRig.cpp*</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;CustomControlRig.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">UCustomControlRig::Initialize</span><span class="params">(<span class="type">bool</span> bRequestInit)</span> </span>&#123;</span><br><span class="line">    Super::<span class="built_in">Initialize</span>(bRequestInit);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">UCustomControlRig::Execute</span><span class="params">(<span class="type">const</span> FName&amp; InEventName)</span> </span>&#123;</span><br><span class="line">    Super::<span class="built_in">Execute</span>(InEventName);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>You can override the <code>Initialize()</code> &amp; <code>Execute()</code> methods and add your logic.<br>You can conditionally check the <code>InEventName</code> to see if it’s <code>Forwards Solve</code> or <code>Backwards Solve</code><br>You can also use it as a parent class for your blueprint since we added <code>UCLASS(Blueprintable)</code>:</p><p><img data-src="/../img/CreateCustomCppControlRigForUnrealEngine/image-20241217223803479.png" alt="image-20241217223803479"></p><hr><h2 id="2-Creating-custom-nodes"><a href="#2-Creating-custom-nodes" class="headerlink" title="2. Creating custom nodes"></a>2. Creating custom nodes</h2><p>Incase you want to create reusable nodes inside the rig graph editor you can use the following template</p><p>*<strong>RigUnit_CustomNode.h*</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Units/RigUnit.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;RigUnit_CustomNode.generated.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">USTRUCT</span>(meta = (DisplayName = <span class="string">&quot;My Custom Node&quot;</span>, Category = <span class="string">&quot;Custom&quot;</span>))</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">CONTROLRIG_API</span> FRigUnit_CustomNode : <span class="keyword">public</span> FRigUnit &#123;</span><br><span class="line">    <span class="built_in">GENERATED_BODY</span>()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">FRigUnit_CustomNode</span>()</span><br><span class="line">        : <span class="built_in">A</span>(<span class="number">0.f</span>), <span class="built_in">B</span>(<span class="number">0.f</span>), <span class="built_in">Result</span>(<span class="number">0.f</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">RIGVM_METHOD</span>()</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Execute</span><span class="params">()</span> <span class="keyword">override</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">UPROPERTY</span>(meta = (Input))</span><br><span class="line">    <span class="type">float</span> A;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">UPROPERTY</span>(meta = (Input))</span><br><span class="line">    <span class="type">float</span> B;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">UPROPERTY</span>(meta = (Output))</span><br><span class="line">    <span class="type">float</span> Result;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>*<strong>RigUnit_CustomNode.cpp*</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;RigUnit_CustomNode.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">FRigUnit_CustomNode_Execute</span>()</span><br><span class="line">&#123;</span><br><span class="line">    Result = A + B;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(<strong>Note:</strong> Unreal is strict with the naming convention so name your rig unit class as such <code>FRigUnit_&lt;name&gt;</code>)</p><p>If all is done properly you should see your node in the rig graph editor as such:</p><p><img data-src="/../img/CreateCustomCppControlRigForUnrealEngine/image-20241217223835264.png" alt="image-20241217223835264"></p><h2 id="Nice-Reference"><a href="#Nice-Reference" class="headerlink" title="Nice Reference"></a>Nice Reference</h2><p><a href="https://www.youtube.com/watch?v=DPS0sQK3Rds">https://www.youtube.com/watch?v=DPS0sQK3Rds</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;How do I create a new custom c++ class which inherits from &lt;code&gt;ControlRig&lt;/code&gt;?&lt;br&gt;Copy from: &lt;a href=&quot;https://gamedev.stackexchange.com/questions/211984/how-to-create-custom-control-rig-class-in-c&quot;&gt;https://gamedev.stackexchange.com/questions/211984/how-to-create-custom-control-rig-class-in-c&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Unreal" scheme="http://mine-clever.art/categories/Unreal/"/>
    
    
    <category term="Unreal" scheme="http://mine-clever.art/tags/Unreal/"/>
    
    <category term="C++" scheme="http://mine-clever.art/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>一个宏命令，就可以程序崩溃时生成dump文件</title>
    <link href="http://mine-clever.art/2024/11/02/CreateMiniDumpForWinApp/"/>
    <id>http://mine-clever.art/2024/11/02/CreateMiniDumpForWinApp/</id>
    <published>2024-11-02T04:09:51.000Z</published>
    <updated>2024-11-02T04:15:27.096Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>在主程序初始化时加入 DeclareDumpFile();</p><p>创建头文件DumpFile.h, 将下列代码放进文件中：</p><span id="more"></span>   <hr><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt; Dbghelp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span>  </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;Dbghelp.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> NSDumpFile</span><br><span class="line">&#123; </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">CreateDumpFile</span><span class="params">(LPCWSTR lpstrDumpFilePathName, EXCEPTION_POINTERS *pException)</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="comment">// 创建Dump文件  </span></span><br><span class="line">        <span class="comment">//  </span></span><br><span class="line">        HANDLE hDumpFile = <span class="built_in">CreateFile</span>(lpstrDumpFilePathName, GENERIC_WRITE, <span class="number">0</span>, <span class="literal">NULL</span>, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, <span class="literal">NULL</span>);  </span><br><span class="line"></span><br><span class="line">        <span class="comment">// Dump信息  </span></span><br><span class="line">        <span class="comment">//  </span></span><br><span class="line">        MINIDUMP_EXCEPTION_INFORMATION dumpInfo;  </span><br><span class="line">        dumpInfo.ExceptionPointers = pException;  </span><br><span class="line">        dumpInfo.ThreadId = <span class="built_in">GetCurrentThreadId</span>();  </span><br><span class="line">        dumpInfo.ClientPointers = TRUE;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 写入Dump文件内容  </span></span><br><span class="line">        <span class="comment">//  </span></span><br><span class="line">        <span class="built_in">MiniDumpWriteDump</span>(<span class="built_in">GetCurrentProcess</span>(), <span class="built_in">GetCurrentProcessId</span>(), hDumpFile, MiniDumpNormal, &amp;dumpInfo, <span class="literal">NULL</span>, <span class="literal">NULL</span>);  </span><br><span class="line"></span><br><span class="line">        <span class="built_in">CloseHandle</span>(hDumpFile);  </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">LPTOP_LEVEL_EXCEPTION_FILTER WINAPI <span class="title">MyDummySetUnhandledExceptionFilter</span><span class="params">(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">BOOL <span class="title">PreventSetUnhandledExceptionFilter</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        HMODULE hKernel32 = <span class="built_in">LoadLibrary</span>(_T(<span class="string">&quot;kernel32.dll&quot;</span>));</span><br><span class="line">        <span class="keyword">if</span> (hKernel32 ==   <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">        <span class="type">void</span> *pOrgEntry = <span class="built_in">GetProcAddress</span>(hKernel32, <span class="string">&quot;SetUnhandledExceptionFilter&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(pOrgEntry == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">        <span class="type">unsigned</span> <span class="type">char</span> newJump[ <span class="number">100</span> ];</span><br><span class="line">        DWORD dwOrgEntryAddr = (DWORD) pOrgEntry;</span><br><span class="line">        dwOrgEntryAddr += <span class="number">5</span>; <span class="comment">// add 5 for 5 op-codes for jmp far</span></span><br><span class="line"></span><br><span class="line">        <span class="type">void</span> *pNewFunc = &amp;MyDummySetUnhandledExceptionFilter;</span><br><span class="line">        DWORD dwNewEntryAddr = (DWORD) pNewFunc;</span><br><span class="line">        DWORD dwRelativeAddr = dwNewEntryAddr -  dwOrgEntryAddr;</span><br><span class="line"></span><br><span class="line">        newJump[ <span class="number">0</span> ] = <span class="number">0xE9</span>;  <span class="comment">// JMP absolute</span></span><br><span class="line">        <span class="built_in">memcpy</span>(&amp;newJump[ <span class="number">1</span> ], &amp;dwRelativeAddr, <span class="built_in">sizeof</span>(pNewFunc));</span><br><span class="line">        SIZE_T bytesWritten;</span><br><span class="line">        BOOL bRet = <span class="built_in">WriteProcessMemory</span>(<span class="built_in">GetCurrentProcess</span>(),    pOrgEntry, newJump, <span class="built_in">sizeof</span>(pNewFunc) + <span class="number">1</span>, &amp;bytesWritten);</span><br><span class="line">        <span class="keyword">return</span> bRet;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">LONG WINAPI <span class="title">UnhandledExceptionFilterEx</span><span class="params">(<span class="keyword">struct</span> _EXCEPTION_POINTERS *pException)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        TCHAR szMbsFile[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">        ::<span class="built_in">GetModuleFileName</span>(<span class="literal">NULL</span>, szMbsFile, MAX_PATH);</span><br><span class="line">        TCHAR* pFind = _tcsrchr(szMbsFile, <span class="string">&#x27;\\&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>(pFind)</span><br><span class="line">        &#123;</span><br><span class="line">            *(pFind+<span class="number">1</span>) = <span class="number">0</span>;</span><br><span class="line">            _tcscat(szMbsFile, _T(<span class="string">&quot;CrashDumpFile.dmp&quot;</span>));</span><br><span class="line">            <span class="built_in">CreateDumpFile</span>(szMbsFile, pException);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> MiniDumpWriteDump</span></span><br><span class="line">        <span class="built_in">FatalAppExit</span>(<span class="number">-1</span>,  _T(<span class="string">&quot;Fatal Error&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> EXCEPTION_CONTINUE_SEARCH;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">RunCrashHandler</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">SetUnhandledExceptionFilter</span>(UnhandledExceptionFilterEx);</span><br><span class="line">        <span class="built_in">PreventSetUnhandledExceptionFilter</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DeclareDumpFile() NSDumpFile::RunCrashHandler();</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;在主程序初始化时加入 DeclareDumpFile();&lt;/p&gt;
&lt;p&gt;创建头文件DumpFile.h, 将下列代码放进文件中：&lt;/p&gt;</summary>
    
    
    
    <category term="水" scheme="http://mine-clever.art/categories/%E6%B0%B4/"/>
    
    
    <category term="破事水" scheme="http://mine-clever.art/tags/%E7%A0%B4%E4%BA%8B%E6%B0%B4/"/>
    
  </entry>
  
  <entry>
    <title>ConvertSDF2NormalTS</title>
    <link href="http://mine-clever.art/2024/04/13/ConvertSDF2NormalTS/"/>
    <id>http://mine-clever.art/2024/04/13/ConvertSDF2NormalTS/</id>
    <published>2024-04-13T08:49:22.000Z</published>
    <updated>2024-04-13T09:29:38.297Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>一种简单的方法将类原神SDF面部贴图转换为Tangent Space Normal映射图.</p><p>集团有一个项目是山寨出来一个东南亚原神, SDF图的方法无法适用于Unreal的多光源, 显然直接用法线才是合理的方法.</p><span id="more"></span>   <h1 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h1><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">vec3</span> TransformLocalVectorToTangent (<span class="type">vec3</span> InLocalVector)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> InLocalVector * Transpose(TBN_Matrix) * (<span class="type">mat3</span>)ObjectToWolrdMatrix;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">vec3</span> ConvertSdf2NormTS (<span class="type">float</span> InputSDF, <span class="type">float</span> OffsetSDF = <span class="number">0.0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> PI = <span class="built_in">acos</span>(<span class="number">-1.0</span>);</span><br><span class="line">    <span class="type">float</span> InvertScaledNum = <span class="number">2</span> / PI;</span><br><span class="line">    <span class="type">float</span> DecodedSDF = <span class="built_in">asin</span>(saturate(InputSDF + OffsetSDF) * <span class="number">2.0</span> - <span class="number">1.0</span>) * InvertScaledNum;</span><br><span class="line">    <span class="type">vec3</span> TangentU = TransformLocalVectorToTangent(<span class="type">vec3</span>(<span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>));</span><br><span class="line">    <span class="type">vec3</span> TangentV = TransformLocalVectorToTangent(<span class="type">vec3</span>(<span class="number">0.5</span>, <span class="number">1.0</span>, <span class="number">0.0</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">normalize</span>(lerp(TangentV, TangentU, DecodedSDF));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><ul><li>首先,我们需要将SDF计算确定在切线空间, 这是我们统一的计算空间, 我们的目标就是输出切线空间的法线映射图.</li><li>我们可以简单的将输入SDF看作为切空间法线的偏转角度.</li><li>由于类原神SDF的特殊性, 我们可以简单将角度限定在半球.</li><li>将SDF从[0-1]转换到[-1, 1], 来表示在半球内偏转的方向的弧度值.</li><li>使用asin将[-1 , 1]的弧度值转换为[-Π&#x2F;2 , Π&#x2F;2].</li><li>归一化操作后,直接作为切值的依据.</li><li>由于我们只有一个方向的数据来源, 我们直接用非归一的且朝向切线的副切线来处理一个垂直方向的角度.</li><li>最终进行归一的切线空间法线输出.</li></ul><h2 id="Unreal直接作为CustomNode使用"><a href="#Unreal直接作为CustomNode使用" class="headerlink" title="Unreal直接作为CustomNode使用"></a>Unreal直接作为CustomNode使用</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// Convert Genshine Liked SDF Face map to Tangent NormalMap</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SdfConvertToNormalLib</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="meta">#<span class="keyword">define</span> InvertScaledNum 0.6366197724</span></span><br><span class="line"></span><br><span class="line">    FMaterialPixelParameters Parameters;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">inline</span> MaterialFloat3 <span class="title function_">TransformLocalVectorToTangent</span> <span class="params">(MaterialFloat3 InLocalVector)</span></span><br><span class="line">    &#123;   <span class="comment">// Transform LocalVector to TangentSpace, for Unreal</span></span><br><span class="line">        MaterialFloat3 VectorWS = TransformLocalVectorToWorld(Parameters, InLocalVector);</span><br><span class="line">        MaterialFloat3 VectorTS = mul((MaterialFloat3x3)(Parameters.TangentToWorld), VectorWS);</span><br><span class="line">        <span class="keyword">return</span> VectorTS;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    float3 <span class="title function_">ConvertSdf2NormTS</span> <span class="params">(<span class="type">float</span> InputSDF)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">float</span> DecodedSDF = <span class="built_in">asin</span>(saturate(InputSDF) * <span class="number">2.0</span> - <span class="number">1.0</span>) * InvertScaledNum;</span><br><span class="line">        float3 TangentU = TransformLocalVectorToTangent(float3(<span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>));</span><br><span class="line">        float3 TangentV = TransformLocalVectorToTangent(float3(<span class="number">0.5</span>, <span class="number">1.0</span>, <span class="number">0.0</span>));</span><br><span class="line">        <span class="keyword">return</span> normalize(lerp(TangentV, TangentU, DecodedSDF));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;UnrealCustomNode;</span><br><span class="line"></span><br><span class="line">UnrealCustomNode.Parameters = Parameters;</span><br><span class="line"><span class="keyword">return</span> UnrealCustomNode.ConvertSdf2NormTS(INPUT.x);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;一种简单的方法将类原神SDF面部贴图转换为Tangent Space Normal映射图.&lt;/p&gt;
&lt;p&gt;集团有一个项目是山寨出来一个东南亚原神, SDF图的方法无法适用于Unreal的多光源, 显然直接用法线才是合理的方法.&lt;/p&gt;</summary>
    
    
    
    <category term="水" scheme="http://mine-clever.art/categories/%E6%B0%B4/"/>
    
    
    <category term="破事水" scheme="http://mine-clever.art/tags/%E7%A0%B4%E4%BA%8B%E6%B0%B4/"/>
    
  </entry>
  
  <entry>
    <title>博德之门3自动荣耀</title>
    <link href="http://mine-clever.art/2023/12/12/Bg3AutoHonour/"/>
    <id>http://mine-clever.art/2023/12/12/Bg3AutoHonour/</id>
    <published>2023-12-12T12:39:47.000Z</published>
    <updated>2023-12-12T12:50:40.500Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>荣耀属于需要他的人(逃</p><ul><li>F5 监听存档文件夹下的荣耀存档</li><li>Shift+ESC 退出脚本</li></ul><span id="more"></span>   <h2 id="Python脚本"><a href="#Python脚本" class="headerlink" title="Python脚本"></a>Python脚本</h2><ul><li><p>旧版使用15秒自动复制文件, 被群友嫌弃</p></li><li><p>新版使用看门狗监听文件夹, 并自动根据Hash变化备份文件</p></li><li><p>游戏存档文件位于</p><ul><li><strong>%localappdata%&#x2F;Larian Studios&#x2F;Baldur’s Gate 3&#x2F;PlayerProfiles&#x2F;Public&#x2F;Savegames&#x2F;Story</strong></li></ul></li><li><p>默认备份文件于</p><ul><li><strong>%localappdata%&#x2F;Larian Studios&#x2F;Baldur’s Gate 3&#x2F;PlayerProfiles&#x2F;Public&#x2F;Savegames&#x2F;Story&#x2F;BackupFiles&#x2F;[备份时间]</strong></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line">__doc__= <span class="string">u&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">使荣耀更加荣耀</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys, os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> pynput <span class="keyword">import</span> keyboard</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> watchdog.events</span><br><span class="line"><span class="keyword">from</span> watchdog.observers <span class="keyword">import</span> Observer</span><br><span class="line"><span class="keyword">from</span> watchdog.events <span class="keyword">import</span> FileSystemEventHandler</span><br><span class="line"><span class="keyword">from</span> watchdog.observers.api <span class="keyword">import</span> BaseObserver</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HashHelper</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calFileSha256</span>(<span class="params">cls, filePath</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>) -&gt; <span class="built_in">str</span></span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filePath, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            file_hash = hashlib.sha256()</span><br><span class="line">            <span class="keyword">while</span> chunk := file.read(<span class="number">1024</span> * <span class="number">1024</span>):</span><br><span class="line">                file_hash.update(chunk)</span><br><span class="line">        <span class="keyword">return</span> file_hash.hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BG3AutoHonour</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">    playerProfileSavedPath = os.path.join (</span><br><span class="line">        os.environ[<span class="string">&quot;localappdata&quot;</span>],</span><br><span class="line">        <span class="string">&quot;Larian Studios/Baldur&#x27;s Gate 3/PlayerProfiles/Public/Savegames/Story&quot;</span></span><br><span class="line">        ).replace(<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;/&quot;</span>)</span><br><span class="line">    playerBackupPath = os.path.join(playerProfileSavedPath, <span class="string">&quot;BackupFiles&quot;</span>).replace(<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;/&quot;</span>)</span><br><span class="line">    waitSecond = <span class="number">15</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">autoBackup</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Waiting for &#123;&#125;s&quot;</span>.<span class="built_in">format</span>(cls.waitSecond))</span><br><span class="line">        time.sleep(cls.waitSecond) <span class="comment"># 强制等待, 确保存档已经创建</span></span><br><span class="line">        </span><br><span class="line">        honourSavedFolderList = [] <span class="comment"># type: <span class="built_in">list</span>[<span class="built_in">str</span>]</span></span><br><span class="line">        currentTime = time.strftime(<span class="string">&quot;%Y-%m-%d_%H-%M&quot;</span>, time.localtime()) </span><br><span class="line">        <span class="keyword">for</span> curPath <span class="keyword">in</span> os.listdir(cls.playerProfileSavedPath):</span><br><span class="line">            <span class="keyword">if</span> ( <span class="keyword">not</span> os.path.isdir(curPath)):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> curPath.endswith(<span class="string">&quot;__HonourMode&quot;</span>):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            honourSavedFolderList.append(curPath)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(cls.playerBackupPath):</span><br><span class="line">            os.mkdir(cls.playerBackupPath)</span><br><span class="line">            </span><br><span class="line">        newBackupTargetFolder = os.path.join(cls.playerBackupPath,currentTime).replace(<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;/&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(newBackupTargetFolder):</span><br><span class="line">            os.mkdir(newBackupTargetFolder)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> folderPath <span class="keyword">in</span> honourSavedFolderList:</span><br><span class="line">            targetFolder = os.path.join(newBackupTargetFolder, os.path.basename(folderPath)).replace(<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;/&quot;</span>)</span><br><span class="line">            shutil.copytree(folderPath, targetFolder,</span><br><span class="line">                            dirs_exist_ok=<span class="literal">True</span>, ignore_dangling_symlinks=<span class="literal">True</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Backup to &#123;&#125;&quot;</span>.<span class="built_in">format</span>(targetFolder))</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">listen</span>(<span class="params">cls</span>):</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">shiftEsc</span>():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Shift + Esc Pressed, Exit&quot;</span>)</span><br><span class="line">            exit()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">KeyRecorder</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">            <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">                self.keyPressed = <span class="built_in">set</span>() <span class="comment"># type: <span class="built_in">set</span>[keyboard.Key]</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">def</span> <span class="title function_">onPress</span>(<span class="params">self, key</span>):</span><br><span class="line">                <span class="comment"># type: (keyboard.Key) -&gt; <span class="literal">None</span></span></span><br><span class="line">                self.keyPressed.add(key)</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">def</span> <span class="title function_">onRelease</span>(<span class="params">self, key</span>) :</span><br><span class="line">                <span class="comment"># type: (keyboard.Key) -&gt; <span class="literal">None</span></span></span><br><span class="line">                keyCount=self.keyPressed.__len__() </span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> (keyCount == <span class="number">1</span>) <span class="keyword">and</span> (keyboard.Key.f5 == key):</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;F5 Pressed&quot;</span>)</span><br><span class="line">                    cls.autoBackup()</span><br><span class="line">                    </span><br><span class="line">                <span class="keyword">if</span> (keyCount == <span class="number">2</span>) <span class="keyword">and</span> (keyboard.Key.esc <span class="keyword">in</span> self.keyPressed) <span class="keyword">and</span> (keyboard.Key.shift <span class="keyword">in</span> self.keyPressed):</span><br><span class="line">                    shiftEsc()</span><br><span class="line">                    </span><br><span class="line">                self.keyPressed.clear()</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span> (<span class="string">u&quot;Current save path: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(cls.playerProfileSavedPath))</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">u&quot;Use hotkey F5 for honour!&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        keyRecorder = KeyRecorder()</span><br><span class="line">        <span class="keyword">with</span> keyboard.Listener(on_press=keyRecorder.onPress, on_release=keyRecorder.onRelease) <span class="keyword">as</span> listener:</span><br><span class="line">            listener.join()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BG3AutoHonourWatchdog</span>(<span class="title class_ inherited__">BG3AutoHonour</span>):</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">generateSaveFilePathHashDict</span>(<span class="params">cls</span>):</span><br><span class="line">        honourSavedFolderList = [] <span class="comment"># type: <span class="built_in">list</span>[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Use in save dir</span></span><br><span class="line">        <span class="keyword">for</span> curPath <span class="keyword">in</span> os.listdir(cls.playerProfileSavedPath):</span><br><span class="line">            <span class="keyword">if</span> ( <span class="keyword">not</span> os.path.isdir(curPath)):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> curPath.endswith(<span class="string">&quot;__HonourMode&quot;</span>):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            honourSavedFolderList.append(curPath)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create hash dict</span></span><br><span class="line">        fileDict = <span class="built_in">dict</span>() <span class="comment">#type: dict[str,str]</span></span><br><span class="line">        <span class="keyword">for</span> saveFolderPath <span class="keyword">in</span> honourSavedFolderList:</span><br><span class="line">            folderName = os.path.join(cls.playerProfileSavedPath, saveFolderPath).replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">            savedFile = os.path.join(folderName, <span class="string">&quot;HonourMode.lsv&quot;</span>).replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">            hashValue = HashHelper.calFileSha256(savedFile)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;File [&#123;&#125;], Hash [&#123;&#125;]&quot;</span>.<span class="built_in">format</span>(savedFile, hashValue))</span><br><span class="line">            fileDict[folderName] = hashValue</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fileDict</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">autoBackup</span>(<span class="params">cls, savedFilePath</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>)-&gt;<span class="literal">None</span></span></span><br><span class="line">        currentTime = time.strftime(<span class="string">&quot;%Y-%m-%d_%H-%M&quot;</span>, time.localtime())</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Generate Time: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(currentTime))</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(cls.playerBackupPath):</span><br><span class="line">            os.mkdir(cls.playerBackupPath)</span><br><span class="line">            </span><br><span class="line">        newBackupTargetFolder = os.path.join(cls.playerBackupPath, currentTime).replace(<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;/&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(newBackupTargetFolder):</span><br><span class="line">            os.mkdir(newBackupTargetFolder)</span><br><span class="line"></span><br><span class="line">        sourceFolderPath = savedFilePath</span><br><span class="line">        targetFolder = os.path.join(newBackupTargetFolder, os.path.basename(sourceFolderPath)).replace(<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;/&quot;</span>)</span><br><span class="line">        shutil.copytree(sourceFolderPath, targetFolder, dirs_exist_ok=<span class="literal">True</span>, ignore_dangling_symlinks=<span class="literal">True</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Backup to [&#123;&#125;]\r\n&quot;</span>.<span class="built_in">format</span>(targetFolder))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;-&quot;</span> * <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">listen</span>(<span class="params">cls</span>):</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">shiftEsc</span>():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;[Shift + Esc] Pressed, Exit&quot;</span>)</span><br><span class="line">            exit()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">UserSavedFileWatchDog</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">            <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">                self._eventHandle = <span class="literal">None</span></span><br><span class="line">                self._observer = <span class="literal">None</span></span><br><span class="line">                </span><br><span class="line">            <span class="keyword">def</span> <span class="title function_">makeFolderWatching</span>(<span class="params">self</span>):</span><br><span class="line">                watchingPath = cls.playerProfileSavedPath</span><br><span class="line">                userSaveHashDict = cls.generateSaveFilePathHashDict()</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">class</span> <span class="title class_">SaveChangedHandler</span>(<span class="title class_ inherited__">FileSystemEventHandler</span>):</span><br><span class="line">                    </span><br><span class="line">                    <span class="keyword">def</span> <span class="title function_">__init__</span> (self, observer, *args, **kw):</span><br><span class="line">                        <span class="comment"># type: (BaseObserver, ..., ...)-&gt;<span class="literal">None</span></span></span><br><span class="line">                        self._observer = observer</span><br><span class="line">                        <span class="built_in">super</span>().__init__(*args, **kw)</span><br><span class="line">                        </span><br><span class="line">                    <span class="keyword">def</span> <span class="title function_">on_modified</span>(<span class="params">self, event</span>):</span><br><span class="line">                        <span class="comment"># type: (watchdog.events.FileModifiedEvent) -&gt; <span class="literal">None</span></span></span><br><span class="line">                        sourcePath = event.src_path <span class="comment"># type: <span class="built_in">str</span></span></span><br><span class="line">                        changedFilePath = os.path.abspath(sourcePath).replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&quot;File path [&#123;&#125;] was modified&quot;</span>.<span class="built_in">format</span>(changedFilePath))</span><br><span class="line"> </span><br><span class="line">                        <span class="keyword">if</span> changedFilePath <span class="keyword">in</span> userSaveHashDict:</span><br><span class="line">                            <span class="built_in">print</span>(<span class="string">&quot;Found in hash dict, Checking hash value&quot;</span>)</span><br><span class="line">                            savedFile = os.path.join(changedFilePath, <span class="string">&quot;HonourMode.lsv&quot;</span>).replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">                            <span class="keyword">try</span>:</span><br><span class="line">                                changedFileHash = HashHelper.calFileSha256(savedFile)</span><br><span class="line">                            <span class="keyword">except</span> FileNotFoundError :</span><br><span class="line">                                time.sleep(<span class="number">5</span>)</span><br><span class="line">                                changedFileHash = HashHelper.calFileSha256(savedFile)</span><br><span class="line">                            <span class="keyword">finally</span>:</span><br><span class="line">                                <span class="built_in">print</span>(<span class="string">&quot;New File Hash: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(changedFileHash))</span><br><span class="line">                            </span><br><span class="line">                            <span class="keyword">if</span> userSaveHashDict[changedFilePath] != changedFileHash:</span><br><span class="line">                                <span class="built_in">print</span>(<span class="string">&quot;File Hash was changed! Backup !&quot;</span>)</span><br><span class="line">                                BG3AutoHonourWatchdog.autoBackup(changedFilePath)</span><br><span class="line">                                <span class="keyword">if</span> self._observer:</span><br><span class="line">                                    self._observer.stop()</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> self._observer == <span class="literal">None</span>:</span><br><span class="line">                    self._observer = Observer()</span><br><span class="line">                observer = self._observer</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> self._eventHandle == <span class="literal">None</span>:</span><br><span class="line">                    self._eventHandle = SaveChangedHandler(observer)</span><br><span class="line"></span><br><span class="line">                observer.schedule(self._eventHandle, watchingPath, recursive=<span class="literal">False</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;Start watching : [&#123;&#125;]&quot;</span>.<span class="built_in">format</span>(watchingPath))</span><br><span class="line">                observer.start()</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">try</span>: </span><br><span class="line">                    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                        time.sleep(<span class="number">1</span>)</span><br><span class="line">                        <span class="keyword">if</span> <span class="keyword">not</span> observer.is_alive():</span><br><span class="line">                            <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;User Interrupt!&quot;</span>)</span><br><span class="line">                    observer.stop()</span><br><span class="line">                </span><br><span class="line">                observer.join()</span><br><span class="line">                <span class="comment"># <span class="doctag">NOTE:</span> Reset to None</span></span><br><span class="line">                self._observer = self._eventHandle = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">KeyRecorder</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">            <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">                self.keyPressed = <span class="built_in">set</span>() <span class="comment"># type: <span class="built_in">set</span>[keyboard.Key]</span></span><br><span class="line">                self.watchDog = <span class="literal">None</span></span><br><span class="line">                self.isWatching = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">def</span> <span class="title function_">onPress</span>(<span class="params">self, key</span>):</span><br><span class="line">                <span class="comment"># type: (keyboard.Key) -&gt; <span class="literal">None</span></span></span><br><span class="line">                self.keyPressed.add(key)</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">def</span> <span class="title function_">onRelease</span>(<span class="params">self, key</span>) :</span><br><span class="line">                <span class="comment"># type: (keyboard.Key) -&gt; <span class="literal">None</span></span></span><br><span class="line">                keyCount=self.keyPressed.__len__() </span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (keyCount == <span class="number">1</span>) <span class="keyword">and</span> (keyboard.Key.f5 == key):</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;F5 Pressed&quot;</span>)</span><br><span class="line">                    <span class="keyword">if</span> self.watchDog == <span class="literal">None</span>:</span><br><span class="line">                        self.watchDog = UserSavedFileWatchDog()</span><br><span class="line">                    </span><br><span class="line">                    self.watchDog.makeFolderWatching()</span><br><span class="line">                    </span><br><span class="line">                <span class="keyword">if</span> (keyCount == <span class="number">2</span>) <span class="keyword">and</span> (keyboard.Key.esc <span class="keyword">in</span> self.keyPressed) <span class="keyword">and</span> (keyboard.Key.shift <span class="keyword">in</span> self.keyPressed):</span><br><span class="line">                    shiftEsc()</span><br><span class="line">                    </span><br><span class="line">                self.keyPressed.clear()</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span> (<span class="string">u&quot;Current save path: [&#123;&#125;]&quot;</span>.<span class="built_in">format</span>(cls.playerProfileSavedPath))</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">u&quot;Use hotkey [F5] for honour!\nUse hotkey [Shift+ESC] exit this script ...&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        keyRecorder = KeyRecorder()</span><br><span class="line">        <span class="keyword">with</span> keyboard.Listener(on_press=keyRecorder.onPress, on_release=keyRecorder.onRelease) <span class="keyword">as</span> listener:</span><br><span class="line">            listener.join()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ListenThread</span>(<span class="title class_ inherited__">Thread</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        BG3AutoHonourWatchdog.listen()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">runScript</span>(<span class="params">*args, **kw</span>):</span><br><span class="line">    listenThread = ListenThread()</span><br><span class="line">    listenThread.start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    runScript()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;荣耀属于需要他的人(逃&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;F5 监听存档文件夹下的荣耀存档&lt;/li&gt;
&lt;li&gt;Shift+ESC 退出脚本&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="水" scheme="http://mine-clever.art/categories/%E6%B0%B4/"/>
    
    <category term="python" scheme="http://mine-clever.art/categories/%E6%B0%B4/python/"/>
    
    
    <category term="破事水" scheme="http://mine-clever.art/tags/%E7%A0%B4%E4%BA%8B%E6%B0%B4/"/>
    
    <category term="博德之门3" scheme="http://mine-clever.art/tags/%E5%8D%9A%E5%BE%B7%E4%B9%8B%E9%97%A83/"/>
    
  </entry>
  
  <entry>
    <title>Houdini Python 快速开始</title>
    <link href="http://mine-clever.art/2023/11/25/HoudiniPythonFastReference/"/>
    <id>http://mine-clever.art/2023/11/25/HoudiniPythonFastReference/</id>
    <published>2023-11-25T10:07:52.000Z</published>
    <updated>2023-11-25T10:10:34.897Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>Houdini的Python耦合性比较高, 有些方法没有那么自觉.</p><p>放几个简单案例用来快速开始使用~</p><span id="more"></span>   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> hou</span><br><span class="line"><span class="comment">#############################################</span></span><br><span class="line"><span class="comment"># 获取与设置节点属性</span></span><br><span class="line"><span class="comment">#############################################</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_and_set_node_parameters</span>(<span class="params">node_name=<span class="string">&quot;&quot;</span></span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n------------\n&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Start Create!\n&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    current_root_node = hou.node(<span class="string">&quot;/obj&quot;</span>)<span class="comment"># type: hou.Node</span></span><br><span class="line">    geo_node = current_root_node.createNode(<span class="string">&quot;geo&quot;</span>) <span class="comment">#type: hou.ObjNode</span></span><br><span class="line">    <span class="keyword">if</span> node_name:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> hou.node(<span class="string">&quot;&#123;&#125;/&#123;&#125;&quot;</span>.<span class="built_in">format</span>(current_root_node.path(), node_name)):</span><br><span class="line">            geo_node.setName(node_name)</span><br><span class="line">    geo_node.setSelected(<span class="literal">True</span>, clear_all_selected=<span class="literal">True</span>) <span class="comment">#替换选择</span></span><br><span class="line">    <span class="comment"># <span class="doctag">NOTE:</span> 在此节点下创建其它节点, 不需要选中, 以上选中仅用于测试.</span></span><br><span class="line">    <span class="comment"># <span class="doctag">NOTE:</span> run_init_scripts的作用主要是在Geometry中内置一个File SOP</span></span><br><span class="line">    <span class="comment">#       如果设置为了False就不会做这个事情了</span></span><br><span class="line">    <span class="comment">#       除此以外还有一些渲染相关的参数也不会被加到Geometry中</span></span><br><span class="line">    box_node = geo_node.createNode(<span class="string">&quot;box&quot;</span>, run_init_scripts=<span class="literal">False</span>) <span class="comment"># type: hou.SopNode</span></span><br><span class="line">    box_node.moveToGoodPosition()</span><br><span class="line">    <span class="comment"># 细分节点</span></span><br><span class="line">    subd_node = geo_node.createNode(<span class="string">&quot;subdivide&quot;</span>, run_init_scripts=<span class="literal">False</span>)<span class="comment"># type: hou.SopNode</span></span><br><span class="line">    <span class="comment"># <span class="doctag">NOTE:</span> 设置生成节点的参数</span></span><br><span class="line">    iteration_parm = subd_node.parm(<span class="string">&quot;iterations&quot;</span>) <span class="comment"># type: hou.Parm</span></span><br><span class="line">    <span class="keyword">if</span> iteration_parm:</span><br><span class="line">        iteration_parm.<span class="built_in">set</span>(<span class="number">3</span>)</span><br><span class="line">    subd_node.setInput(<span class="number">0</span>, box_node)</span><br><span class="line">    subd_node.moveToGoodPosition() <span class="comment"># 自动设置在Houdini 中的 layout</span></span><br><span class="line">    subd_node.setDisplayFlag(<span class="literal">True</span>)</span><br><span class="line">    subd_node.setRenderFlag(<span class="literal">True</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n------------\n&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Sub node count under &#123;&#125;:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(geo_node.path(), geo_node.numItems()))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 参数获取</span></span><br><span class="line">    box_tx_ch = hou.ch(<span class="string">&quot;&#123;&#125;/tx&quot;</span>.<span class="built_in">format</span>(box_node.path()))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;box_tx type: &#123;&#125; val: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">type</span>(box_tx_ch),box_tx_ch))</span><br><span class="line">    box_scale = box_node.parm(<span class="string">&quot;scale&quot;</span>) <span class="comment">#type: hou.Parm</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;box_scale type: &#123;&#125; val: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">type</span>(box_scale), box_scale.<span class="built_in">eval</span>()))</span><br><span class="line">    <span class="comment"># 复数参数</span></span><br><span class="line">    box_divs = box_node.parmTuple(<span class="string">&quot;divs&quot;</span>) <span class="comment"># type: hou.ParmTuple</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;box_divs type: &#123;&#125; val: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">type</span>(box_divs), box_divs.<span class="built_in">eval</span>()))</span><br><span class="line">    box_parms_list =box_node.parms() <span class="comment"># type: <span class="built_in">tuple</span>[hou.Parm]</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n------------\n&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(box_parms_list)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n------------\n&quot;</span>)</span><br><span class="line">    box_parm_tuples = box_node.parmTuples() <span class="comment">#type: tuple[hou.ParmTuple]</span></span><br><span class="line">    <span class="built_in">print</span>(box_parm_tuples)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n------------\n&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># <span class="doctag">NOTE:</span></span></span><br><span class="line">    <span class="comment"># ParmTuple -&gt; size : tuple[Parm]</span></span><br><span class="line">    <span class="comment"># Parm -&gt; sizex, sizey, sizez : Parm</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 参数设置</span></span><br><span class="line">    box_node.parm(<span class="string">&quot;tx&quot;</span>).<span class="built_in">set</span>(box_tx_ch + <span class="number">0.5</span>)</span><br><span class="line">    box_node.parmTuple(<span class="string">&quot;size&quot;</span>).<span class="built_in">set</span>([<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">0.5</span>])</span><br><span class="line">    box_scale.<span class="built_in">set</span>(<span class="number">2</span>)</span><br><span class="line">    box_divs.<span class="built_in">set</span>([<span class="number">0</span>,<span class="number">10</span>,<span class="number">0</span>])</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment"># eval 用于返回表达式值</span></span><br><span class="line">    <span class="comment"># houdini的设置属性，一般都是set</span></span><br><span class="line">    <span class="comment"># 但是如果想获取到属性值，就必须得用eval，他没有对应的get函数，这个和平常不太一样</span></span><br><span class="line">    val_box_div_a = box_divs.<span class="built_in">eval</span>()</span><br><span class="line">    val_box_div_b = box_node.evalParmTuple(<span class="string">&quot;divs&quot;</span>)</span><br><span class="line">    val_geo_tx_a = geo_node.evalParm(<span class="string">&quot;tx&quot;</span>)</span><br><span class="line">    val_geo_tx_b = geo_node.parm(<span class="string">&quot;tx&quot;</span>).<span class="built_in">eval</span>()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;divs:&#123;&#125;, divs:&#123;&#125;, tx:&#123;&#125;, tx:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(val_box_div_a, val_box_div_b, val_geo_tx_a, val_geo_tx_b))</span><br><span class="line"></span><br><span class="line">    geo_node.moveToGoodPosition()</span><br><span class="line"></span><br><span class="line">get_and_set_node_parameters(<span class="string">&quot;TestNode&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#############################################</span></span><br><span class="line"><span class="comment"># 从节点反向生成代码</span></span><br><span class="line"><span class="comment">#############################################</span></span><br><span class="line"><span class="comment"># ref: https://elmagnifico.tech/2023/04/21/Houdini-GeometrySpreadsheet/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_code_from_object</span> ():</span><br><span class="line">    </span><br><span class="line">    current_root_node = hou.node(<span class="string">&quot;/obj&quot;</span>)<span class="comment"># type: hou.Node</span></span><br><span class="line">    geo_node = current_root_node.createNode(<span class="string">&quot;geo&quot;</span>) <span class="comment">#type: hou.ObjNode</span></span><br><span class="line">    box_node = geo_node.createNode(<span class="string">&quot;box&quot;</span>, run_init_scripts=<span class="literal">False</span>) <span class="comment"># type: hou.SopNode</span></span><br><span class="line">    geo_node.setSelected(<span class="literal">True</span>, clear_all_selected=<span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># print(hou.node(&quot;/obj/box1&quot;).asCode())</span></span><br><span class="line">    <span class="built_in">print</span>(box_node.asCode())</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;Houdini的Python耦合性比较高, 有些方法没有那么自觉.&lt;/p&gt;
&lt;p&gt;放几个简单案例用来快速开始使用~&lt;/p&gt;</summary>
    
    
    
    <category term="Houdini" scheme="http://mine-clever.art/categories/Houdini/"/>
    
    
    <category term="Houdini" scheme="http://mine-clever.art/tags/Houdini/"/>
    
  </entry>
  
  <entry>
    <title>Unreal中使用Pyside2</title>
    <link href="http://mine-clever.art/2023/11/03/CreateQtWinInUnreal/"/>
    <id>http://mine-clever.art/2023/11/03/CreateQtWinInUnreal/</id>
    <published>2023-11-03T01:30:29.000Z</published>
    <updated>2023-11-05T12:53:56.814Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>Unreal Engine这几次更新后, 强化了Python(DCC之王)的使用.</p><p>在Editor使用情况下, 用PySide2 写UI远远比原生的SlateUI好用太多…</p><span id="more"></span>   <p>但是Unreal创建Qt窗口时, 会导致窗口无法前台, 一闪而过, 使用以下方法,可以快速附加Qt窗口到Unreal.</p><hr><h1 id="Easy-To-Copy"><a href="#Easy-To-Copy" class="headerlink" title="Easy To Copy!"></a>Easy To Copy!</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># Script created by MineClever</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re <span class="keyword">as</span> re</span><br><span class="line"><span class="keyword">import</span> unreal <span class="keyword">as</span> unreal</span><br><span class="line"><span class="keyword">import</span> os <span class="keyword">as</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment">################################</span></span><br><span class="line"><span class="comment"># Build Ui for tool.</span></span><br><span class="line"><span class="comment">################################</span></span><br><span class="line"><span class="comment"># UI Part</span></span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> partial</span><br><span class="line"><span class="keyword">import</span> PySide2 <span class="keyword">as</span> PySide2</span><br><span class="line"><span class="keyword">from</span> PySide2 <span class="keyword">import</span> QtWidgets, QtUiTools, QtWidgets, QtCore</span><br><span class="line"><span class="comment">####################################</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UnrealPyUiLoaderBase</span> (QtWidgets.QWidget):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Create a default tool window. Base Class</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># store ref to window to prevent garbage collection</span></span><br><span class="line">    window = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, parent=<span class="literal">None</span>, ui_file_name=<span class="string">&quot;&quot;</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Import UI and connect components</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="built_in">super</span>().__init__(parent)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># load the created UI widget</span></span><br><span class="line">        current_file_dir = current_file_dir = os.path.dirname(__file__)</span><br><span class="line">        ui_file_path = os.path.join(current_file_dir, ui_file_name).replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> path to .ui file</span></span><br><span class="line">        ui_file_object = QtCore.QFile(ui_file_path)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> ui_file_object.<span class="built_in">open</span>(QtCore.QIODevice.ReadOnly):</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&quot;Can not load ui file &#123;&#125;&quot;</span>.<span class="built_in">format</span>(ui_file_path))</span><br><span class="line"></span><br><span class="line">        qt_ui_loader = QtUiTools.QUiLoader()</span><br><span class="line">        loaded_ui_window = qt_ui_loader.load(ui_file_object)  <span class="comment"># type: QtWidgets.QWidget</span></span><br><span class="line">        self.widget = loaded_ui_window</span><br><span class="line">        <span class="comment"># attach the widget to the instance of this class (aka self)</span></span><br><span class="line">        self.widget.setParent(self)</span><br><span class="line">        self._modifyUi()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">findButton</span>(<span class="params">self, name, clicked_callback=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>, ...) -&gt; QtWidgets.QPushButton | <span class="literal">None</span></span></span><br><span class="line">        <span class="keyword">if</span> self.widget == <span class="literal">None</span> : <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        btn = self.widget.findChild(QtWidgets.QPushButton, name) <span class="comment"># type: QtWidgets.QPushButton</span></span><br><span class="line">        <span class="keyword">if</span> clicked_callback <span class="keyword">and</span> btn:</span><br><span class="line">            btn.clicked.connect(clicked_callback)</span><br><span class="line">        <span class="keyword">return</span> btn</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">findTextEdit</span>(<span class="params">self, name</span>):</span><br><span class="line">        <span class="keyword">if</span> self.widget == <span class="literal">None</span>: <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        txt_edit = self.widget.findChild(QtWidgets.QTextEdit, name) <span class="comment"># type: QtWidgets.QTextEdit</span></span><br><span class="line">        <span class="keyword">return</span> txt_edit</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_modifyUi</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Modify current widget load from ui file&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">resizeEvent</span>(<span class="params">self, event</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Called on automatically generated resize event</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.widget.resize(self.width(), self.height())</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">closewindow</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Close the window.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.destroy()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">QtUiStartHelper</span>():</span><br><span class="line">    <span class="string">u&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Always calling &quot;start_qt_app()&quot; firstly. Then init this class with a widget.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ---</span></span><br><span class="line"><span class="string">    Example:</span></span><br><span class="line"><span class="string">    ---</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    QtUiStartHelper.start_qt_app()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    qt_ui_widget = UnrealMeshTexExportUiLoader(ui_file_name = &quot;unreal_tool_ui_path.ui&quot;)</span></span><br><span class="line"><span class="string">    unreal_qt_ui_helper = QtUiStartHelper(qt_ui_widget)</span></span><br><span class="line"><span class="string">    unreal_qt_ui_helper.windowTitleName = u&quot;Unreal Tool Name &quot; + unreal_qt_ui_helper.version</span></span><br><span class="line"><span class="string">__file__</span></span><br><span class="line"><span class="string">    unreal_qt_ui_helper.build_unreal_window()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_registerUnrealQtAppWindow</span>():</span><br><span class="line">        unreal_app = QtWidgets.QApplication([])</span><br><span class="line">        tick_handle = unreal.register_slate_post_tick_callback(</span><br><span class="line">            <span class="keyword">lambda</span> delta: QtWidgets.QApplication.sendPostedEvents())</span><br><span class="line">        __QtAppQuit__ = partial(unreal.unregister_slate_post_tick_callback, tick_handle)</span><br><span class="line">        unreal_app.aboutToQuit.connect(__QtAppQuit__)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">startQtApp</span>():</span><br><span class="line">        unreal_app = QtWidgets.QApplication.instance()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> unreal_app:</span><br><span class="line">            QtUiStartHelper._registerUnrealQtAppWindow()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span> (self, widget):</span><br><span class="line">        <span class="comment"># type: (QtWidgets.QWidget) -&gt; <span class="literal">None</span></span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(widget, QtWidgets.QWidget):</span><br><span class="line">            <span class="keyword">raise</span></span><br><span class="line">        self._widget = widget</span><br><span class="line">        self.version = <span class="string">&quot;0.0.1&quot;</span></span><br><span class="line">        self.windowObjName = <span class="string">&quot;UnrealLevelUsdExport&quot;</span></span><br><span class="line">        self.windowTitleName = <span class="string">u&quot;&#123;win_name&#125; &#123;ver&#125;&quot;</span>.<span class="built_in">format</span>(win_name = self.windowObjName, ver=self.version)</span><br><span class="line">        <span class="keyword">if</span> widget.windowTitle():</span><br><span class="line">            self.windowTitleName = widget.windowTitle()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_bindWidgetToUnreal</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> must show firstly, then bind to unreal, or would not parent into unreal main window...</span></span><br><span class="line">        widget = self._widget</span><br><span class="line">        widget.setObjectName(self.windowObjName)</span><br><span class="line">        widget.setWindowTitle(self.windowTitleName)</span><br><span class="line">        widget.show()</span><br><span class="line">        win_id = widget.winId()</span><br><span class="line">        unreal.parent_external_window_to_slate(win_id)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">buildUnrealWindow</span> (self):</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Id any current instances of tool and destroy</span></span><br><span class="line">        all_qt_windows = QtWidgets.QApplication.topLevelWidgets() <span class="comment"># type: <span class="built_in">list</span>[QtWidgets.QWidget]</span></span><br><span class="line">        <span class="keyword">for</span> qt_win <span class="keyword">in</span> all_qt_windows:</span><br><span class="line">            <span class="keyword">if</span> self.windowObjName <span class="keyword">in</span> qt_win.objectName():  <span class="comment"># update this name to match name below</span></span><br><span class="line">                qt_win.deleteLater()</span><br><span class="line">                qt_win.close()</span><br><span class="line">                qt_win.destroy()</span><br><span class="line"></span><br><span class="line">        self._bindWidgetToUnreal()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UnrealDemoPyUiLoader</span>(<span class="title class_ inherited__">UnrealPyUiLoaderBase</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Create tool window.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, parent=<span class="literal">None</span>, ui_file_name=<span class="string">&quot;&quot;</span></span>):</span><br><span class="line">        self.file_dir_path = unreal.Paths.project_saved_dir()</span><br><span class="line">        <span class="built_in">super</span>().__init__(parent, ui_file_name)</span><br><span class="line"></span><br><span class="line">    <span class="comment">################################</span></span><br><span class="line">    <span class="comment"># Your code goes here.</span></span><br><span class="line">    <span class="comment">################################</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_modifyUi</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># -----------------------------------------</span></span><br><span class="line">        <span class="comment"># find interactive elements of UI</span></span><br><span class="line">        self.btn_run = self.findButton(<span class="string">&quot;Btn_run&quot;</span>, clicked_callback=self.openFileDialog)</span><br><span class="line">        self.txt_edit_export_file_dir_path = self.findTextEdit(<span class="string">&quot;Text_FilePath&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">    @QtCore.Slot()</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">openFileDialog</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        open get file path window</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        chosen_dir_path = QtWidgets.QFileDialog.getExistingDirectory(</span><br><span class="line">            self,</span><br><span class="line">            options =QtWidgets.QFileDialog.ShowDirsOnly,</span><br><span class="line">            caption=<span class="string">u&quot;Choose Export Folder&quot;</span>,</span><br><span class="line">            <span class="built_in">dir</span>=unreal.Paths.project_saved_dir())</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> chosen_dir_path: <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> update UI and dir path</span></span><br><span class="line">        self.file_dir_path = chosen_dir_path</span><br><span class="line">        <span class="keyword">if</span> self.txt_edit_export_file_dir_path:</span><br><span class="line">            self.txt_edit_export_file_dir_path.setText(chosen_dir_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    QtUiStartHelper.startQtApp()</span><br><span class="line"></span><br><span class="line">    qt_ui_widget = UnrealDemoPyUiLoader(ui_file_name=<span class="string">&quot;demo_ui_file.ui&quot;</span>)</span><br><span class="line">    unreal_qt_ui_helper = QtUiStartHelper(qt_ui_widget)</span><br><span class="line"></span><br><span class="line">    unreal_qt_ui_helper.buildUnrealWindow()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;Unreal Engine这几次更新后, 强化了Python(DCC之王)的使用.&lt;/p&gt;
&lt;p&gt;在Editor使用情况下, 用PySide2 写UI远远比原生的SlateUI好用太多…&lt;/p&gt;</summary>
    
    
    
    <category term="水" scheme="http://mine-clever.art/categories/%E6%B0%B4/"/>
    
    <category term="Unreal" scheme="http://mine-clever.art/categories/%E6%B0%B4/Unreal/"/>
    
    
    <category term="破事水" scheme="http://mine-clever.art/tags/%E7%A0%B4%E4%BA%8B%E6%B0%B4/"/>
    
    <category term="Unreal" scheme="http://mine-clever.art/tags/Unreal/"/>
    
  </entry>
  
  <entry>
    <title>修复Windows令人讨厌的系统响应错误</title>
    <link href="http://mine-clever.art/2023/10/28/FixWindowsDcomCompoent/"/>
    <id>http://mine-clever.art/2023/10/28/FixWindowsDcomCompoent/</id>
    <published>2023-10-28T09:40:17.000Z</published>
    <updated>2023-10-28T12:05:06.606Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>修复 授予针对 CLSID 为 {xxxx-….}APPID 为 {xxxx-…} 导致 的Windows操作系统卡顿 </p><p>修复 无法使用VMWare虚拟机</p><p>移除没什么卵用的WindowsDefender</p><span id="more"></span>   <p>由于Windows最近的更新越来越阿三化, 导致Windows总是出现一些奇怪的毛病</p><p>可能是阿三的水平实在有限, 经常破坏DCOM的权限设置, 添加一些无用的系统组件 …</p><p>本章分享如何通过策略组以及ExecTI等工具来干掉这些令人讨厌的错误, 以提升系统响应.</p><h2 id="移除-“自动驾驶”"><a href="#移除-“自动驾驶”" class="headerlink" title="移除 “自动驾驶”"></a>移除 “自动驾驶”</h2><h3 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h3><ul><li><p>事件日中会看到 <strong>Autopilot.dll WIL error was reported</strong></p></li><li><p>此错误由Microsoft Account Sign-in Assistant 服务引发.</p><ul><li>Microsoft Account Sign-in Assistant 服务是登录网络Microsoft网络账户的必要服务.</li></ul></li><li><p>此错误会导致操作系统在一瞬间尝试轻微卡顿.</p><ul><li>重启Microsoft Account Sign-in Assistant 服务后可能在一段时间缓解</li><li>在一段时间后重复出现</li></ul></li><li><p>由于Windows较高版本强制要求用户登录其网络账户</p><ul><li>通过禁用Microsoft Account Sign-in Assistant 无法彻底解决此问题.</li></ul></li></ul><h3 id="修复手段"><a href="#修复手段" class="headerlink" title="修复手段"></a>修复手段</h3><ol><li><p>下载 ExecAsTI 程序, 确保可以以TrustedInstaller权限进行操作</p><ul><li>可以从 <a href="https://github.com/jschicht/RunAsTI">https://github.com/jschicht/RunAsTI</a> 下载</li></ul></li><li><p>以TrustedInstaller权限运行cmd.exe</p></li><li><p>运行 <strong>del &#x2F;f &#x2F;q %windir%\System32\Autopilot.dll</strong></p></li><li><p>问题解决</p></li></ol><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>移除 Autopilot.dll 不会对已经启用的操作系统以及功能造成任何问题.</p><p>此组件仅在 Windows Out of Box Experience (OOBE experience)阶段会使用</p><p>此组件在Windows版本升级后会重新被安装.</p><h2 id="无法使用VMWare虚拟机或者禁用HyperV"><a href="#无法使用VMWare虚拟机或者禁用HyperV" class="headerlink" title="无法使用VMWare虚拟机或者禁用HyperV"></a>无法使用VMWare虚拟机或者禁用HyperV</h2><h3 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h3><ul><li>无法使用VMWare虚拟机<ul><li>或者必须使用侧缓通道</li></ul></li><li>部分游戏的反作弊无法激活导致无法游戏</li><li>部分游戏模拟器无法使用</li><li>错误日志中提示Device Guard 以及Credential Guard相关错误</li><li>虚拟化导致的系统运行效率降低</li></ul><h3 id="修复手段-1"><a href="#修复手段-1" class="headerlink" title="修复手段"></a>修复手段</h3><ol><li>下载微软提供的PowerShell脚本<ul><li>可以从此处下载 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=53337">https://www.microsoft.com/en-us/download/details.aspx?id=53337</a></li><li>搜索 dgreadiness_v3.6 进行下载</li></ul></li><li>解压并找到 DG_Readiness.ps1所在位置</li><li>以管理员权限运行PowerShell</li><li>cd 到 DG_Readiness.ps1 所在文件夹路径</li><li>执行 <strong>.&#x2F;DG_Readiness.ps1 -Disable</strong> </li><li>计算机将会被重启</li><li>重启后按提示按F3</li><li>再次重启后即完全禁用Device Guard 以及Credential Guard<ul><li>由于HyperV依赖于此功能, 所以将会被完全禁用</li></ul></li></ol><h2 id="移除鸡肋-WindowsDefender"><a href="#移除鸡肋-WindowsDefender" class="headerlink" title="移除鸡肋 WindowsDefender"></a>移除鸡肋 WindowsDefender</h2><h3 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h3><ul><li><p>一堆没什么用的功能</p></li><li><p>用户安装杀软后, 更加显得没用</p></li><li><p>没用时占用系统资源</p></li><li><p>后台扫描造成莫名卡顿</p></li></ul><h3 id="修复手段-2"><a href="#修复手段-2" class="headerlink" title="修复手段"></a>修复手段</h3><ol><li>下载 Defender Remover<ul><li>从 <a href="https://github.com/ionuttbara/windows-defender-remover">https://github.com/ionuttbara/windows-defender-remover</a> 下载</li></ul></li><li>管理员权限运行 DefenderRemover.exe</li><li>按下N, 并等待程序执行</li><li>重启计算机</li></ol><h2 id="修复DCOM无法鉴权"><a href="#修复DCOM无法鉴权" class="headerlink" title="修复DCOM无法鉴权"></a>修复DCOM无法鉴权</h2><h3 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h3><ul><li><p>系统事件中出现 授予针对 CLSID 为 {xxxx-….}APPID 为 {xxxx-…}</p></li><li><p>启动某些更新前安装的程序出现间歇性卡顿</p></li><li><p>常见: </p><ul><li><p>授予针对 CLSID 为<br>  {2593F8B9-4EAF-457C-B68A-50F6B8EA6B54}<br>  、APPID 为<br>  {15C20B67-12E7-4BB6-92BB-7AFF07997402}</p><p>  的 COM 服务器应用程序的 本地 激活 权限。此安全权限可以使用组件服务管理工具进行修改。</p></li></ul></li></ul><h3 id="修复手段-3"><a href="#修复手段-3" class="headerlink" title="修复手段"></a>修复手段</h3><p>以 APPID {15C20B67-12E7-4BB6-92BB-7AFF07997402} 为例</p><ul><li><p>以管理员权限启动 gpedit.msc</p></li><li><p>按照顺序寻找 <strong>计算机配置&gt;管理模板&gt;系统&gt;分部署COM&gt;应用程序兼容性设置</strong></p></li><li><p>启用 <strong>激活安全检查例外</strong></p></li><li><p>启用 <strong>定义激活安全检查例外</strong></p></li><li><p>在 <strong>定义激活安全检查例外</strong> 点击 <strong>[显示…]</strong></p><p><img data-src="/../img/FixWindowsDcomCompoent/image-20231028182811459.png"></p></li><li><p>添加 APPID 到对话框, 并设置值为1</p><p><img data-src="/../img/FixWindowsDcomCompoent/image-20231028183001735.png"></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;修复 授予针对 CLSID 为 {xxxx-….}APPID 为 {xxxx-…} 导致 的Windows操作系统卡顿 &lt;/p&gt;
&lt;p&gt;修复 无法使用VMWare虚拟机&lt;/p&gt;
&lt;p&gt;移除没什么卵用的WindowsDefender&lt;/p&gt;</summary>
    
    
    
    <category term="水" scheme="http://mine-clever.art/categories/%E6%B0%B4/"/>
    
    
    <category term="破事水" scheme="http://mine-clever.art/tags/%E7%A0%B4%E4%BA%8B%E6%B0%B4/"/>
    
    <category term="Windows" scheme="http://mine-clever.art/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Maya中法线转顶点色且可逆</title>
    <link href="http://mine-clever.art/2023/02/26/MayaNormalToColorThenRecovery/"/>
    <id>http://mine-clever.art/2023/02/26/MayaNormalToColorThenRecovery/</id>
    <published>2023-02-26T05:17:04.000Z</published>
    <updated>2023-02-26T05:23:53.074Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>因为项目需要, 编写了一个Maya脚本, 可以 快速 将顶点(切线&#x2F;世界)法线转换为顶点色, 并可逆转换回来.</p><p>基本基于OpenMaya API 1.0编写, 速度非常快.只需要几秒就可以处理100W+三角形</p><span id="more"></span>   <h1 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h1><ul><li>人生苦短</li><li>我用Python</li><li>除非性能不够</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Script by MineClever, help to process high mesh normal on low mesh ~</span></span><br><span class="line"><span class="comment"># Bug report to : https://t.me/minemineSlaver</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> maya.api.OpenMaya <span class="keyword">as</span> api</span><br><span class="line"><span class="keyword">import</span> maya.cmds <span class="keyword">as</span> cmds</span><br><span class="line"><span class="keyword">import</span> six</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MSingleton</span>(<span class="title class_ inherited__">type</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;metaclass for set singleton class&quot;&quot;&quot;</span></span><br><span class="line">    __debug = <span class="literal">True</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, *args, **kwargs</span>):</span><br><span class="line">        self.__instance = <span class="literal">None</span></span><br><span class="line">        <span class="built_in">super</span>(MSingleton,self).__init__(*args, **kwargs)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params">self, *args, **kwargs</span>):</span><br><span class="line">        <span class="keyword">if</span> self.__instance <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">if</span> self.__debug: <span class="built_in">print</span>(<span class="string">u&quot;current class &#123;&#125; create singleton class&quot;</span>.<span class="built_in">format</span>(self.__class__))</span><br><span class="line">            self.__instance = <span class="built_in">super</span>(MSingleton,self).__call__(*args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> self.__instance</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MSelectionHelper</span>(six.with_metaclass(MSingleton,<span class="built_in">object</span>)):</span><br><span class="line">    __debug = <span class="literal">False</span></span><br><span class="line">    tempSelectionList = api.MSelectionList()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getCurMeshSelections</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Return all mesh shape current selected&quot;&quot;&quot;</span></span><br><span class="line">        selList = api.MGlobal.getActiveSelectionList() <span class="comment"># type: api.MSelectionList</span></span><br><span class="line">        shapeList = cls.tempSelectionList</span><br><span class="line">        shapeList.clear()</span><br><span class="line">        numOfSelected = selList.length() <span class="comment"># type: <span class="built_in">int</span></span></span><br><span class="line">        <span class="keyword">if</span> cls.__debug: <span class="built_in">print</span>(<span class="string">&quot;Current selection count : &#123;&#125;&quot;</span>.<span class="built_in">format</span>(numOfSelected))</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> check if empty list</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> (numOfSelected &gt;<span class="number">0</span>) :</span><br><span class="line">            <span class="keyword">return</span> shapeList</span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> add all shape into selection list</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(numOfSelected):</span><br><span class="line">            dagPath = selList.getDagPath(i) <span class="comment"># type: api.MDagPath</span></span><br><span class="line">            <span class="keyword">if</span> (dagPath.numberOfShapesDirectlyBelow() &gt; <span class="number">0</span>): dagPath.extendToShape()</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> check if mesh type</span></span><br><span class="line">            <span class="keyword">if</span> cls.__debug: <span class="built_in">print</span>(<span class="string">&quot;selection[&#123;&#125;]:\&quot;&#123;&#125;\&quot; @ type: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(i, dagPath, dagPath.apiType()))</span><br><span class="line">            <span class="keyword">if</span> (dagPath.apiType() == <span class="number">296</span>) : </span><br><span class="line">                shapeList.add(dagPath)</span><br><span class="line">        <span class="keyword">if</span> cls.__debug:  <span class="built_in">print</span>(<span class="string">u&quot;shape list count: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(shapeList.length()))</span><br><span class="line">        <span class="keyword">return</span> shapeList</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MMProcessorBar</span>(six.with_metaclass(MSingleton,<span class="built_in">object</span>)):</span><br><span class="line">    __debug = <span class="literal">False</span></span><br><span class="line">    </span><br><span class="line">    __processorCount = <span class="number">0</span></span><br><span class="line">    __processorTotalCount = <span class="number">0</span></span><br><span class="line">    __bShowProcessBar = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    vtxUpdateThresholdNum = <span class="number">40960</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setProcessorCountBarTotalNum</span>(<span class="params">cls,inTotalCount</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">int</span>) -&gt; <span class="literal">None</span></span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cls.__bShowProcessBar:</span><br><span class="line">            <span class="keyword">if</span> cls.__debug: <span class="built_in">print</span>(<span class="string">&quot;Is not able to set a processor bar now&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">        cls.__processorTotalCount = inTotalCount</span><br><span class="line">        cmds.progressWindow( </span><br><span class="line">        title=<span class="string">&#x27;Process Vertex Data&#x27;</span>,</span><br><span class="line">        progress=<span class="number">0</span>,</span><br><span class="line">        status=(<span class="string">&quot;Done &#123;0&#125;/&#123;1&#125;\t&quot;</span>.<span class="built_in">format</span>(<span class="number">0</span>, inTotalCount)),</span><br><span class="line">        isInterruptable=<span class="literal">True</span>,</span><br><span class="line">        <span class="built_in">min</span>=<span class="number">0</span>,</span><br><span class="line">        <span class="built_in">max</span>=inTotalCount)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">updateProcessorCountBar</span>(<span class="params">cls,inCurCount</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">int</span>) -&gt; <span class="literal">None</span></span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cls.__bShowProcessBar:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">        cls.__processorCount = inCurCount</span><br><span class="line">        <span class="keyword">if</span> cls.__bShowProcessBar :</span><br><span class="line">            <span class="keyword">if</span> (cmds.progressWindow( query=<span class="literal">True</span>, progress=<span class="literal">True</span> ) &gt;= cls.__processorTotalCount) <span class="keyword">or</span> \</span><br><span class="line">            (cmds.progressWindow( query=<span class="literal">True</span>, isCancelled=<span class="literal">True</span> ) ) :</span><br><span class="line">                cls.endProcessorCountBar()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                cmds.progressWindow( edit=<span class="literal">True</span>, progress=inCurCount, status=(<span class="string">&quot;Done &#123;0&#125;/&#123;1&#125;\t&quot;</span>.<span class="built_in">format</span>(cls.__processorCount, cls.__processorTotalCount)) )</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">endProcessorCountBar</span>(<span class="params">cls</span>):</span><br><span class="line">        cls.__processorCount = <span class="number">0</span></span><br><span class="line">        cls.__bShowProcessBar = <span class="literal">False</span></span><br><span class="line">        cmds.progressWindow(endProgress=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">checkIfUseProcessorCountBar</span>(<span class="params">cls,inTotalCount</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">int</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        cls.endProcessorCountBar()</span><br><span class="line">        cls.__bShowProcessBar = <span class="literal">True</span> <span class="keyword">if</span> inTotalCount &gt; cls.vtxUpdateThresholdNum <span class="keyword">else</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> cls.__bShowProcessBar:</span><br><span class="line">            cls.setProcessorCountBarTotalNum(inTotalCount)</span><br><span class="line">        <span class="keyword">return</span> cls.__bShowProcessBar</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getCurProcessorCountBarStatus</span> (cls):</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        <span class="keyword">return</span> cls.__bShowProcessBar</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getCurProcessorCountBarNum</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">int</span></span></span><br><span class="line">        <span class="keyword">return</span> cls.__processorCount</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MMeshFaceVtxProcessorInterface</span>(six.with_metaclass(MSingleton,<span class="built_in">object</span>)):</span><br><span class="line">    __debug = <span class="literal">False</span></span><br><span class="line">    halfVec = api.MVector(<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">iterMeshFaceVtx</span> (cls, inDagPath, inColorSetName = <span class="string">&quot;FaceVtxNorCol&quot;</span>):</span><br><span class="line">        <span class="comment"># type: (api.MDagPath, <span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MMeshFaceVtxProcessorBase</span>(<span class="title class_ inherited__">MMeshFaceVtxProcessorInterface</span>):</span><br><span class="line">    </span><br><span class="line">    processorBarCls = MMProcessorBar</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">iterMeshFaceVtx</span> (cls, inDagPath, inColorSetName = <span class="string">&quot;FaceVtxNorCol&quot;</span>):</span><br><span class="line">        <span class="comment"># type: (api.MDagPath, <span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        fnMesh = api.MFnMesh(inDagPath)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Init processor bar</span></span><br><span class="line">        cls.processorBarCls.checkIfUseProcessorCountBar(fnMesh.numFaceVertices)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> force set current color set</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cls._processCurColorSet(fnMesh, inColorSetName): <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Traverse all faceVertex in current mesh</span></span><br><span class="line">        meshFaceVertexIt = api.MItMeshFaceVertex(inDagPath)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> cls._iterMeshFaceVtxDataProcess(fnMesh, meshFaceVertexIt)</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_processCurColorSet</span>(<span class="params">cls, fnMesh, inColorSetName</span>):</span><br><span class="line">        <span class="comment"># type: (api.MFnMesh, <span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        <span class="string">&quot;&quot;&quot; check current color set &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_iterMeshFaceVtxDataProcess</span> (cls, fnMesh, meshFaceVertexIt):</span><br><span class="line">        <span class="comment">#type: (api.MFnMesh, api.MItMeshFaceVertex,) -&gt; bool</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Traverse all faceVertex in current mesh&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MMeshFaceVtxProcessorCol2Nor</span>(<span class="title class_ inherited__">MMeshFaceVtxProcessorBase</span>):</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_processCurColorSet</span>(<span class="params">cls, fnMesh, inColorSetName</span>):</span><br><span class="line">        <span class="comment"># type: (api.MFnMesh, <span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        <span class="string">&quot;&quot;&quot; check current color set &quot;&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> check if valid color set to set color</span></span><br><span class="line">        colorSets = fnMesh.getColorSetNames() <span class="comment"># type: <span class="built_in">list</span>[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> inColorSetName <span class="keyword">in</span> colorSets:</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Create new color set</span></span><br><span class="line">            api.MGlobal.displayWarning(<span class="string">u&quot;\&quot;&#123;&#125;\&quot; dont have colorSet \&quot;&#123;&#125;\&quot; to recovery normal&quot;</span>.<span class="built_in">format</span>(fnMesh.dagPath(), inColorSetName))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_iterMeshFaceVtxDataProcess</span> (cls, fnMesh, meshFaceVertexIt):</span><br><span class="line">        <span class="comment">#type: (api.MFnMesh, api.MItMeshFaceVertex,) -&gt; bool</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Traverse all faceVertex in current mesh&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Get Current Color Set name</span></span><br><span class="line">        curColorSetName = fnMesh.currentColorSetName()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Save to temp list</span></span><br><span class="line">        normals = api.MVectorArray()</span><br><span class="line">        faceIds = api.MIntArray()</span><br><span class="line">        vertexIds=api.MIntArray()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Processor bar update data</span></span><br><span class="line">        curIndex = <span class="number">0</span></span><br><span class="line">        nextUpdateNum = cls.processorBarCls.vtxUpdateThresholdNum</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> meshFaceVertexIt.isDone():</span><br><span class="line">            faceVtxCol = meshFaceVertexIt.getColor(curColorSetName) <span class="comment"># type: api.MColor</span></span><br><span class="line">            faceVtxCor2Vec = api.MVector(faceVtxCol[<span class="number">0</span>],faceVtxCol[<span class="number">1</span>],faceVtxCol[<span class="number">2</span>])</span><br><span class="line">            normals.append((faceVtxCor2Vec - cls.halfVec) * <span class="number">2</span>)</span><br><span class="line">            vertexIds.append(meshFaceVertexIt.vertexId())</span><br><span class="line">            faceIds.append(meshFaceVertexIt.faceId())            </span><br><span class="line">            meshFaceVertexIt.<span class="built_in">next</span>()</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> update processor bar</span></span><br><span class="line">            curIndex+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> curIndex &gt;= nextUpdateNum:</span><br><span class="line">                nextUpdateNum += cls.processorBarCls.vtxUpdateThresholdNum</span><br><span class="line">                cls.processorBarCls.updateProcessorCountBar(curIndex)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            fnMesh.setFaceVertexNormals(normals, faceIds, vertexIds)</span><br><span class="line">            normals = faceIds = vertexIds = <span class="literal">None</span></span><br><span class="line">            cls.processorBarCls.endProcessorCountBar() <span class="comment"># <span class="doctag">NOTE:</span> end processor bar</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MMeshFaceVtxProcessorWsNor2Col</span>(<span class="title class_ inherited__">MMeshFaceVtxProcessorBase</span>):</span><br><span class="line">        </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_processCurColorSet</span>(<span class="params">cls,fnMesh, inColorSetName</span>):</span><br><span class="line">        <span class="comment"># type: (api.MFnMesh, <span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        <span class="string">&quot;&quot;&quot; force set current color set &quot;&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> check if valid color set to set color</span></span><br><span class="line">        colorSets = fnMesh.getColorSetNames() <span class="comment"># type: <span class="built_in">list</span>[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> inColorSetName <span class="keyword">in</span> colorSets:</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Create new color set</span></span><br><span class="line">            fnMesh.createColorSet(inColorSetName, <span class="literal">True</span>)</span><br><span class="line">        fnMesh.setCurrentColorSetName(inColorSetName)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_iterMeshFaceVtxDataProcess</span> (cls, fnMesh, meshFaceVertexIt):</span><br><span class="line">        <span class="comment">#type: (api.MFnMesh, api.MItMeshFaceVertex,) -&gt; bool</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Traverse all faceVertex in current mesh&quot;&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># -- <span class="doctag">NOTE:</span> Save to temp list</span></span><br><span class="line">        colors = api.MColorArray()</span><br><span class="line">        faceIds = api.MIntArray()</span><br><span class="line">        vertexIds=api.MIntArray()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Processor bar update data</span></span><br><span class="line">        curIndex = <span class="number">0</span></span><br><span class="line">        nextUpdateNum = cls.processorBarCls.vtxUpdateThresholdNum</span><br><span class="line">        modifier = api.MDGModifier()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> meshFaceVertexIt.isDone():</span><br><span class="line">            norVec = meshFaceVertexIt.getNormal() <span class="comment"># type: api.MVector</span></span><br><span class="line">            colors.append(norVec * <span class="number">0.5</span> + cls.halfVec)</span><br><span class="line">            vertexIds.append(meshFaceVertexIt.vertexId())</span><br><span class="line">            faceIds.append(meshFaceVertexIt.faceId())</span><br><span class="line">            meshFaceVertexIt.<span class="built_in">next</span>()</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> update processor bar</span></span><br><span class="line">            curIndex+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> curIndex &gt;= nextUpdateNum:</span><br><span class="line">                nextUpdateNum += cls.processorBarCls.vtxUpdateThresholdNum</span><br><span class="line">                cls.processorBarCls.updateProcessorCountBar(curIndex)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            fnMesh.setFaceVertexColors(colors, faceIds, vertexIds, modifier=modifier)</span><br><span class="line">            modifier.doIt()</span><br><span class="line">            colors = faceIds = vertexIds = <span class="literal">None</span></span><br><span class="line">            cls.processorBarCls.endProcessorCountBar() <span class="comment"># <span class="doctag">NOTE:</span> end processor bar</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MMeshFaceVtxProcessorTanNor2Col</span>(<span class="title class_ inherited__">MMeshFaceVtxProcessorInterface</span>):</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">iterMeshFaceVtx</span> (cls, inDagPath, inColorSetName = <span class="string">&quot;FaceVtxNorCol&quot;</span>):</span><br><span class="line">        <span class="comment"># type: (api.MDagPath, <span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        modifier = api.MDGModifier()</span><br><span class="line">        fnMesh = api.MFnMesh(inDagPath)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> check if valid color set to set color</span></span><br><span class="line">        colorSets = fnMesh.getColorSetNames() <span class="comment"># type: <span class="built_in">list</span>[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> inColorSetName <span class="keyword">in</span> colorSets:</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Create new color set</span></span><br><span class="line">            fnMesh.createColorSet(inColorSetName, <span class="literal">True</span>)</span><br><span class="line">        fnMesh.setCurrentColorSetName(inColorSetName)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Get current uvSet name</span></span><br><span class="line">        curUvSet = fnMesh.currentUVSetName() <span class="comment"># type: <span class="built_in">str</span></span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Traverse all faceVertex in current mesh</span></span><br><span class="line">        meshFaceVertexIt = api.MItMeshFaceVertex(inDagPath)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- <span class="doctag">NOTE:</span> Save to temp list</span></span><br><span class="line">        colors = api.MColorArray()</span><br><span class="line">        faceIds = api.MIntArray()</span><br><span class="line">        vertexIds=api.MIntArray()</span><br><span class="line">        zeroArray = (<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> meshFaceVertexIt.isDone():</span><br><span class="line">            norVec = meshFaceVertexIt.getNormal() <span class="comment"># type: api.MVector</span></span><br><span class="line">            binorVec = meshFaceVertexIt.getBinormal(uvSet=curUvSet)  <span class="comment"># type: api.MVector</span></span><br><span class="line">            tanVec = meshFaceVertexIt.getTangent(uvSet=curUvSet)  <span class="comment"># type: api.MVector</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> build TBN Matrix</span></span><br><span class="line">            tbnMatrix = api.MMatrix([vec[i] <span class="keyword">if</span> i &lt; <span class="number">3</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">for</span> vec <span class="keyword">in</span> (tanVec, binorVec, norVec, zeroArray) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)])</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> pre-multiply TBN matrix. same as post-multiply transposed TBN matrix</span></span><br><span class="line">            tanNorVec =  tbnMatrix * norVec  <span class="comment"># type: api.MVector</span></span><br><span class="line">            colors.append(tanNorVec * <span class="number">0.5</span> + cls.halfVec)</span><br><span class="line">            vertexIds.append(meshFaceVertexIt.vertexId())</span><br><span class="line">            faceIds.append(meshFaceVertexIt.faceId())</span><br><span class="line">            meshFaceVertexIt.<span class="built_in">next</span>()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            fnMesh.setFaceVertexColors(colors, faceIds, vertexIds, modifier=modifier)</span><br><span class="line">            modifier.doIt()</span><br><span class="line">            colors = faceIds = vertexIds = <span class="literal">None</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MMeshFaceVtxProcessorTanOffsetNor2Col</span>(<span class="title class_ inherited__">MMeshFaceVtxProcessorInterface</span>):</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">iterMeshFaceVtx</span> (cls, inDagPath, inColorSetName = <span class="string">&quot;FaceVtxNorCol&quot;</span>):</span><br><span class="line">        <span class="comment"># type: (api.MDagPath, <span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        modifier = api.MDGModifier()</span><br><span class="line">        fnMesh = api.MFnMesh(inDagPath)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> check if valid color set to set color</span></span><br><span class="line">        colorSets = fnMesh.getColorSetNames() <span class="comment"># type: <span class="built_in">list</span>[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> inColorSetName <span class="keyword">in</span> colorSets:</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Create new color set</span></span><br><span class="line">            fnMesh.createColorSet(inColorSetName, <span class="literal">True</span>)</span><br><span class="line">        fnMesh.setCurrentColorSetName(inColorSetName)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Get current uvSet name</span></span><br><span class="line">        curUvSet = fnMesh.currentUVSetName() <span class="comment"># type: <span class="built_in">str</span></span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Traverse all faceVertex in current mesh</span></span><br><span class="line">        meshFaceVertexIt = api.MItMeshFaceVertex(inDagPath)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- <span class="doctag">NOTE:</span> Save to temp list</span></span><br><span class="line">        colors = api.MColorArray()</span><br><span class="line">        faceIds = api.MIntArray()</span><br><span class="line">        vertexIds=api.MIntArray()</span><br><span class="line">        zeroArray = (<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">        refColorSetName= inColorSetName</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> meshFaceVertexIt.isDone():</span><br><span class="line">            faceVtxCol = meshFaceVertexIt.getColor(refColorSetName) <span class="comment"># type: api.MColor</span></span><br><span class="line">            faceVtxCor2Vec = api.MVector(faceVtxCol[<span class="number">0</span>],faceVtxCol[<span class="number">1</span>],faceVtxCol[<span class="number">2</span>])</span><br><span class="line">            decodedNorVec = (faceVtxCor2Vec - cls.halfVec) * <span class="number">2</span> <span class="comment"># type: api.MVector</span></span><br><span class="line">            </span><br><span class="line">            norVec = meshFaceVertexIt.getNormal() <span class="comment"># type: api.MVector</span></span><br><span class="line">            binorVec = meshFaceVertexIt.getBinormal(uvSet=curUvSet)  <span class="comment"># type: api.MVector</span></span><br><span class="line">            tanVec = meshFaceVertexIt.getTangent(uvSet=curUvSet)  <span class="comment"># type: api.MVector</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> build TBN Matrix</span></span><br><span class="line">            tbnMatrix = api.MMatrix([vec[i] <span class="keyword">if</span> i &lt; <span class="number">3</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">for</span> vec <span class="keyword">in</span> (tanVec, binorVec, norVec, zeroArray) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)])</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> pre-multiply TBN matrix. same as post-multiply transposed TBN matrix</span></span><br><span class="line">            tanNorVec =  tbnMatrix * decodedNorVec  <span class="comment"># type: api.MVector</span></span><br><span class="line">            colors.append(tanNorVec * <span class="number">0.5</span> + cls.halfVec)</span><br><span class="line">            vertexIds.append(meshFaceVertexIt.vertexId())</span><br><span class="line">            faceIds.append(meshFaceVertexIt.faceId())</span><br><span class="line">            meshFaceVertexIt.<span class="built_in">next</span>()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            fnMesh.setFaceVertexColors(colors, faceIds, vertexIds, modifier=modifier)</span><br><span class="line">            modifier.doIt()</span><br><span class="line">            colors = faceIds = vertexIds = <span class="literal">None</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MVtxNorColConverter</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">    __debug = <span class="literal">True</span></span><br><span class="line">    __convertClass = MMeshFaceVtxProcessorInterface</span><br><span class="line">    __validConvertClass = <span class="literal">False</span></span><br><span class="line">    __colorSetName = <span class="string">&quot;FaceVtxNorCol&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setConvertClass</span> (cls, inConvertClass):</span><br><span class="line">        <span class="comment"># type: (MMeshFaceVtxProcessorInterface) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> MMeshFaceVtxProcessorInterface.__subclasscheck__(inConvertClass):</span><br><span class="line">            cls.__convertClass = inConvertClass</span><br><span class="line">            cls.__validConvertClass = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&quot;Not valid convert class&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setColorSetName</span> (cls, colSetName):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(colSetName,<span class="built_in">str</span>):</span><br><span class="line">            cls.__colorSetName = colSetName</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getColorSetName</span> (cls):</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">str</span></span></span><br><span class="line">        <span class="keyword">return</span> cls.__colorSetName</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getCurConvertClassName</span> (cls):</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">str</span></span></span><br><span class="line">        <span class="keyword">return</span> cls.__convertClass.__name__</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_convertSelMesh</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        curMeshList = MSelectionHelper.getCurMeshSelections()</span><br><span class="line">        <span class="keyword">if</span> curMeshList.isEmpty(): </span><br><span class="line">            api.MGlobal.displayWarning(<span class="string">u&quot;No mesh has been selected?&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        </span><br><span class="line">        curMeshListIt = api.MItSelectionList(curMeshList)</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> (curMeshListIt.isDone()):</span><br><span class="line">            curMeshDagPath= curMeshListIt.getDagPath() <span class="comment"># type: api.MDagPath</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> cls.iterMeshFaceVtx(curMeshDagPath): <span class="built_in">print</span>(<span class="string">u&quot;process mesh \&quot;&#123;&#125;\&quot; fail&quot;</span>.<span class="built_in">format</span>(curMeshDagPath))</span><br><span class="line">            <span class="keyword">if</span> cmds.progressWindow( query=<span class="literal">True</span>, isCancelled=<span class="literal">True</span> ):</span><br><span class="line">                api.MGlobal.displayWarning(<span class="string">&quot;Processor end by user!&quot;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            curMeshListIt.<span class="built_in">next</span>()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">convertSelMesh</span> (cls):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            cls._convertSelMesh()</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> E:</span><br><span class="line">            api.MGlobal.displayError(<span class="built_in">str</span>(E))</span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Force end process window</span></span><br><span class="line">            cmds.progressWindow(endProgress=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">iterMeshFaceVtx</span> (cls, inDagPath):</span><br><span class="line">        <span class="comment"># type: (api.MDagPath) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cls.__validConvertClass :</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&quot;Not set a valid convert class&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> cls.__convertClass.iterMeshFaceVtx(inDagPath, cls.__colorSetName)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">runScript_nor2col</span>(<span class="params">*args, **kw</span>):</span><br><span class="line">    MVtxNorColConverter.setConvertClass(MMeshFaceVtxProcessorWsNor2Col)</span><br><span class="line">    MVtxNorColConverter.convertSelMesh()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">runScript_tanNor2tanCol</span>(<span class="params">*args, **kw</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Generate Tangent space Normal, test only!&quot;&quot;&quot;</span></span><br><span class="line">    MVtxNorColConverter.setConvertClass(MMeshFaceVtxProcessorTanOffsetNor2Col)</span><br><span class="line">    MVtxNorColConverter.convertSelMesh()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">runScript_col2nor</span>(<span class="params">*args, **kw</span>):</span><br><span class="line">    MVtxNorColConverter.setConvertClass(MMeshFaceVtxProcessorCol2Nor)</span><br><span class="line">    MVtxNorColConverter.convertSelMesh()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    runScript_nor2col()</span><br></pre></td></tr></table></figure><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><ul><li>理论上还是够快的</li><li>如果用C++ 重写, 应该可以考虑上多线程, 分割处理所有顶点面, 应当可以处理上亿三角形</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;因为项目需要, 编写了一个Maya脚本, 可以 快速 将顶点(切线&amp;#x2F;世界)法线转换为顶点色, 并可逆转换回来.&lt;/p&gt;
&lt;p&gt;基本基于OpenMaya API 1.0编写, 速度非常快.只需要几秒就可以处理100W+三角形&lt;/p&gt;</summary>
    
    
    
    <category term="水" scheme="http://mine-clever.art/categories/%E6%B0%B4/"/>
    
    
    <category term="破事水" scheme="http://mine-clever.art/tags/%E7%A0%B4%E4%BA%8B%E6%B0%B4/"/>
    
  </entry>
  
  <entry>
    <title>Unreal 模型材质绑定传递工具</title>
    <link href="http://mine-clever.art/2023/02/21/UnrealMatSlotCopyTool/"/>
    <id>http://mine-clever.art/2023/02/21/UnrealMatSlotCopyTool/</id>
    <published>2023-02-21T01:51:48.000Z</published>
    <updated>2023-02-23T12:00:55.568Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>模型美术的小伙伴 , 某日跑过来表示, 每次临时, 替换或者更新, 一个新的模型资产时</p><p>都需要手动把之前指过的材质再指一次, 非常麻烦, 特别是有50+材质的超级复杂模型, 简直想要自杀.</p><p>于是有了这个小脚本~</p><span id="more"></span>   <h1 id="Python-实现代码"><a href="#Python-实现代码" class="headerlink" title="Python 实现代码"></a>Python 实现代码</h1><ul><li>人生苦短!</li><li>CV大法好 !!</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># This Script was designed to copy material which have same slotName with different meshes asset object in Unreal Engine</span></span><br><span class="line"><span class="comment"># script by MineClever @ 2023</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> unreal <span class="keyword">as</span> unreal</span><br><span class="line"><span class="keyword">import</span> os <span class="keyword">as</span> os</span><br><span class="line"><span class="keyword">import</span> copy <span class="keyword">as</span> copy</span><br><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UnrealAssetSrcCtrl</span>():</span><br><span class="line">    <span class="string">u&quot;&quot;&quot;用于简单处理版本控制, 大规模检入检出时不应当使用此类型&quot;&quot;&quot;</span></span><br><span class="line">    _provider = unreal.SourceControl.current_provider()</span><br><span class="line">    _projectContentPath = unreal.Paths.project_content_dir()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, assetPath</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>) -&gt; <span class="literal">None</span></span></span><br><span class="line">        self.currentFile = self.ConvertPackagePathToFilePath(assetPath)</span><br><span class="line">        self.currentProvider = self._provider</span><br><span class="line">        self.currentFileState = unreal.SourceControl.query_file_state(self.currentFile)</span><br><span class="line">        <span class="comment"># self.currentFileState = unreal.SourceControlState(self.currentFile)</span></span><br><span class="line">        self.hasFileCheckOut = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ConvertPackagePathToFilePath</span> (inPackagePath) :</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>) -&gt; <span class="built_in">str</span></span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Convert &#x27;/Game/StarterContent/SomeName.SomeName&#x27; to &#x27;Drive:/Project/Content/StarterContent/SomeName.uasset&#x27;&quot;&quot;&quot;</span></span><br><span class="line">        standardPath =  unreal.Paths.make_standard_filename(inPackagePath)</span><br><span class="line">        uAssetPath = os.path.join( *unreal.Paths.split(standardPath)[<span class="number">0</span>:<span class="number">2</span>] ) + <span class="string">&quot;.uasset&quot;</span></span><br><span class="line">        fileSysPath = os.path.join(__class__._projectContentPath,uAssetPath.replace(<span class="string">&quot;/Game/&quot;</span>,<span class="string">&quot;&quot;</span>)).replace(<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;/&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> fileSysPath</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">UpdateFile</span>(<span class="params">self</span>):</span><br><span class="line">        currentFileState = self.currentFileState</span><br><span class="line">        <span class="keyword">if</span> (currentFileState.is_valid <span class="keyword">and</span> currentFileState.is_source_controlled):</span><br><span class="line">            bRevert = unreal.SourceControl.revert_file(self.currentFile,<span class="literal">True</span>)</span><br><span class="line">            bSync = unreal.SourceControl.sync_file(self.currentFile, <span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> (bRevert <span class="keyword">or</span> bSync)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">CheckOutFile</span>(<span class="params">self</span>):</span><br><span class="line">        currentFileState = self.currentFileState</span><br><span class="line">        self.hasFileCheckOut = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> (currentFileState.is_valid <span class="keyword">and</span> currentFileState.is_source_controlled):</span><br><span class="line">            <span class="keyword">if</span> (currentFileState.is_checked_out_other):</span><br><span class="line">                unreal.log_warning(<span class="string">u&quot;当前文件&#123;&#125;已经被其他人检出(锁定)&quot;</span>.<span class="built_in">format</span>(self.currentFile))</span><br><span class="line">            <span class="keyword">elif</span> (<span class="keyword">not</span> currentFileState.is_current):</span><br><span class="line">                unreal.log_warning(<span class="string">u&quot;当前文件&#123;&#125;版本与服务器版本不匹配,尝试更新...&quot;</span>.<span class="built_in">format</span>(self.currentFile))</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> self.UpdateFile():</span><br><span class="line">                    unreal.log_error(<span class="string">u&quot;当前文件&#123;&#125;无法同步, 请手动操作&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                unreal.SourceControl.check_out_file(self.currentFile, <span class="literal">True</span>)</span><br><span class="line">                self.hasFileCheckOut = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            unreal.log_warning(<span class="string">u&quot;当前文件&#123;&#125;未找到版本控制状态&quot;</span>.<span class="built_in">format</span>(self.currentFile))</span><br><span class="line">            self.hasFileCheckOut = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BaseAssetHelper</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    _assetEditorSubsystem = unreal.AssetEditorSubsystem()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetSelectedAssets</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">list</span>[unreal.Object]</span></span><br><span class="line">        <span class="keyword">return</span> unreal.EditorUtilityLibrary.get_selected_assets()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">CloseEditorForAssetPath</span>(<span class="params">cls, assetName</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>) -&gt; <span class="literal">None</span></span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            assetObject = unreal.find_asset(assetName)</span><br><span class="line">            cls._assetEditorSubsystem.close_all_editors_for_asset(assetObject)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> E:</span><br><span class="line">            unreal.log_error(<span class="string">&quot;Can not close asset: &#123;&#125;;\nErr: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(assetName, E))</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">CloseEditorForAssetObject</span>(<span class="params">cls, assetObject</span>):</span><br><span class="line">        <span class="comment"># type: (unreal.Object) -&gt; <span class="literal">None</span></span></span><br><span class="line">        cls._assetEditorSubsystem.close_all_editors_for_asset(assetObject)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MeshAssetSelectionHelper</span>(<span class="title class_ inherited__">BaseAssetHelper</span>):</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetMeshSelections</span>(<span class="params">cls</span>):</span><br><span class="line">        allSelectedAssets = cls.GetSelectedAssets()</span><br><span class="line">        validAsset = <span class="built_in">list</span>()  <span class="comment"># type: <span class="built_in">list</span>[unreal.StreamableRenderAsset]</span></span><br><span class="line">        <span class="keyword">for</span> curAsset <span class="keyword">in</span> allSelectedAssets:</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isinstance</span>(curAsset, (unreal.StaticMesh, unreal.SkeletalMesh))):</span><br><span class="line">                validAsset.append(curAsset)</span><br><span class="line">        <span class="keyword">return</span> validAsset</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MeshMaterialHelper</span> ():</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetMeshMaterials</span>(<span class="params">cls, pMesh</span>):</span><br><span class="line">        <span class="comment"># type: (unreal.StreamableRenderAsset) -&gt; unreal.Array[unreal.SkeletalMaterial] |unreal.Array[unreal.StaticMaterial] | <span class="literal">None</span></span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(pMesh, unreal.StaticMesh):</span><br><span class="line">            targetMaterials = pMesh.static_materials</span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">isinstance</span>(pMesh, unreal.SkeletalMesh):</span><br><span class="line">            targetMaterials = pMesh.materials</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> targetMaterials</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MeshAssetMaterialCopyTool</span> (<span class="title class_ inherited__">MeshMaterialHelper</span>):</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">CopyMaterialSlotA</span>(<span class="params">cls, pSource, pTarget</span>):</span><br><span class="line">        <span class="comment"># type: (unreal.StreamableRenderAsset, unreal.StreamableRenderAsset) -&gt; <span class="built_in">bool</span></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> get source material interfaces</span></span><br><span class="line">        sourceMaterials = cls.GetMeshMaterials(pSource)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> sourceMaterials:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> get target materials</span></span><br><span class="line">        targetMaterials = cls.GetMeshMaterials(pSource)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> targetMaterials:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        targetMatLength = targetMaterials.__len__()</span><br><span class="line"></span><br><span class="line">        raiseMeshTypeException: collections.<span class="type">Callable</span>[[unreal.StreamableRenderAsset],Exception] = \</span><br><span class="line">            <span class="keyword">lambda</span> inMesh: Exception(<span class="string">&quot;unsupported mesh type: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(inMesh.get_class().get_name()))</span><br><span class="line"></span><br><span class="line">        buildSrcMatMapping : collections.<span class="type">Callable</span>[[],<span class="built_in">dict</span>[unreal.Name, <span class="built_in">int</span>]] = \</span><br><span class="line">            <span class="keyword">lambda</span> : <span class="built_in">dict</span>((v,k) <span class="keyword">for</span> k, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(mat.material_slot_name <span class="keyword">for</span> mat <span class="keyword">in</span> sourceMaterials))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(pTarget, unreal.StaticMesh):</span><br><span class="line"></span><br><span class="line">            <span class="comment"># NOTE : source is static mesh</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(pSource, unreal.StaticMesh):</span><br><span class="line">                <span class="keyword">for</span> tarMatId <span class="keyword">in</span> <span class="built_in">range</span>(targetMatLength):</span><br><span class="line">                    curTarMatSlotName = targetMaterials[tarMatId].material_slot_name</span><br><span class="line">                    srcMatId = pSource.get_material_index(curTarMatSlotName)</span><br><span class="line">                    srcMatInterface = pSource.get_material(srcMatId)</span><br><span class="line">                    pTarget.set_material(tarMatId, srcMatInterface)</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> source is skeletal mesh</span></span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">isinstance</span>(pSource, unreal.SkeletalMesh):</span><br><span class="line">                <span class="comment"># <span class="doctag">NOTE:</span> build a enum dict for current source material map</span></span><br><span class="line">                srcMatMapping = buildSrcMatMapping()</span><br><span class="line">                <span class="keyword">for</span> tarMatId <span class="keyword">in</span> <span class="built_in">range</span>(targetMatLength):</span><br><span class="line">                    curTarMatSlotName = targetMaterials[tarMatId].material_slot_name</span><br><span class="line">                    srcMatId = srcMatMapping.get(curTarMatSlotName, <span class="number">0</span>)</span><br><span class="line">                    <span class="keyword">if</span> srcMatId:</span><br><span class="line">                        srcMatInterface = sourceMaterials[srcMatId].material_interface</span><br><span class="line">                        pTarget.set_material(tarMatId, srcMatInterface)</span><br><span class="line">            <span class="keyword">else</span> :</span><br><span class="line">                <span class="keyword">raise</span> raiseMeshTypeException(pSource)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">isinstance</span>(pTarget, unreal.SkeletalMesh):</span><br><span class="line">            unreal.log_warning(<span class="string">&quot;Cast material into skeletal mesh object, this method may cast fail ... &quot;</span>)</span><br><span class="line"></span><br><span class="line">            srcMatMapping = buildSrcMatMapping()</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> use copy module to easy copy our material array</span></span><br><span class="line">            newTarMatArray = copy.copy(targetMaterials)</span><br><span class="line">            <span class="keyword">for</span> tarMatId <span class="keyword">in</span> <span class="built_in">range</span>(targetMatLength):</span><br><span class="line">                curTarMatSlotName = targetMaterials[tarMatId].material_slot_name</span><br><span class="line">                srcMatId = srcMatMapping.get(curTarMatSlotName, <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">if</span> srcMatId:</span><br><span class="line">                    srcMatInterface = sourceMaterials[srcMatId].material_interface</span><br><span class="line">                    newTarMatArray[tarMatId].material_interface = srcMatInterface</span><br><span class="line">            pTarget.materials = newTarMatArray</span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            <span class="keyword">raise</span> raiseMeshTypeException(pTarget)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">runScript</span> (*args, **kw):</span><br><span class="line">    unreal.log(<span class="string">&quot;Start to process material transforming ...&quot;</span>)</span><br><span class="line">    allMeshSelections = MeshAssetSelectionHelper.GetMeshSelections()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> allMeshSelections:</span><br><span class="line">        unreal.log_error(<span class="string">&quot;&#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;Have to select two or more mesh asset to start ...&quot;</span>))</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    srcMesh = allMeshSelections[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,allMeshSelections.__len__()):</span><br><span class="line">        currentAsset = allMeshSelections[i]</span><br><span class="line">        unreal.log_warning(<span class="string">&quot;Current Target is : &#123;&#125;&quot;</span>.<span class="built_in">format</span>(currentAsset.get_full_name()))</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            MeshAssetSelectionHelper.CloseEditorForAssetObject(currentAsset)</span><br><span class="line">            UnrealAssetSrcCtrl(currentAsset.get_path_name()).CheckOutFile()</span><br><span class="line">            MeshAssetMaterialCopyTool.CopyMaterialSlotA(srcMesh, currentAsset)</span><br><span class="line">            unreal.EditorAssetLibrary.save_loaded_asset(currentAsset)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> E:</span><br><span class="line">            unreal.log_error(<span class="string">&quot;&#123;&#125;&quot;</span>.<span class="built_in">format</span>(E))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    runScript()</span><br></pre></td></tr></table></figure><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><ul><li>20230223 修复了版本控制在Unreal5中失败的问题</li></ul><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>由于Unreal Engine 的神奇设计…</p><p>导致即使都是网格类型, 但是, 接口也非常不统一</p><p>所有在处理Skeletal Mesh类型的材质时用了一些奇怪的方法.</p><p>原则上都可以用自己的方法来统一处理. </p><p>但是总感觉那里不大对, 因此按类型去判断了</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;模型美术的小伙伴 , 某日跑过来表示, 每次临时, 替换或者更新, 一个新的模型资产时&lt;/p&gt;
&lt;p&gt;都需要手动把之前指过的材质再指一次, 非常麻烦, 特别是有50+材质的超级复杂模型, 简直想要自杀.&lt;/p&gt;
&lt;p&gt;于是有了这个小脚本~&lt;/p&gt;</summary>
    
    
    
    <category term="UE" scheme="http://mine-clever.art/categories/UE/"/>
    
    <category term="Unreal" scheme="http://mine-clever.art/categories/UE/Unreal/"/>
    
    
    <category term="引擎" scheme="http://mine-clever.art/tags/%E5%BC%95%E6%93%8E/"/>
    
  </entry>
  
  <entry>
    <title>Python相机等效焦距转换</title>
    <link href="http://mine-clever.art/2022/10/22/PythonCameraFocalDistanceConvert/"/>
    <id>http://mine-clever.art/2022/10/22/PythonCameraFocalDistanceConvert/</id>
    <published>2022-10-22T06:39:19.000Z</published>
    <updated>2022-10-22T06:53:40.064Z</updated>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>用于转换 相机胶片 大小变化时的 等效焦距.</p><span id="more"></span>   <hr><h1 id="Python实现代码"><a href="#Python实现代码" class="headerlink" title="Python实现代码"></a>Python实现代码</h1><p>CV大法好,  拷走就能用(</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Created by MineClever to convert camera film size</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> atan, sqrt</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MathCamFovConvert</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">    AngleToRad = <span class="number">0.017453292519943295</span></span><br><span class="line">    RadToAngle = <span class="number">57.29577951308232</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calcFovFormHeightWidth</span>(<span class="params">cls, w, h, focusDist, bRadian=<span class="literal">False</span></span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">bool</span>) -&gt; <span class="built_in">tuple</span>[<span class="built_in">float</span>,<span class="built_in">float</span>, <span class="built_in">float</span>]</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        input :w = FilmWidth(mm), h = FilmHeight(mm), focusDist(mm) = Focus Distance, bRadian -&gt; if return radian value.</span></span><br><span class="line"><span class="string">        return : tuple(HFov, VFov, DFov)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        dx = focusDist</span><br><span class="line">        cx= w /<span class="number">2</span></span><br><span class="line">        cy = h /<span class="number">2</span></span><br><span class="line">        dy = sqrt(cx*cx + cy*cy)</span><br><span class="line"></span><br><span class="line">        DFovHalf = atan(dy/dx)</span><br><span class="line">        DFov = DFovHalf * <span class="number">2</span></span><br><span class="line">        HFov = atan(cx/dx) * <span class="number">2</span></span><br><span class="line">        VFov = atan(cy/dx) * <span class="number">2</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> bRadian:</span><br><span class="line">            HFov *= cls.RadToAngle</span><br><span class="line">            VFov *= cls.RadToAngle</span><br><span class="line">            DFov *= cls.RadToAngle</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (HFov, VFov, DFov)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calcFocusDistSameLook</span> (cls, oriW, oriH, tarW, tarH, oriFocusDist, bLockHFov=<span class="literal">True</span>, bRadian= <span class="literal">False</span>):</span><br><span class="line">        <span class="comment"># type:(<span class="built_in">float</span> ,<span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">bool</span>, <span class="built_in">bool</span>)-&gt;<span class="built_in">tuple</span>[<span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">float</span>]</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        calcFocusDistSameLook calculate a new HFov, VFov, Focus Distance</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Arguments:</span></span><br><span class="line"><span class="string">            oriW -- origin width of film back size ;</span></span><br><span class="line"><span class="string">            oriH -- origin height of film back size ;</span></span><br><span class="line"><span class="string">            tarW -- target new width of film back size ;</span></span><br><span class="line"><span class="string">            tarH -- target new height of film back size;</span></span><br><span class="line"><span class="string">            oriFocusDist -- origin focal distance to film back ;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Keyword Arguments:</span></span><br><span class="line"><span class="string">            bLockHFov -- use origin HFov as reference (default: &#123;True&#125;)</span></span><br><span class="line"><span class="string">            bRadian -- return value as radian one (default: &#123;False&#125;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            return new HFov, new VHFov , new focal distance to film back as a tuple</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        oriDx = oriFocusDist</span><br><span class="line">        oriCx = oriW / <span class="number">2</span></span><br><span class="line">        oriCy = oriH / <span class="number">2</span></span><br><span class="line">        <span class="comment"># oriDy = sqrt(oriCx * oriCx + oriCy * oriCy)</span></span><br><span class="line"></span><br><span class="line">        oriHFovHalf = atan(oriCx / oriDx) <span class="comment"># 1/2 HFov</span></span><br><span class="line">        oriVFovHalf = atan(oriCy / oriDx) <span class="comment"># 1/2 VFov</span></span><br><span class="line"></span><br><span class="line">        newCx = tarW / <span class="number">2</span></span><br><span class="line">        newCy = tarH / <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> We should keep one fov sticked at least</span></span><br><span class="line">        <span class="keyword">if</span> bLockHFov : <span class="comment"># <span class="doctag">NOTE:</span> change cy only</span></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span>  newCx / tan(HFov/2[angle]) -&gt; new focus distance</span></span><br><span class="line">            newDx = newCx / (oriCx / oriDx)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Generate new VFov</span></span><br><span class="line">            newVFovHalf = atan(newCy / newDx) <span class="comment"># type: <span class="built_in">float</span></span></span><br><span class="line">            newVFov = newVFovHalf * <span class="number">2</span></span><br><span class="line">            newHFov = oriHFovHalf * <span class="number">2</span></span><br><span class="line">        <span class="keyword">else</span>: <span class="comment"># <span class="doctag">NOTE:</span> change cx only</span></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span>  newCy / tan(VFov/2[angle]) -&gt; new focus distance</span></span><br><span class="line">            newDx = newCy / (oriCy / oriDx)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Generate new HFov</span></span><br><span class="line">            newHFovHalf = atan(newCx / newDx)  <span class="comment"># type: <span class="built_in">float</span></span></span><br><span class="line">            newHFov = newHFovHalf * <span class="number">2</span></span><br><span class="line">            newVFov = oriVFovHalf * <span class="number">2</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># NOTE : convert to angle</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> bRadian:</span><br><span class="line">            newHFov *= cls.RadToAngle</span><br><span class="line">            newVFov *= cls.RadToAngle</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (newHFov, newVFov, newDx)</span><br></pre></td></tr></table></figure><h1 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h1><p><img data-src="/../img/PythonCameraFocalDistanceConvert/img_01.png" alt="Img_01"></p><p><img data-src="/../img/PythonCameraFocalDistanceConvert/img_02.png" alt="IMG_02"></p><p><img data-src="/../img/PythonCameraFocalDistanceConvert/img_03.png" alt="Convert"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;用于转换 相机胶片 大小变化时的 等效焦距.&lt;/p&gt;</summary>
    
    
    
    <category term="水" scheme="http://mine-clever.art/categories/%E6%B0%B4/"/>
    
    
    <category term="Python" scheme="http://mine-clever.art/tags/Python/"/>
    
  </entry>
  
</feed>
