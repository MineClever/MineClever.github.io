<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>博德之门3自动荣耀</title>
      <link href="/2023/12/12/Bg3AutoHonour/"/>
      <url>/2023/12/12/Bg3AutoHonour/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>荣耀属于需要他的人(逃</p><ul><li>F5 监听存档文件夹下的荣耀存档</li><li>Shift+ESC 退出脚本</li></ul><span id="more"></span>   <h2 id="Python脚本"><a href="#Python脚本" class="headerlink" title="Python脚本"></a>Python脚本</h2><ul><li><p>旧版使用15秒自动复制文件, 被群友嫌弃</p></li><li><p>新版使用看门狗监听文件夹, 并自动根据Hash变化备份文件</p></li><li><p>游戏存档文件位于</p><ul><li><strong>%localappdata%&#x2F;Larian Studios&#x2F;Baldur’s Gate 3&#x2F;PlayerProfiles&#x2F;Public&#x2F;Savegames&#x2F;Story</strong></li></ul></li><li><p>默认备份文件于</p><ul><li><strong>%localappdata%&#x2F;Larian Studios&#x2F;Baldur’s Gate 3&#x2F;PlayerProfiles&#x2F;Public&#x2F;Savegames&#x2F;Story&#x2F;BackupFiles&#x2F;[备份时间]</strong></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line">__doc__= <span class="string">u&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">使荣耀更加荣耀</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys, os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> pynput <span class="keyword">import</span> keyboard</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> watchdog.events</span><br><span class="line"><span class="keyword">from</span> watchdog.observers <span class="keyword">import</span> Observer</span><br><span class="line"><span class="keyword">from</span> watchdog.events <span class="keyword">import</span> FileSystemEventHandler</span><br><span class="line"><span class="keyword">from</span> watchdog.observers.api <span class="keyword">import</span> BaseObserver</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HashHelper</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calFileSha256</span>(<span class="params">cls, filePath</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>) -&gt; <span class="built_in">str</span></span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filePath, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            file_hash = hashlib.sha256()</span><br><span class="line">            <span class="keyword">while</span> chunk := file.read(<span class="number">1024</span> * <span class="number">1024</span>):</span><br><span class="line">                file_hash.update(chunk)</span><br><span class="line">        <span class="keyword">return</span> file_hash.hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BG3AutoHonour</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">    playerProfileSavedPath = os.path.join (</span><br><span class="line">        os.environ[<span class="string">&quot;localappdata&quot;</span>],</span><br><span class="line">        <span class="string">&quot;Larian Studios/Baldur&#x27;s Gate 3/PlayerProfiles/Public/Savegames/Story&quot;</span></span><br><span class="line">        ).replace(<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;/&quot;</span>)</span><br><span class="line">    playerBackupPath = os.path.join(playerProfileSavedPath, <span class="string">&quot;BackupFiles&quot;</span>).replace(<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;/&quot;</span>)</span><br><span class="line">    waitSecond = <span class="number">15</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">autoBackup</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Waiting for &#123;&#125;s&quot;</span>.<span class="built_in">format</span>(cls.waitSecond))</span><br><span class="line">        time.sleep(cls.waitSecond) <span class="comment"># 强制等待, 确保存档已经创建</span></span><br><span class="line">        </span><br><span class="line">        honourSavedFolderList = [] <span class="comment"># type: <span class="built_in">list</span>[<span class="built_in">str</span>]</span></span><br><span class="line">        currentTime = time.strftime(<span class="string">&quot;%Y-%m-%d_%H-%M&quot;</span>, time.localtime()) </span><br><span class="line">        <span class="keyword">for</span> curPath <span class="keyword">in</span> os.listdir(cls.playerProfileSavedPath):</span><br><span class="line">            <span class="keyword">if</span> ( <span class="keyword">not</span> os.path.isdir(curPath)):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> curPath.endswith(<span class="string">&quot;__HonourMode&quot;</span>):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            honourSavedFolderList.append(curPath)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(cls.playerBackupPath):</span><br><span class="line">            os.mkdir(cls.playerBackupPath)</span><br><span class="line">            </span><br><span class="line">        newBackupTargetFolder = os.path.join(cls.playerBackupPath,currentTime).replace(<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;/&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(newBackupTargetFolder):</span><br><span class="line">            os.mkdir(newBackupTargetFolder)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> folderPath <span class="keyword">in</span> honourSavedFolderList:</span><br><span class="line">            targetFolder = os.path.join(newBackupTargetFolder, os.path.basename(folderPath)).replace(<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;/&quot;</span>)</span><br><span class="line">            shutil.copytree(folderPath, targetFolder,</span><br><span class="line">                            dirs_exist_ok=<span class="literal">True</span>, ignore_dangling_symlinks=<span class="literal">True</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Backup to &#123;&#125;&quot;</span>.<span class="built_in">format</span>(targetFolder))</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">listen</span>(<span class="params">cls</span>):</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">shiftEsc</span>():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Shift + Esc Pressed, Exit&quot;</span>)</span><br><span class="line">            exit()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">KeyRecorder</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">            <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">                self.keyPressed = <span class="built_in">set</span>() <span class="comment"># type: <span class="built_in">set</span>[keyboard.Key]</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">def</span> <span class="title function_">onPress</span>(<span class="params">self, key</span>):</span><br><span class="line">                <span class="comment"># type: (keyboard.Key) -&gt; <span class="literal">None</span></span></span><br><span class="line">                self.keyPressed.add(key)</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">def</span> <span class="title function_">onRelease</span>(<span class="params">self, key</span>) :</span><br><span class="line">                <span class="comment"># type: (keyboard.Key) -&gt; <span class="literal">None</span></span></span><br><span class="line">                keyCount=self.keyPressed.__len__() </span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> (keyCount == <span class="number">1</span>) <span class="keyword">and</span> (keyboard.Key.f5 == key):</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;F5 Pressed&quot;</span>)</span><br><span class="line">                    cls.autoBackup()</span><br><span class="line">                    </span><br><span class="line">                <span class="keyword">if</span> (keyCount == <span class="number">2</span>) <span class="keyword">and</span> (keyboard.Key.esc <span class="keyword">in</span> self.keyPressed) <span class="keyword">and</span> (keyboard.Key.shift <span class="keyword">in</span> self.keyPressed):</span><br><span class="line">                    shiftEsc()</span><br><span class="line">                    </span><br><span class="line">                self.keyPressed.clear()</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span> (<span class="string">u&quot;Current save path: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(cls.playerProfileSavedPath))</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">u&quot;Use hotkey F5 for honour!&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        keyRecorder = KeyRecorder()</span><br><span class="line">        <span class="keyword">with</span> keyboard.Listener(on_press=keyRecorder.onPress, on_release=keyRecorder.onRelease) <span class="keyword">as</span> listener:</span><br><span class="line">            listener.join()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BG3AutoHonourWatchdog</span>(<span class="title class_ inherited__">BG3AutoHonour</span>):</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">generateSaveFilePathHashDict</span>(<span class="params">cls</span>):</span><br><span class="line">        honourSavedFolderList = [] <span class="comment"># type: <span class="built_in">list</span>[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Use in save dir</span></span><br><span class="line">        <span class="keyword">for</span> curPath <span class="keyword">in</span> os.listdir(cls.playerProfileSavedPath):</span><br><span class="line">            <span class="keyword">if</span> ( <span class="keyword">not</span> os.path.isdir(curPath)):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> curPath.endswith(<span class="string">&quot;__HonourMode&quot;</span>):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            honourSavedFolderList.append(curPath)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create hash dict</span></span><br><span class="line">        fileDict = <span class="built_in">dict</span>() <span class="comment">#type: dict[str,str]</span></span><br><span class="line">        <span class="keyword">for</span> saveFolderPath <span class="keyword">in</span> honourSavedFolderList:</span><br><span class="line">            folderName = os.path.join(cls.playerProfileSavedPath, saveFolderPath).replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">            savedFile = os.path.join(folderName, <span class="string">&quot;HonourMode.lsv&quot;</span>).replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">            hashValue = HashHelper.calFileSha256(savedFile)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;File [&#123;&#125;], Hash [&#123;&#125;]&quot;</span>.<span class="built_in">format</span>(savedFile, hashValue))</span><br><span class="line">            fileDict[folderName] = hashValue</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fileDict</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">autoBackup</span>(<span class="params">cls, savedFilePath</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>)-&gt;<span class="literal">None</span></span></span><br><span class="line">        currentTime = time.strftime(<span class="string">&quot;%Y-%m-%d_%H-%M&quot;</span>, time.localtime())</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Generate Time: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(currentTime))</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(cls.playerBackupPath):</span><br><span class="line">            os.mkdir(cls.playerBackupPath)</span><br><span class="line">            </span><br><span class="line">        newBackupTargetFolder = os.path.join(cls.playerBackupPath, currentTime).replace(<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;/&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(newBackupTargetFolder):</span><br><span class="line">            os.mkdir(newBackupTargetFolder)</span><br><span class="line"></span><br><span class="line">        sourceFolderPath = savedFilePath</span><br><span class="line">        targetFolder = os.path.join(newBackupTargetFolder, os.path.basename(sourceFolderPath)).replace(<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;/&quot;</span>)</span><br><span class="line">        shutil.copytree(sourceFolderPath, targetFolder, dirs_exist_ok=<span class="literal">True</span>, ignore_dangling_symlinks=<span class="literal">True</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Backup to [&#123;&#125;]\r\n&quot;</span>.<span class="built_in">format</span>(targetFolder))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;-&quot;</span> * <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">listen</span>(<span class="params">cls</span>):</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">shiftEsc</span>():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;[Shift + Esc] Pressed, Exit&quot;</span>)</span><br><span class="line">            exit()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">UserSavedFileWatchDog</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">            <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">                self._eventHandle = <span class="literal">None</span></span><br><span class="line">                self._observer = <span class="literal">None</span></span><br><span class="line">                </span><br><span class="line">            <span class="keyword">def</span> <span class="title function_">makeFolderWatching</span>(<span class="params">self</span>):</span><br><span class="line">                watchingPath = cls.playerProfileSavedPath</span><br><span class="line">                userSaveHashDict = cls.generateSaveFilePathHashDict()</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">class</span> <span class="title class_">SaveChangedHandler</span>(<span class="title class_ inherited__">FileSystemEventHandler</span>):</span><br><span class="line">                    </span><br><span class="line">                    <span class="keyword">def</span> <span class="title function_">__init__</span> (self, observer, *args, **kw):</span><br><span class="line">                        <span class="comment"># type: (BaseObserver, ..., ...)-&gt;<span class="literal">None</span></span></span><br><span class="line">                        self._observer = observer</span><br><span class="line">                        <span class="built_in">super</span>().__init__(*args, **kw)</span><br><span class="line">                        </span><br><span class="line">                    <span class="keyword">def</span> <span class="title function_">on_modified</span>(<span class="params">self, event</span>):</span><br><span class="line">                        <span class="comment"># type: (watchdog.events.FileModifiedEvent) -&gt; <span class="literal">None</span></span></span><br><span class="line">                        sourcePath = event.src_path <span class="comment"># type: <span class="built_in">str</span></span></span><br><span class="line">                        changedFilePath = os.path.abspath(sourcePath).replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&quot;File path [&#123;&#125;] was modified&quot;</span>.<span class="built_in">format</span>(changedFilePath))</span><br><span class="line"> </span><br><span class="line">                        <span class="keyword">if</span> changedFilePath <span class="keyword">in</span> userSaveHashDict:</span><br><span class="line">                            <span class="built_in">print</span>(<span class="string">&quot;Found in hash dict, Checking hash value&quot;</span>)</span><br><span class="line">                            savedFile = os.path.join(changedFilePath, <span class="string">&quot;HonourMode.lsv&quot;</span>).replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">                            <span class="keyword">try</span>:</span><br><span class="line">                                changedFileHash = HashHelper.calFileSha256(savedFile)</span><br><span class="line">                            <span class="keyword">except</span> FileNotFoundError :</span><br><span class="line">                                time.sleep(<span class="number">5</span>)</span><br><span class="line">                                changedFileHash = HashHelper.calFileSha256(savedFile)</span><br><span class="line">                            <span class="keyword">finally</span>:</span><br><span class="line">                                <span class="built_in">print</span>(<span class="string">&quot;New File Hash: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(changedFileHash))</span><br><span class="line">                            </span><br><span class="line">                            <span class="keyword">if</span> userSaveHashDict[changedFilePath] != changedFileHash:</span><br><span class="line">                                <span class="built_in">print</span>(<span class="string">&quot;File Hash was changed! Backup !&quot;</span>)</span><br><span class="line">                                BG3AutoHonourWatchdog.autoBackup(changedFilePath)</span><br><span class="line">                                <span class="keyword">if</span> self._observer:</span><br><span class="line">                                    self._observer.stop()</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> self._observer == <span class="literal">None</span>:</span><br><span class="line">                    self._observer = Observer()</span><br><span class="line">                observer = self._observer</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> self._eventHandle == <span class="literal">None</span>:</span><br><span class="line">                    self._eventHandle = SaveChangedHandler(observer)</span><br><span class="line"></span><br><span class="line">                observer.schedule(self._eventHandle, watchingPath, recursive=<span class="literal">False</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;Start watching : [&#123;&#125;]&quot;</span>.<span class="built_in">format</span>(watchingPath))</span><br><span class="line">                observer.start()</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">try</span>: </span><br><span class="line">                    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                        time.sleep(<span class="number">1</span>)</span><br><span class="line">                        <span class="keyword">if</span> <span class="keyword">not</span> observer.is_alive():</span><br><span class="line">                            <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;User Interrupt!&quot;</span>)</span><br><span class="line">                    observer.stop()</span><br><span class="line">                </span><br><span class="line">                observer.join()</span><br><span class="line">                <span class="comment"># <span class="doctag">NOTE:</span> Reset to None</span></span><br><span class="line">                self._observer = self._eventHandle = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">KeyRecorder</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">            <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">                self.keyPressed = <span class="built_in">set</span>() <span class="comment"># type: <span class="built_in">set</span>[keyboard.Key]</span></span><br><span class="line">                self.watchDog = <span class="literal">None</span></span><br><span class="line">                self.isWatching = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">def</span> <span class="title function_">onPress</span>(<span class="params">self, key</span>):</span><br><span class="line">                <span class="comment"># type: (keyboard.Key) -&gt; <span class="literal">None</span></span></span><br><span class="line">                self.keyPressed.add(key)</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">def</span> <span class="title function_">onRelease</span>(<span class="params">self, key</span>) :</span><br><span class="line">                <span class="comment"># type: (keyboard.Key) -&gt; <span class="literal">None</span></span></span><br><span class="line">                keyCount=self.keyPressed.__len__() </span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (keyCount == <span class="number">1</span>) <span class="keyword">and</span> (keyboard.Key.f5 == key):</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;F5 Pressed&quot;</span>)</span><br><span class="line">                    <span class="keyword">if</span> self.watchDog == <span class="literal">None</span>:</span><br><span class="line">                        self.watchDog = UserSavedFileWatchDog()</span><br><span class="line">                    </span><br><span class="line">                    self.watchDog.makeFolderWatching()</span><br><span class="line">                    </span><br><span class="line">                <span class="keyword">if</span> (keyCount == <span class="number">2</span>) <span class="keyword">and</span> (keyboard.Key.esc <span class="keyword">in</span> self.keyPressed) <span class="keyword">and</span> (keyboard.Key.shift <span class="keyword">in</span> self.keyPressed):</span><br><span class="line">                    shiftEsc()</span><br><span class="line">                    </span><br><span class="line">                self.keyPressed.clear()</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span> (<span class="string">u&quot;Current save path: [&#123;&#125;]&quot;</span>.<span class="built_in">format</span>(cls.playerProfileSavedPath))</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">u&quot;Use hotkey [F5] for honour!\nUse hotkey [Shift+ESC] exit this script ...&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        keyRecorder = KeyRecorder()</span><br><span class="line">        <span class="keyword">with</span> keyboard.Listener(on_press=keyRecorder.onPress, on_release=keyRecorder.onRelease) <span class="keyword">as</span> listener:</span><br><span class="line">            listener.join()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ListenThread</span>(<span class="title class_ inherited__">Thread</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        BG3AutoHonourWatchdog.listen()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">runScript</span>(<span class="params">*args, **kw</span>):</span><br><span class="line">    listenThread = ListenThread()</span><br><span class="line">    listenThread.start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    runScript()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 水 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 破事水 </tag>
            
            <tag> 博德之门3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Houdini Python 快速开始</title>
      <link href="/2023/11/25/HoudiniPythonFastReference/"/>
      <url>/2023/11/25/HoudiniPythonFastReference/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>Houdini的Python耦合性比较高, 有些方法没有那么自觉.</p><p>放几个简单案例用来快速开始使用~</p><span id="more"></span>   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> hou</span><br><span class="line"><span class="comment">#############################################</span></span><br><span class="line"><span class="comment"># 获取与设置节点属性</span></span><br><span class="line"><span class="comment">#############################################</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_and_set_node_parameters</span>(<span class="params">node_name=<span class="string">&quot;&quot;</span></span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n------------\n&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Start Create!\n&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    current_root_node = hou.node(<span class="string">&quot;/obj&quot;</span>)<span class="comment"># type: hou.Node</span></span><br><span class="line">    geo_node = current_root_node.createNode(<span class="string">&quot;geo&quot;</span>) <span class="comment">#type: hou.ObjNode</span></span><br><span class="line">    <span class="keyword">if</span> node_name:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> hou.node(<span class="string">&quot;&#123;&#125;/&#123;&#125;&quot;</span>.<span class="built_in">format</span>(current_root_node.path(), node_name)):</span><br><span class="line">            geo_node.setName(node_name)</span><br><span class="line">    geo_node.setSelected(<span class="literal">True</span>, clear_all_selected=<span class="literal">True</span>) <span class="comment">#替换选择</span></span><br><span class="line">    <span class="comment"># <span class="doctag">NOTE:</span> 在此节点下创建其它节点, 不需要选中, 以上选中仅用于测试.</span></span><br><span class="line">    <span class="comment"># <span class="doctag">NOTE:</span> run_init_scripts的作用主要是在Geometry中内置一个File SOP</span></span><br><span class="line">    <span class="comment">#       如果设置为了False就不会做这个事情了</span></span><br><span class="line">    <span class="comment">#       除此以外还有一些渲染相关的参数也不会被加到Geometry中</span></span><br><span class="line">    box_node = geo_node.createNode(<span class="string">&quot;box&quot;</span>, run_init_scripts=<span class="literal">False</span>) <span class="comment"># type: hou.SopNode</span></span><br><span class="line">    box_node.moveToGoodPosition()</span><br><span class="line">    <span class="comment"># 细分节点</span></span><br><span class="line">    subd_node = geo_node.createNode(<span class="string">&quot;subdivide&quot;</span>, run_init_scripts=<span class="literal">False</span>)<span class="comment"># type: hou.SopNode</span></span><br><span class="line">    <span class="comment"># <span class="doctag">NOTE:</span> 设置生成节点的参数</span></span><br><span class="line">    iteration_parm = subd_node.parm(<span class="string">&quot;iterations&quot;</span>) <span class="comment"># type: hou.Parm</span></span><br><span class="line">    <span class="keyword">if</span> iteration_parm:</span><br><span class="line">        iteration_parm.<span class="built_in">set</span>(<span class="number">3</span>)</span><br><span class="line">    subd_node.setInput(<span class="number">0</span>, box_node)</span><br><span class="line">    subd_node.moveToGoodPosition() <span class="comment"># 自动设置在Houdini 中的 layout</span></span><br><span class="line">    subd_node.setDisplayFlag(<span class="literal">True</span>)</span><br><span class="line">    subd_node.setRenderFlag(<span class="literal">True</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n------------\n&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Sub node count under &#123;&#125;:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(geo_node.path(), geo_node.numItems()))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 参数获取</span></span><br><span class="line">    box_tx_ch = hou.ch(<span class="string">&quot;&#123;&#125;/tx&quot;</span>.<span class="built_in">format</span>(box_node.path()))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;box_tx type: &#123;&#125; val: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">type</span>(box_tx_ch),box_tx_ch))</span><br><span class="line">    box_scale = box_node.parm(<span class="string">&quot;scale&quot;</span>) <span class="comment">#type: hou.Parm</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;box_scale type: &#123;&#125; val: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">type</span>(box_scale), box_scale.<span class="built_in">eval</span>()))</span><br><span class="line">    <span class="comment"># 复数参数</span></span><br><span class="line">    box_divs = box_node.parmTuple(<span class="string">&quot;divs&quot;</span>) <span class="comment"># type: hou.ParmTuple</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;box_divs type: &#123;&#125; val: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">type</span>(box_divs), box_divs.<span class="built_in">eval</span>()))</span><br><span class="line">    box_parms_list =box_node.parms() <span class="comment"># type: <span class="built_in">tuple</span>[hou.Parm]</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n------------\n&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(box_parms_list)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n------------\n&quot;</span>)</span><br><span class="line">    box_parm_tuples = box_node.parmTuples() <span class="comment">#type: tuple[hou.ParmTuple]</span></span><br><span class="line">    <span class="built_in">print</span>(box_parm_tuples)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n------------\n&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># <span class="doctag">NOTE:</span></span></span><br><span class="line">    <span class="comment"># ParmTuple -&gt; size : tuple[Parm]</span></span><br><span class="line">    <span class="comment"># Parm -&gt; sizex, sizey, sizez : Parm</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 参数设置</span></span><br><span class="line">    box_node.parm(<span class="string">&quot;tx&quot;</span>).<span class="built_in">set</span>(box_tx_ch + <span class="number">0.5</span>)</span><br><span class="line">    box_node.parmTuple(<span class="string">&quot;size&quot;</span>).<span class="built_in">set</span>([<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">0.5</span>])</span><br><span class="line">    box_scale.<span class="built_in">set</span>(<span class="number">2</span>)</span><br><span class="line">    box_divs.<span class="built_in">set</span>([<span class="number">0</span>,<span class="number">10</span>,<span class="number">0</span>])</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment"># eval 用于返回表达式值</span></span><br><span class="line">    <span class="comment"># houdini的设置属性，一般都是set</span></span><br><span class="line">    <span class="comment"># 但是如果想获取到属性值，就必须得用eval，他没有对应的get函数，这个和平常不太一样</span></span><br><span class="line">    val_box_div_a = box_divs.<span class="built_in">eval</span>()</span><br><span class="line">    val_box_div_b = box_node.evalParmTuple(<span class="string">&quot;divs&quot;</span>)</span><br><span class="line">    val_geo_tx_a = geo_node.evalParm(<span class="string">&quot;tx&quot;</span>)</span><br><span class="line">    val_geo_tx_b = geo_node.parm(<span class="string">&quot;tx&quot;</span>).<span class="built_in">eval</span>()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;divs:&#123;&#125;, divs:&#123;&#125;, tx:&#123;&#125;, tx:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(val_box_div_a, val_box_div_b, val_geo_tx_a, val_geo_tx_b))</span><br><span class="line"></span><br><span class="line">    geo_node.moveToGoodPosition()</span><br><span class="line"></span><br><span class="line">get_and_set_node_parameters(<span class="string">&quot;TestNode&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#############################################</span></span><br><span class="line"><span class="comment"># 从节点反向生成代码</span></span><br><span class="line"><span class="comment">#############################################</span></span><br><span class="line"><span class="comment"># ref: https://elmagnifico.tech/2023/04/21/Houdini-GeometrySpreadsheet/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_code_from_object</span> ():</span><br><span class="line">    </span><br><span class="line">    current_root_node = hou.node(<span class="string">&quot;/obj&quot;</span>)<span class="comment"># type: hou.Node</span></span><br><span class="line">    geo_node = current_root_node.createNode(<span class="string">&quot;geo&quot;</span>) <span class="comment">#type: hou.ObjNode</span></span><br><span class="line">    box_node = geo_node.createNode(<span class="string">&quot;box&quot;</span>, run_init_scripts=<span class="literal">False</span>) <span class="comment"># type: hou.SopNode</span></span><br><span class="line">    geo_node.setSelected(<span class="literal">True</span>, clear_all_selected=<span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># print(hou.node(&quot;/obj/box1&quot;).asCode())</span></span><br><span class="line">    <span class="built_in">print</span>(box_node.asCode())</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Houdini </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Houdini </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unreal中使用Pyside2</title>
      <link href="/2023/11/03/CreateQtWinInUnreal/"/>
      <url>/2023/11/03/CreateQtWinInUnreal/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>Unreal Engine这几次更新后, 强化了Python(DCC之王)的使用.</p><p>在Editor使用情况下, 用PySide2 写UI远远比原生的SlateUI好用太多…</p><span id="more"></span>   <p>但是Unreal创建Qt窗口时, 会导致窗口无法前台, 一闪而过, 使用以下方法,可以快速附加Qt窗口到Unreal.</p><hr><h1 id="Easy-To-Copy"><a href="#Easy-To-Copy" class="headerlink" title="Easy To Copy!"></a>Easy To Copy!</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># Script created by MineClever</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re <span class="keyword">as</span> re</span><br><span class="line"><span class="keyword">import</span> unreal <span class="keyword">as</span> unreal</span><br><span class="line"><span class="keyword">import</span> os <span class="keyword">as</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment">################################</span></span><br><span class="line"><span class="comment"># Build Ui for tool.</span></span><br><span class="line"><span class="comment">################################</span></span><br><span class="line"><span class="comment"># UI Part</span></span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> partial</span><br><span class="line"><span class="keyword">import</span> PySide2 <span class="keyword">as</span> PySide2</span><br><span class="line"><span class="keyword">from</span> PySide2 <span class="keyword">import</span> QtWidgets, QtUiTools, QtWidgets, QtCore</span><br><span class="line"><span class="comment">####################################</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UnrealPyUiLoaderBase</span> (QtWidgets.QWidget):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Create a default tool window. Base Class</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># store ref to window to prevent garbage collection</span></span><br><span class="line">    window = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, parent=<span class="literal">None</span>, ui_file_name=<span class="string">&quot;&quot;</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Import UI and connect components</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="built_in">super</span>().__init__(parent)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># load the created UI widget</span></span><br><span class="line">        current_file_dir = current_file_dir = os.path.dirname(__file__)</span><br><span class="line">        ui_file_path = os.path.join(current_file_dir, ui_file_name).replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> path to .ui file</span></span><br><span class="line">        ui_file_object = QtCore.QFile(ui_file_path)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> ui_file_object.<span class="built_in">open</span>(QtCore.QIODevice.ReadOnly):</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&quot;Can not load ui file &#123;&#125;&quot;</span>.<span class="built_in">format</span>(ui_file_path))</span><br><span class="line"></span><br><span class="line">        qt_ui_loader = QtUiTools.QUiLoader()</span><br><span class="line">        loaded_ui_window = qt_ui_loader.load(ui_file_object)  <span class="comment"># type: QtWidgets.QWidget</span></span><br><span class="line">        self.widget = loaded_ui_window</span><br><span class="line">        <span class="comment"># attach the widget to the instance of this class (aka self)</span></span><br><span class="line">        self.widget.setParent(self)</span><br><span class="line">        self._modifyUi()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">findButton</span>(<span class="params">self, name, clicked_callback=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>, ...) -&gt; QtWidgets.QPushButton | <span class="literal">None</span></span></span><br><span class="line">        <span class="keyword">if</span> self.widget == <span class="literal">None</span> : <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        btn = self.widget.findChild(QtWidgets.QPushButton, name) <span class="comment"># type: QtWidgets.QPushButton</span></span><br><span class="line">        <span class="keyword">if</span> clicked_callback <span class="keyword">and</span> btn:</span><br><span class="line">            btn.clicked.connect(clicked_callback)</span><br><span class="line">        <span class="keyword">return</span> btn</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">findTextEdit</span>(<span class="params">self, name</span>):</span><br><span class="line">        <span class="keyword">if</span> self.widget == <span class="literal">None</span>: <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        txt_edit = self.widget.findChild(QtWidgets.QTextEdit, name) <span class="comment"># type: QtWidgets.QTextEdit</span></span><br><span class="line">        <span class="keyword">return</span> txt_edit</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_modifyUi</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Modify current widget load from ui file&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">resizeEvent</span>(<span class="params">self, event</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Called on automatically generated resize event</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.widget.resize(self.width(), self.height())</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">closewindow</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Close the window.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.destroy()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">QtUiStartHelper</span>():</span><br><span class="line">    <span class="string">u&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Always calling &quot;start_qt_app()&quot; firstly. Then init this class with a widget.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ---</span></span><br><span class="line"><span class="string">    Example:</span></span><br><span class="line"><span class="string">    ---</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    QtUiStartHelper.start_qt_app()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    qt_ui_widget = UnrealMeshTexExportUiLoader(ui_file_name = &quot;unreal_tool_ui_path.ui&quot;)</span></span><br><span class="line"><span class="string">    unreal_qt_ui_helper = QtUiStartHelper(qt_ui_widget)</span></span><br><span class="line"><span class="string">    unreal_qt_ui_helper.windowTitleName = u&quot;Unreal Tool Name &quot; + unreal_qt_ui_helper.version</span></span><br><span class="line"><span class="string">__file__</span></span><br><span class="line"><span class="string">    unreal_qt_ui_helper.build_unreal_window()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_registerUnrealQtAppWindow</span>():</span><br><span class="line">        unreal_app = QtWidgets.QApplication([])</span><br><span class="line">        tick_handle = unreal.register_slate_post_tick_callback(</span><br><span class="line">            <span class="keyword">lambda</span> delta: QtWidgets.QApplication.sendPostedEvents())</span><br><span class="line">        __QtAppQuit__ = partial(unreal.unregister_slate_post_tick_callback, tick_handle)</span><br><span class="line">        unreal_app.aboutToQuit.connect(__QtAppQuit__)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">startQtApp</span>():</span><br><span class="line">        unreal_app = QtWidgets.QApplication.instance()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> unreal_app:</span><br><span class="line">            QtUiStartHelper._registerUnrealQtAppWindow()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span> (self, widget):</span><br><span class="line">        <span class="comment"># type: (QtWidgets.QWidget) -&gt; <span class="literal">None</span></span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(widget, QtWidgets.QWidget):</span><br><span class="line">            <span class="keyword">raise</span></span><br><span class="line">        self._widget = widget</span><br><span class="line">        self.version = <span class="string">&quot;0.0.1&quot;</span></span><br><span class="line">        self.windowObjName = <span class="string">&quot;UnrealLevelUsdExport&quot;</span></span><br><span class="line">        self.windowTitleName = <span class="string">u&quot;&#123;win_name&#125; &#123;ver&#125;&quot;</span>.<span class="built_in">format</span>(win_name = self.windowObjName, ver=self.version)</span><br><span class="line">        <span class="keyword">if</span> widget.windowTitle():</span><br><span class="line">            self.windowTitleName = widget.windowTitle()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_bindWidgetToUnreal</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> must show firstly, then bind to unreal, or would not parent into unreal main window...</span></span><br><span class="line">        widget = self._widget</span><br><span class="line">        widget.setObjectName(self.windowObjName)</span><br><span class="line">        widget.setWindowTitle(self.windowTitleName)</span><br><span class="line">        widget.show()</span><br><span class="line">        win_id = widget.winId()</span><br><span class="line">        unreal.parent_external_window_to_slate(win_id)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">buildUnrealWindow</span> (self):</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Id any current instances of tool and destroy</span></span><br><span class="line">        all_qt_windows = QtWidgets.QApplication.topLevelWidgets() <span class="comment"># type: <span class="built_in">list</span>[QtWidgets.QWidget]</span></span><br><span class="line">        <span class="keyword">for</span> qt_win <span class="keyword">in</span> all_qt_windows:</span><br><span class="line">            <span class="keyword">if</span> self.windowObjName <span class="keyword">in</span> qt_win.objectName():  <span class="comment"># update this name to match name below</span></span><br><span class="line">                qt_win.deleteLater()</span><br><span class="line">                qt_win.close()</span><br><span class="line">                qt_win.destroy()</span><br><span class="line"></span><br><span class="line">        self._bindWidgetToUnreal()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UnrealDemoPyUiLoader</span>(<span class="title class_ inherited__">UnrealPyUiLoaderBase</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Create tool window.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, parent=<span class="literal">None</span>, ui_file_name=<span class="string">&quot;&quot;</span></span>):</span><br><span class="line">        self.file_dir_path = unreal.Paths.project_saved_dir()</span><br><span class="line">        <span class="built_in">super</span>().__init__(parent, ui_file_name)</span><br><span class="line"></span><br><span class="line">    <span class="comment">################################</span></span><br><span class="line">    <span class="comment"># Your code goes here.</span></span><br><span class="line">    <span class="comment">################################</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_modifyUi</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># -----------------------------------------</span></span><br><span class="line">        <span class="comment"># find interactive elements of UI</span></span><br><span class="line">        self.btn_run = self.findButton(<span class="string">&quot;Btn_run&quot;</span>, clicked_callback=self.openFileDialog)</span><br><span class="line">        self.txt_edit_export_file_dir_path = self.findTextEdit(<span class="string">&quot;Text_FilePath&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">    @QtCore.Slot()</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">openFileDialog</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        open get file path window</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        chosen_dir_path = QtWidgets.QFileDialog.getExistingDirectory(</span><br><span class="line">            self,</span><br><span class="line">            options =QtWidgets.QFileDialog.ShowDirsOnly,</span><br><span class="line">            caption=<span class="string">u&quot;Choose Export Folder&quot;</span>,</span><br><span class="line">            <span class="built_in">dir</span>=unreal.Paths.project_saved_dir())</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> chosen_dir_path: <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> update UI and dir path</span></span><br><span class="line">        self.file_dir_path = chosen_dir_path</span><br><span class="line">        <span class="keyword">if</span> self.txt_edit_export_file_dir_path:</span><br><span class="line">            self.txt_edit_export_file_dir_path.setText(chosen_dir_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    QtUiStartHelper.startQtApp()</span><br><span class="line"></span><br><span class="line">    qt_ui_widget = UnrealDemoPyUiLoader(ui_file_name=<span class="string">&quot;demo_ui_file.ui&quot;</span>)</span><br><span class="line">    unreal_qt_ui_helper = QtUiStartHelper(qt_ui_widget)</span><br><span class="line"></span><br><span class="line">    unreal_qt_ui_helper.buildUnrealWindow()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 水 </category>
          
          <category> Unreal </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 破事水 </tag>
            
            <tag> Unreal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修复Windows令人讨厌的系统响应错误</title>
      <link href="/2023/10/28/FixWindowsDcomCompoent/"/>
      <url>/2023/10/28/FixWindowsDcomCompoent/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>修复 授予针对 CLSID 为 {xxxx-….}APPID 为 {xxxx-…} 导致 的Windows操作系统卡顿 </p><p>修复 无法使用VMWare虚拟机</p><p>移除没什么卵用的WindowsDefender</p><span id="more"></span>   <p>由于Windows最近的更新越来越阿三化, 导致Windows总是出现一些奇怪的毛病</p><p>可能是阿三的水平实在有限, 经常破坏DCOM的权限设置, 添加一些无用的系统组件 …</p><p>本章分享如何通过策略组以及ExecTI等工具来干掉这些令人讨厌的错误, 以提升系统响应.</p><h2 id="移除-“自动驾驶”"><a href="#移除-“自动驾驶”" class="headerlink" title="移除 “自动驾驶”"></a>移除 “自动驾驶”</h2><h3 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h3><ul><li><p>事件日中会看到 <strong>Autopilot.dll WIL error was reported</strong></p></li><li><p>此错误由Microsoft Account Sign-in Assistant 服务引发.</p><ul><li>Microsoft Account Sign-in Assistant 服务是登录网络Microsoft网络账户的必要服务.</li></ul></li><li><p>此错误会导致操作系统在一瞬间尝试轻微卡顿.</p><ul><li>重启Microsoft Account Sign-in Assistant 服务后可能在一段时间缓解</li><li>在一段时间后重复出现</li></ul></li><li><p>由于Windows较高版本强制要求用户登录其网络账户</p><ul><li>通过禁用Microsoft Account Sign-in Assistant 无法彻底解决此问题.</li></ul></li></ul><h3 id="修复手段"><a href="#修复手段" class="headerlink" title="修复手段"></a>修复手段</h3><ol><li><p>下载 ExecAsTI 程序, 确保可以以TrustedInstaller权限进行操作</p><ul><li>可以从 <a href="https://github.com/jschicht/RunAsTI">https://github.com/jschicht/RunAsTI</a> 下载</li></ul></li><li><p>以TrustedInstaller权限运行cmd.exe</p></li><li><p>运行 <strong>del &#x2F;f &#x2F;q %windir%\System32\Autopilot.dll</strong></p></li><li><p>问题解决</p></li></ol><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>移除 Autopilot.dll 不会对已经启用的操作系统以及功能造成任何问题.</p><p>此组件仅在 Windows Out of Box Experience (OOBE experience)阶段会使用</p><p>此组件在Windows版本升级后会重新被安装.</p><h2 id="无法使用VMWare虚拟机或者禁用HyperV"><a href="#无法使用VMWare虚拟机或者禁用HyperV" class="headerlink" title="无法使用VMWare虚拟机或者禁用HyperV"></a>无法使用VMWare虚拟机或者禁用HyperV</h2><h3 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h3><ul><li>无法使用VMWare虚拟机<ul><li>或者必须使用侧缓通道</li></ul></li><li>部分游戏的反作弊无法激活导致无法游戏</li><li>部分游戏模拟器无法使用</li><li>错误日志中提示Device Guard 以及Credential Guard相关错误</li><li>虚拟化导致的系统运行效率降低</li></ul><h3 id="修复手段-1"><a href="#修复手段-1" class="headerlink" title="修复手段"></a>修复手段</h3><ol><li>下载微软提供的PowerShell脚本<ul><li>可以从此处下载 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=53337">https://www.microsoft.com/en-us/download/details.aspx?id=53337</a></li><li>搜索 dgreadiness_v3.6 进行下载</li></ul></li><li>解压并找到 DG_Readiness.ps1所在位置</li><li>以管理员权限运行PowerShell</li><li>cd 到 DG_Readiness.ps1 所在文件夹路径</li><li>执行 <strong>.&#x2F;DG_Readiness.ps1 -Disable</strong> </li><li>计算机将会被重启</li><li>重启后按提示按F3</li><li>再次重启后即完全禁用Device Guard 以及Credential Guard<ul><li>由于HyperV依赖于此功能, 所以将会被完全禁用</li></ul></li></ol><h2 id="移除鸡肋-WindowsDefender"><a href="#移除鸡肋-WindowsDefender" class="headerlink" title="移除鸡肋 WindowsDefender"></a>移除鸡肋 WindowsDefender</h2><h3 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h3><ul><li><p>一堆没什么用的功能</p></li><li><p>用户安装杀软后, 更加显得没用</p></li><li><p>没用时占用系统资源</p></li><li><p>后台扫描造成莫名卡顿</p></li></ul><h3 id="修复手段-2"><a href="#修复手段-2" class="headerlink" title="修复手段"></a>修复手段</h3><ol><li>下载 Defender Remover<ul><li>从 <a href="https://github.com/ionuttbara/windows-defender-remover">https://github.com/ionuttbara/windows-defender-remover</a> 下载</li></ul></li><li>管理员权限运行 DefenderRemover.exe</li><li>按下N, 并等待程序执行</li><li>重启计算机</li></ol><h2 id="修复DCOM无法鉴权"><a href="#修复DCOM无法鉴权" class="headerlink" title="修复DCOM无法鉴权"></a>修复DCOM无法鉴权</h2><h3 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h3><ul><li><p>系统事件中出现 授予针对 CLSID 为 {xxxx-….}APPID 为 {xxxx-…}</p></li><li><p>启动某些更新前安装的程序出现间歇性卡顿</p></li><li><p>常见: </p><ul><li><p>授予针对 CLSID 为<br>  {2593F8B9-4EAF-457C-B68A-50F6B8EA6B54}<br>  、APPID 为<br>  {15C20B67-12E7-4BB6-92BB-7AFF07997402}</p><p>  的 COM 服务器应用程序的 本地 激活 权限。此安全权限可以使用组件服务管理工具进行修改。</p></li></ul></li></ul><h3 id="修复手段-3"><a href="#修复手段-3" class="headerlink" title="修复手段"></a>修复手段</h3><p>以 APPID {15C20B67-12E7-4BB6-92BB-7AFF07997402} 为例</p><ul><li><p>以管理员权限启动 gpedit.msc</p></li><li><p>按照顺序寻找 <strong>计算机配置&gt;管理模板&gt;系统&gt;分部署COM&gt;应用程序兼容性设置</strong></p></li><li><p>启用 <strong>激活安全检查例外</strong></p></li><li><p>启用 <strong>定义激活安全检查例外</strong></p></li><li><p>在 <strong>定义激活安全检查例外</strong> 点击 <strong>[显示…]</strong></p><p><img data-src="/../img/FixWindowsDcomCompoent/image-20231028182811459.png"></p></li><li><p>添加 APPID 到对话框, 并设置值为1</p><p><img data-src="/../img/FixWindowsDcomCompoent/image-20231028183001735.png"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 水 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 破事水 </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maya中法线转顶点色且可逆</title>
      <link href="/2023/02/26/MayaNormalToColorThenRecovery/"/>
      <url>/2023/02/26/MayaNormalToColorThenRecovery/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>因为项目需要, 编写了一个Maya脚本, 可以 快速 将顶点(切线&#x2F;世界)法线转换为顶点色, 并可逆转换回来.</p><p>基本基于OpenMaya API 1.0编写, 速度非常快.只需要几秒就可以处理100W+三角形</p><span id="more"></span>   <h1 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h1><ul><li>人生苦短</li><li>我用Python</li><li>除非性能不够</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Script by MineClever, help to process high mesh normal on low mesh ~</span></span><br><span class="line"><span class="comment"># Bug report to : https://t.me/minemineSlaver</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> maya.api.OpenMaya <span class="keyword">as</span> api</span><br><span class="line"><span class="keyword">import</span> maya.cmds <span class="keyword">as</span> cmds</span><br><span class="line"><span class="keyword">import</span> six</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MSingleton</span>(<span class="title class_ inherited__">type</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;metaclass for set singleton class&quot;&quot;&quot;</span></span><br><span class="line">    __debug = <span class="literal">True</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, *args, **kwargs</span>):</span><br><span class="line">        self.__instance = <span class="literal">None</span></span><br><span class="line">        <span class="built_in">super</span>(MSingleton,self).__init__(*args, **kwargs)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params">self, *args, **kwargs</span>):</span><br><span class="line">        <span class="keyword">if</span> self.__instance <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">if</span> self.__debug: <span class="built_in">print</span>(<span class="string">u&quot;current class &#123;&#125; create singleton class&quot;</span>.<span class="built_in">format</span>(self.__class__))</span><br><span class="line">            self.__instance = <span class="built_in">super</span>(MSingleton,self).__call__(*args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> self.__instance</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MSelectionHelper</span>(six.with_metaclass(MSingleton,<span class="built_in">object</span>)):</span><br><span class="line">    __debug = <span class="literal">False</span></span><br><span class="line">    tempSelectionList = api.MSelectionList()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getCurMeshSelections</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Return all mesh shape current selected&quot;&quot;&quot;</span></span><br><span class="line">        selList = api.MGlobal.getActiveSelectionList() <span class="comment"># type: api.MSelectionList</span></span><br><span class="line">        shapeList = cls.tempSelectionList</span><br><span class="line">        shapeList.clear()</span><br><span class="line">        numOfSelected = selList.length() <span class="comment"># type: <span class="built_in">int</span></span></span><br><span class="line">        <span class="keyword">if</span> cls.__debug: <span class="built_in">print</span>(<span class="string">&quot;Current selection count : &#123;&#125;&quot;</span>.<span class="built_in">format</span>(numOfSelected))</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> check if empty list</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> (numOfSelected &gt;<span class="number">0</span>) :</span><br><span class="line">            <span class="keyword">return</span> shapeList</span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> add all shape into selection list</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(numOfSelected):</span><br><span class="line">            dagPath = selList.getDagPath(i) <span class="comment"># type: api.MDagPath</span></span><br><span class="line">            <span class="keyword">if</span> (dagPath.numberOfShapesDirectlyBelow() &gt; <span class="number">0</span>): dagPath.extendToShape()</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> check if mesh type</span></span><br><span class="line">            <span class="keyword">if</span> cls.__debug: <span class="built_in">print</span>(<span class="string">&quot;selection[&#123;&#125;]:\&quot;&#123;&#125;\&quot; @ type: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(i, dagPath, dagPath.apiType()))</span><br><span class="line">            <span class="keyword">if</span> (dagPath.apiType() == <span class="number">296</span>) : </span><br><span class="line">                shapeList.add(dagPath)</span><br><span class="line">        <span class="keyword">if</span> cls.__debug:  <span class="built_in">print</span>(<span class="string">u&quot;shape list count: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(shapeList.length()))</span><br><span class="line">        <span class="keyword">return</span> shapeList</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MMProcessorBar</span>(six.with_metaclass(MSingleton,<span class="built_in">object</span>)):</span><br><span class="line">    __debug = <span class="literal">False</span></span><br><span class="line">    </span><br><span class="line">    __processorCount = <span class="number">0</span></span><br><span class="line">    __processorTotalCount = <span class="number">0</span></span><br><span class="line">    __bShowProcessBar = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    vtxUpdateThresholdNum = <span class="number">40960</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setProcessorCountBarTotalNum</span>(<span class="params">cls,inTotalCount</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">int</span>) -&gt; <span class="literal">None</span></span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cls.__bShowProcessBar:</span><br><span class="line">            <span class="keyword">if</span> cls.__debug: <span class="built_in">print</span>(<span class="string">&quot;Is not able to set a processor bar now&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">        cls.__processorTotalCount = inTotalCount</span><br><span class="line">        cmds.progressWindow( </span><br><span class="line">        title=<span class="string">&#x27;Process Vertex Data&#x27;</span>,</span><br><span class="line">        progress=<span class="number">0</span>,</span><br><span class="line">        status=(<span class="string">&quot;Done &#123;0&#125;/&#123;1&#125;\t&quot;</span>.<span class="built_in">format</span>(<span class="number">0</span>, inTotalCount)),</span><br><span class="line">        isInterruptable=<span class="literal">True</span>,</span><br><span class="line">        <span class="built_in">min</span>=<span class="number">0</span>,</span><br><span class="line">        <span class="built_in">max</span>=inTotalCount)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">updateProcessorCountBar</span>(<span class="params">cls,inCurCount</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">int</span>) -&gt; <span class="literal">None</span></span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cls.__bShowProcessBar:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">        cls.__processorCount = inCurCount</span><br><span class="line">        <span class="keyword">if</span> cls.__bShowProcessBar :</span><br><span class="line">            <span class="keyword">if</span> (cmds.progressWindow( query=<span class="literal">True</span>, progress=<span class="literal">True</span> ) &gt;= cls.__processorTotalCount) <span class="keyword">or</span> \</span><br><span class="line">            (cmds.progressWindow( query=<span class="literal">True</span>, isCancelled=<span class="literal">True</span> ) ) :</span><br><span class="line">                cls.endProcessorCountBar()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                cmds.progressWindow( edit=<span class="literal">True</span>, progress=inCurCount, status=(<span class="string">&quot;Done &#123;0&#125;/&#123;1&#125;\t&quot;</span>.<span class="built_in">format</span>(cls.__processorCount, cls.__processorTotalCount)) )</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">endProcessorCountBar</span>(<span class="params">cls</span>):</span><br><span class="line">        cls.__processorCount = <span class="number">0</span></span><br><span class="line">        cls.__bShowProcessBar = <span class="literal">False</span></span><br><span class="line">        cmds.progressWindow(endProgress=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">checkIfUseProcessorCountBar</span>(<span class="params">cls,inTotalCount</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">int</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        cls.endProcessorCountBar()</span><br><span class="line">        cls.__bShowProcessBar = <span class="literal">True</span> <span class="keyword">if</span> inTotalCount &gt; cls.vtxUpdateThresholdNum <span class="keyword">else</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> cls.__bShowProcessBar:</span><br><span class="line">            cls.setProcessorCountBarTotalNum(inTotalCount)</span><br><span class="line">        <span class="keyword">return</span> cls.__bShowProcessBar</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getCurProcessorCountBarStatus</span> (cls):</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        <span class="keyword">return</span> cls.__bShowProcessBar</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getCurProcessorCountBarNum</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">int</span></span></span><br><span class="line">        <span class="keyword">return</span> cls.__processorCount</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MMeshFaceVtxProcessorInterface</span>(six.with_metaclass(MSingleton,<span class="built_in">object</span>)):</span><br><span class="line">    __debug = <span class="literal">False</span></span><br><span class="line">    halfVec = api.MVector(<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">iterMeshFaceVtx</span> (cls, inDagPath, inColorSetName = <span class="string">&quot;FaceVtxNorCol&quot;</span>):</span><br><span class="line">        <span class="comment"># type: (api.MDagPath, <span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MMeshFaceVtxProcessorBase</span>(<span class="title class_ inherited__">MMeshFaceVtxProcessorInterface</span>):</span><br><span class="line">    </span><br><span class="line">    processorBarCls = MMProcessorBar</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">iterMeshFaceVtx</span> (cls, inDagPath, inColorSetName = <span class="string">&quot;FaceVtxNorCol&quot;</span>):</span><br><span class="line">        <span class="comment"># type: (api.MDagPath, <span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        fnMesh = api.MFnMesh(inDagPath)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Init processor bar</span></span><br><span class="line">        cls.processorBarCls.checkIfUseProcessorCountBar(fnMesh.numFaceVertices)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> force set current color set</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cls._processCurColorSet(fnMesh, inColorSetName): <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Traverse all faceVertex in current mesh</span></span><br><span class="line">        meshFaceVertexIt = api.MItMeshFaceVertex(inDagPath)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> cls._iterMeshFaceVtxDataProcess(fnMesh, meshFaceVertexIt)</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_processCurColorSet</span>(<span class="params">cls, fnMesh, inColorSetName</span>):</span><br><span class="line">        <span class="comment"># type: (api.MFnMesh, <span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        <span class="string">&quot;&quot;&quot; check current color set &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_iterMeshFaceVtxDataProcess</span> (cls, fnMesh, meshFaceVertexIt):</span><br><span class="line">        <span class="comment">#type: (api.MFnMesh, api.MItMeshFaceVertex,) -&gt; bool</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Traverse all faceVertex in current mesh&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MMeshFaceVtxProcessorCol2Nor</span>(<span class="title class_ inherited__">MMeshFaceVtxProcessorBase</span>):</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_processCurColorSet</span>(<span class="params">cls, fnMesh, inColorSetName</span>):</span><br><span class="line">        <span class="comment"># type: (api.MFnMesh, <span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        <span class="string">&quot;&quot;&quot; check current color set &quot;&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> check if valid color set to set color</span></span><br><span class="line">        colorSets = fnMesh.getColorSetNames() <span class="comment"># type: <span class="built_in">list</span>[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> inColorSetName <span class="keyword">in</span> colorSets:</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Create new color set</span></span><br><span class="line">            api.MGlobal.displayWarning(<span class="string">u&quot;\&quot;&#123;&#125;\&quot; dont have colorSet \&quot;&#123;&#125;\&quot; to recovery normal&quot;</span>.<span class="built_in">format</span>(fnMesh.dagPath(), inColorSetName))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_iterMeshFaceVtxDataProcess</span> (cls, fnMesh, meshFaceVertexIt):</span><br><span class="line">        <span class="comment">#type: (api.MFnMesh, api.MItMeshFaceVertex,) -&gt; bool</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Traverse all faceVertex in current mesh&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Get Current Color Set name</span></span><br><span class="line">        curColorSetName = fnMesh.currentColorSetName()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Save to temp list</span></span><br><span class="line">        normals = api.MVectorArray()</span><br><span class="line">        faceIds = api.MIntArray()</span><br><span class="line">        vertexIds=api.MIntArray()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Processor bar update data</span></span><br><span class="line">        curIndex = <span class="number">0</span></span><br><span class="line">        nextUpdateNum = cls.processorBarCls.vtxUpdateThresholdNum</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> meshFaceVertexIt.isDone():</span><br><span class="line">            faceVtxCol = meshFaceVertexIt.getColor(curColorSetName) <span class="comment"># type: api.MColor</span></span><br><span class="line">            faceVtxCor2Vec = api.MVector(faceVtxCol[<span class="number">0</span>],faceVtxCol[<span class="number">1</span>],faceVtxCol[<span class="number">2</span>])</span><br><span class="line">            normals.append((faceVtxCor2Vec - cls.halfVec) * <span class="number">2</span>)</span><br><span class="line">            vertexIds.append(meshFaceVertexIt.vertexId())</span><br><span class="line">            faceIds.append(meshFaceVertexIt.faceId())            </span><br><span class="line">            meshFaceVertexIt.<span class="built_in">next</span>()</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> update processor bar</span></span><br><span class="line">            curIndex+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> curIndex &gt;= nextUpdateNum:</span><br><span class="line">                nextUpdateNum += cls.processorBarCls.vtxUpdateThresholdNum</span><br><span class="line">                cls.processorBarCls.updateProcessorCountBar(curIndex)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            fnMesh.setFaceVertexNormals(normals, faceIds, vertexIds)</span><br><span class="line">            normals = faceIds = vertexIds = <span class="literal">None</span></span><br><span class="line">            cls.processorBarCls.endProcessorCountBar() <span class="comment"># <span class="doctag">NOTE:</span> end processor bar</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MMeshFaceVtxProcessorWsNor2Col</span>(<span class="title class_ inherited__">MMeshFaceVtxProcessorBase</span>):</span><br><span class="line">        </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_processCurColorSet</span>(<span class="params">cls,fnMesh, inColorSetName</span>):</span><br><span class="line">        <span class="comment"># type: (api.MFnMesh, <span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        <span class="string">&quot;&quot;&quot; force set current color set &quot;&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> check if valid color set to set color</span></span><br><span class="line">        colorSets = fnMesh.getColorSetNames() <span class="comment"># type: <span class="built_in">list</span>[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> inColorSetName <span class="keyword">in</span> colorSets:</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Create new color set</span></span><br><span class="line">            fnMesh.createColorSet(inColorSetName, <span class="literal">True</span>)</span><br><span class="line">        fnMesh.setCurrentColorSetName(inColorSetName)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_iterMeshFaceVtxDataProcess</span> (cls, fnMesh, meshFaceVertexIt):</span><br><span class="line">        <span class="comment">#type: (api.MFnMesh, api.MItMeshFaceVertex,) -&gt; bool</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Traverse all faceVertex in current mesh&quot;&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># -- <span class="doctag">NOTE:</span> Save to temp list</span></span><br><span class="line">        colors = api.MColorArray()</span><br><span class="line">        faceIds = api.MIntArray()</span><br><span class="line">        vertexIds=api.MIntArray()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Processor bar update data</span></span><br><span class="line">        curIndex = <span class="number">0</span></span><br><span class="line">        nextUpdateNum = cls.processorBarCls.vtxUpdateThresholdNum</span><br><span class="line">        modifier = api.MDGModifier()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> meshFaceVertexIt.isDone():</span><br><span class="line">            norVec = meshFaceVertexIt.getNormal() <span class="comment"># type: api.MVector</span></span><br><span class="line">            colors.append(norVec * <span class="number">0.5</span> + cls.halfVec)</span><br><span class="line">            vertexIds.append(meshFaceVertexIt.vertexId())</span><br><span class="line">            faceIds.append(meshFaceVertexIt.faceId())</span><br><span class="line">            meshFaceVertexIt.<span class="built_in">next</span>()</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> update processor bar</span></span><br><span class="line">            curIndex+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> curIndex &gt;= nextUpdateNum:</span><br><span class="line">                nextUpdateNum += cls.processorBarCls.vtxUpdateThresholdNum</span><br><span class="line">                cls.processorBarCls.updateProcessorCountBar(curIndex)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            fnMesh.setFaceVertexColors(colors, faceIds, vertexIds, modifier=modifier)</span><br><span class="line">            modifier.doIt()</span><br><span class="line">            colors = faceIds = vertexIds = <span class="literal">None</span></span><br><span class="line">            cls.processorBarCls.endProcessorCountBar() <span class="comment"># <span class="doctag">NOTE:</span> end processor bar</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MMeshFaceVtxProcessorTanNor2Col</span>(<span class="title class_ inherited__">MMeshFaceVtxProcessorInterface</span>):</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">iterMeshFaceVtx</span> (cls, inDagPath, inColorSetName = <span class="string">&quot;FaceVtxNorCol&quot;</span>):</span><br><span class="line">        <span class="comment"># type: (api.MDagPath, <span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        modifier = api.MDGModifier()</span><br><span class="line">        fnMesh = api.MFnMesh(inDagPath)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> check if valid color set to set color</span></span><br><span class="line">        colorSets = fnMesh.getColorSetNames() <span class="comment"># type: <span class="built_in">list</span>[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> inColorSetName <span class="keyword">in</span> colorSets:</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Create new color set</span></span><br><span class="line">            fnMesh.createColorSet(inColorSetName, <span class="literal">True</span>)</span><br><span class="line">        fnMesh.setCurrentColorSetName(inColorSetName)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Get current uvSet name</span></span><br><span class="line">        curUvSet = fnMesh.currentUVSetName() <span class="comment"># type: <span class="built_in">str</span></span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Traverse all faceVertex in current mesh</span></span><br><span class="line">        meshFaceVertexIt = api.MItMeshFaceVertex(inDagPath)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- <span class="doctag">NOTE:</span> Save to temp list</span></span><br><span class="line">        colors = api.MColorArray()</span><br><span class="line">        faceIds = api.MIntArray()</span><br><span class="line">        vertexIds=api.MIntArray()</span><br><span class="line">        zeroArray = (<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> meshFaceVertexIt.isDone():</span><br><span class="line">            norVec = meshFaceVertexIt.getNormal() <span class="comment"># type: api.MVector</span></span><br><span class="line">            binorVec = meshFaceVertexIt.getBinormal(uvSet=curUvSet)  <span class="comment"># type: api.MVector</span></span><br><span class="line">            tanVec = meshFaceVertexIt.getTangent(uvSet=curUvSet)  <span class="comment"># type: api.MVector</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> build TBN Matrix</span></span><br><span class="line">            tbnMatrix = api.MMatrix([vec[i] <span class="keyword">if</span> i &lt; <span class="number">3</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">for</span> vec <span class="keyword">in</span> (tanVec, binorVec, norVec, zeroArray) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)])</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> pre-multiply TBN matrix. same as post-multiply transposed TBN matrix</span></span><br><span class="line">            tanNorVec =  tbnMatrix * norVec  <span class="comment"># type: api.MVector</span></span><br><span class="line">            colors.append(tanNorVec * <span class="number">0.5</span> + cls.halfVec)</span><br><span class="line">            vertexIds.append(meshFaceVertexIt.vertexId())</span><br><span class="line">            faceIds.append(meshFaceVertexIt.faceId())</span><br><span class="line">            meshFaceVertexIt.<span class="built_in">next</span>()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            fnMesh.setFaceVertexColors(colors, faceIds, vertexIds, modifier=modifier)</span><br><span class="line">            modifier.doIt()</span><br><span class="line">            colors = faceIds = vertexIds = <span class="literal">None</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MMeshFaceVtxProcessorTanOffsetNor2Col</span>(<span class="title class_ inherited__">MMeshFaceVtxProcessorInterface</span>):</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">iterMeshFaceVtx</span> (cls, inDagPath, inColorSetName = <span class="string">&quot;FaceVtxNorCol&quot;</span>):</span><br><span class="line">        <span class="comment"># type: (api.MDagPath, <span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        modifier = api.MDGModifier()</span><br><span class="line">        fnMesh = api.MFnMesh(inDagPath)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> check if valid color set to set color</span></span><br><span class="line">        colorSets = fnMesh.getColorSetNames() <span class="comment"># type: <span class="built_in">list</span>[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> inColorSetName <span class="keyword">in</span> colorSets:</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Create new color set</span></span><br><span class="line">            fnMesh.createColorSet(inColorSetName, <span class="literal">True</span>)</span><br><span class="line">        fnMesh.setCurrentColorSetName(inColorSetName)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Get current uvSet name</span></span><br><span class="line">        curUvSet = fnMesh.currentUVSetName() <span class="comment"># type: <span class="built_in">str</span></span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> Traverse all faceVertex in current mesh</span></span><br><span class="line">        meshFaceVertexIt = api.MItMeshFaceVertex(inDagPath)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># -- <span class="doctag">NOTE:</span> Save to temp list</span></span><br><span class="line">        colors = api.MColorArray()</span><br><span class="line">        faceIds = api.MIntArray()</span><br><span class="line">        vertexIds=api.MIntArray()</span><br><span class="line">        zeroArray = (<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">        refColorSetName= inColorSetName</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> meshFaceVertexIt.isDone():</span><br><span class="line">            faceVtxCol = meshFaceVertexIt.getColor(refColorSetName) <span class="comment"># type: api.MColor</span></span><br><span class="line">            faceVtxCor2Vec = api.MVector(faceVtxCol[<span class="number">0</span>],faceVtxCol[<span class="number">1</span>],faceVtxCol[<span class="number">2</span>])</span><br><span class="line">            decodedNorVec = (faceVtxCor2Vec - cls.halfVec) * <span class="number">2</span> <span class="comment"># type: api.MVector</span></span><br><span class="line">            </span><br><span class="line">            norVec = meshFaceVertexIt.getNormal() <span class="comment"># type: api.MVector</span></span><br><span class="line">            binorVec = meshFaceVertexIt.getBinormal(uvSet=curUvSet)  <span class="comment"># type: api.MVector</span></span><br><span class="line">            tanVec = meshFaceVertexIt.getTangent(uvSet=curUvSet)  <span class="comment"># type: api.MVector</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> build TBN Matrix</span></span><br><span class="line">            tbnMatrix = api.MMatrix([vec[i] <span class="keyword">if</span> i &lt; <span class="number">3</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">for</span> vec <span class="keyword">in</span> (tanVec, binorVec, norVec, zeroArray) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)])</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> pre-multiply TBN matrix. same as post-multiply transposed TBN matrix</span></span><br><span class="line">            tanNorVec =  tbnMatrix * decodedNorVec  <span class="comment"># type: api.MVector</span></span><br><span class="line">            colors.append(tanNorVec * <span class="number">0.5</span> + cls.halfVec)</span><br><span class="line">            vertexIds.append(meshFaceVertexIt.vertexId())</span><br><span class="line">            faceIds.append(meshFaceVertexIt.faceId())</span><br><span class="line">            meshFaceVertexIt.<span class="built_in">next</span>()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            fnMesh.setFaceVertexColors(colors, faceIds, vertexIds, modifier=modifier)</span><br><span class="line">            modifier.doIt()</span><br><span class="line">            colors = faceIds = vertexIds = <span class="literal">None</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MVtxNorColConverter</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">    __debug = <span class="literal">True</span></span><br><span class="line">    __convertClass = MMeshFaceVtxProcessorInterface</span><br><span class="line">    __validConvertClass = <span class="literal">False</span></span><br><span class="line">    __colorSetName = <span class="string">&quot;FaceVtxNorCol&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setConvertClass</span> (cls, inConvertClass):</span><br><span class="line">        <span class="comment"># type: (MMeshFaceVtxProcessorInterface) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> MMeshFaceVtxProcessorInterface.__subclasscheck__(inConvertClass):</span><br><span class="line">            cls.__convertClass = inConvertClass</span><br><span class="line">            cls.__validConvertClass = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&quot;Not valid convert class&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setColorSetName</span> (cls, colSetName):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(colSetName,<span class="built_in">str</span>):</span><br><span class="line">            cls.__colorSetName = colSetName</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getColorSetName</span> (cls):</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">str</span></span></span><br><span class="line">        <span class="keyword">return</span> cls.__colorSetName</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getCurConvertClassName</span> (cls):</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">str</span></span></span><br><span class="line">        <span class="keyword">return</span> cls.__convertClass.__name__</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_convertSelMesh</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        curMeshList = MSelectionHelper.getCurMeshSelections()</span><br><span class="line">        <span class="keyword">if</span> curMeshList.isEmpty(): </span><br><span class="line">            api.MGlobal.displayWarning(<span class="string">u&quot;No mesh has been selected?&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        </span><br><span class="line">        curMeshListIt = api.MItSelectionList(curMeshList)</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> (curMeshListIt.isDone()):</span><br><span class="line">            curMeshDagPath= curMeshListIt.getDagPath() <span class="comment"># type: api.MDagPath</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> cls.iterMeshFaceVtx(curMeshDagPath): <span class="built_in">print</span>(<span class="string">u&quot;process mesh \&quot;&#123;&#125;\&quot; fail&quot;</span>.<span class="built_in">format</span>(curMeshDagPath))</span><br><span class="line">            <span class="keyword">if</span> cmds.progressWindow( query=<span class="literal">True</span>, isCancelled=<span class="literal">True</span> ):</span><br><span class="line">                api.MGlobal.displayWarning(<span class="string">&quot;Processor end by user!&quot;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            curMeshListIt.<span class="built_in">next</span>()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">convertSelMesh</span> (cls):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            cls._convertSelMesh()</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> E:</span><br><span class="line">            api.MGlobal.displayError(<span class="built_in">str</span>(E))</span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Force end process window</span></span><br><span class="line">            cmds.progressWindow(endProgress=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">iterMeshFaceVtx</span> (cls, inDagPath):</span><br><span class="line">        <span class="comment"># type: (api.MDagPath) -&gt; <span class="built_in">bool</span></span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cls.__validConvertClass :</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&quot;Not set a valid convert class&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> cls.__convertClass.iterMeshFaceVtx(inDagPath, cls.__colorSetName)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">runScript_nor2col</span>(<span class="params">*args, **kw</span>):</span><br><span class="line">    MVtxNorColConverter.setConvertClass(MMeshFaceVtxProcessorWsNor2Col)</span><br><span class="line">    MVtxNorColConverter.convertSelMesh()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">runScript_tanNor2tanCol</span>(<span class="params">*args, **kw</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Generate Tangent space Normal, test only!&quot;&quot;&quot;</span></span><br><span class="line">    MVtxNorColConverter.setConvertClass(MMeshFaceVtxProcessorTanOffsetNor2Col)</span><br><span class="line">    MVtxNorColConverter.convertSelMesh()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">runScript_col2nor</span>(<span class="params">*args, **kw</span>):</span><br><span class="line">    MVtxNorColConverter.setConvertClass(MMeshFaceVtxProcessorCol2Nor)</span><br><span class="line">    MVtxNorColConverter.convertSelMesh()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    runScript_nor2col()</span><br></pre></td></tr></table></figure><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><ul><li>理论上还是够快的</li><li>如果用C++ 重写, 应该可以考虑上多线程, 分割处理所有顶点面, 应当可以处理上亿三角形</li></ul>]]></content>
      
      
      <categories>
          
          <category> 水 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 破事水 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unreal 模型材质绑定传递工具</title>
      <link href="/2023/02/21/UnrealMatSlotCopyTool/"/>
      <url>/2023/02/21/UnrealMatSlotCopyTool/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>模型美术的小伙伴 , 某日跑过来表示, 每次临时, 替换或者更新, 一个新的模型资产时</p><p>都需要手动把之前指过的材质再指一次, 非常麻烦, 特别是有50+材质的超级复杂模型, 简直想要自杀.</p><p>于是有了这个小脚本~</p><span id="more"></span>   <h1 id="Python-实现代码"><a href="#Python-实现代码" class="headerlink" title="Python 实现代码"></a>Python 实现代码</h1><ul><li>人生苦短!</li><li>CV大法好 !!</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># This Script was designed to copy material which have same slotName with different meshes asset object in Unreal Engine</span></span><br><span class="line"><span class="comment"># script by MineClever @ 2023</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> unreal <span class="keyword">as</span> unreal</span><br><span class="line"><span class="keyword">import</span> os <span class="keyword">as</span> os</span><br><span class="line"><span class="keyword">import</span> copy <span class="keyword">as</span> copy</span><br><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UnrealAssetSrcCtrl</span>():</span><br><span class="line">    <span class="string">u&quot;&quot;&quot;用于简单处理版本控制, 大规模检入检出时不应当使用此类型&quot;&quot;&quot;</span></span><br><span class="line">    _provider = unreal.SourceControl.current_provider()</span><br><span class="line">    _projectContentPath = unreal.Paths.project_content_dir()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, assetPath</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>) -&gt; <span class="literal">None</span></span></span><br><span class="line">        self.currentFile = self.ConvertPackagePathToFilePath(assetPath)</span><br><span class="line">        self.currentProvider = self._provider</span><br><span class="line">        self.currentFileState = unreal.SourceControl.query_file_state(self.currentFile)</span><br><span class="line">        <span class="comment"># self.currentFileState = unreal.SourceControlState(self.currentFile)</span></span><br><span class="line">        self.hasFileCheckOut = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ConvertPackagePathToFilePath</span> (inPackagePath) :</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>) -&gt; <span class="built_in">str</span></span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Convert &#x27;/Game/StarterContent/SomeName.SomeName&#x27; to &#x27;Drive:/Project/Content/StarterContent/SomeName.uasset&#x27;&quot;&quot;&quot;</span></span><br><span class="line">        standardPath =  unreal.Paths.make_standard_filename(inPackagePath)</span><br><span class="line">        uAssetPath = os.path.join( *unreal.Paths.split(standardPath)[<span class="number">0</span>:<span class="number">2</span>] ) + <span class="string">&quot;.uasset&quot;</span></span><br><span class="line">        fileSysPath = os.path.join(__class__._projectContentPath,uAssetPath.replace(<span class="string">&quot;/Game/&quot;</span>,<span class="string">&quot;&quot;</span>)).replace(<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;/&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> fileSysPath</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">UpdateFile</span>(<span class="params">self</span>):</span><br><span class="line">        currentFileState = self.currentFileState</span><br><span class="line">        <span class="keyword">if</span> (currentFileState.is_valid <span class="keyword">and</span> currentFileState.is_source_controlled):</span><br><span class="line">            bRevert = unreal.SourceControl.revert_file(self.currentFile,<span class="literal">True</span>)</span><br><span class="line">            bSync = unreal.SourceControl.sync_file(self.currentFile, <span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> (bRevert <span class="keyword">or</span> bSync)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">CheckOutFile</span>(<span class="params">self</span>):</span><br><span class="line">        currentFileState = self.currentFileState</span><br><span class="line">        self.hasFileCheckOut = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> (currentFileState.is_valid <span class="keyword">and</span> currentFileState.is_source_controlled):</span><br><span class="line">            <span class="keyword">if</span> (currentFileState.is_checked_out_other):</span><br><span class="line">                unreal.log_warning(<span class="string">u&quot;当前文件&#123;&#125;已经被其他人检出(锁定)&quot;</span>.<span class="built_in">format</span>(self.currentFile))</span><br><span class="line">            <span class="keyword">elif</span> (<span class="keyword">not</span> currentFileState.is_current):</span><br><span class="line">                unreal.log_warning(<span class="string">u&quot;当前文件&#123;&#125;版本与服务器版本不匹配,尝试更新...&quot;</span>.<span class="built_in">format</span>(self.currentFile))</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> self.UpdateFile():</span><br><span class="line">                    unreal.log_error(<span class="string">u&quot;当前文件&#123;&#125;无法同步, 请手动操作&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                unreal.SourceControl.check_out_file(self.currentFile, <span class="literal">True</span>)</span><br><span class="line">                self.hasFileCheckOut = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            unreal.log_warning(<span class="string">u&quot;当前文件&#123;&#125;未找到版本控制状态&quot;</span>.<span class="built_in">format</span>(self.currentFile))</span><br><span class="line">            self.hasFileCheckOut = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BaseAssetHelper</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    _assetEditorSubsystem = unreal.AssetEditorSubsystem()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetSelectedAssets</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">list</span>[unreal.Object]</span></span><br><span class="line">        <span class="keyword">return</span> unreal.EditorUtilityLibrary.get_selected_assets()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">CloseEditorForAssetPath</span>(<span class="params">cls, assetName</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>) -&gt; <span class="literal">None</span></span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            assetObject = unreal.find_asset(assetName)</span><br><span class="line">            cls._assetEditorSubsystem.close_all_editors_for_asset(assetObject)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> E:</span><br><span class="line">            unreal.log_error(<span class="string">&quot;Can not close asset: &#123;&#125;;\nErr: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(assetName, E))</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">CloseEditorForAssetObject</span>(<span class="params">cls, assetObject</span>):</span><br><span class="line">        <span class="comment"># type: (unreal.Object) -&gt; <span class="literal">None</span></span></span><br><span class="line">        cls._assetEditorSubsystem.close_all_editors_for_asset(assetObject)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MeshAssetSelectionHelper</span>(<span class="title class_ inherited__">BaseAssetHelper</span>):</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetMeshSelections</span>(<span class="params">cls</span>):</span><br><span class="line">        allSelectedAssets = cls.GetSelectedAssets()</span><br><span class="line">        validAsset = <span class="built_in">list</span>()  <span class="comment"># type: <span class="built_in">list</span>[unreal.StreamableRenderAsset]</span></span><br><span class="line">        <span class="keyword">for</span> curAsset <span class="keyword">in</span> allSelectedAssets:</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isinstance</span>(curAsset, (unreal.StaticMesh, unreal.SkeletalMesh))):</span><br><span class="line">                validAsset.append(curAsset)</span><br><span class="line">        <span class="keyword">return</span> validAsset</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MeshMaterialHelper</span> ():</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetMeshMaterials</span>(<span class="params">cls, pMesh</span>):</span><br><span class="line">        <span class="comment"># type: (unreal.StreamableRenderAsset) -&gt; unreal.Array[unreal.SkeletalMaterial] |unreal.Array[unreal.StaticMaterial] | <span class="literal">None</span></span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(pMesh, unreal.StaticMesh):</span><br><span class="line">            targetMaterials = pMesh.static_materials</span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">isinstance</span>(pMesh, unreal.SkeletalMesh):</span><br><span class="line">            targetMaterials = pMesh.materials</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> targetMaterials</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MeshAssetMaterialCopyTool</span> (<span class="title class_ inherited__">MeshMaterialHelper</span>):</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">CopyMaterialSlotA</span>(<span class="params">cls, pSource, pTarget</span>):</span><br><span class="line">        <span class="comment"># type: (unreal.StreamableRenderAsset, unreal.StreamableRenderAsset) -&gt; <span class="built_in">bool</span></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> get source material interfaces</span></span><br><span class="line">        sourceMaterials = cls.GetMeshMaterials(pSource)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> sourceMaterials:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> get target materials</span></span><br><span class="line">        targetMaterials = cls.GetMeshMaterials(pSource)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> targetMaterials:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        targetMatLength = targetMaterials.__len__()</span><br><span class="line"></span><br><span class="line">        raiseMeshTypeException: collections.<span class="type">Callable</span>[[unreal.StreamableRenderAsset],Exception] = \</span><br><span class="line">            <span class="keyword">lambda</span> inMesh: Exception(<span class="string">&quot;unsupported mesh type: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(inMesh.get_class().get_name()))</span><br><span class="line"></span><br><span class="line">        buildSrcMatMapping : collections.<span class="type">Callable</span>[[],<span class="built_in">dict</span>[unreal.Name, <span class="built_in">int</span>]] = \</span><br><span class="line">            <span class="keyword">lambda</span> : <span class="built_in">dict</span>((v,k) <span class="keyword">for</span> k, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(mat.material_slot_name <span class="keyword">for</span> mat <span class="keyword">in</span> sourceMaterials))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(pTarget, unreal.StaticMesh):</span><br><span class="line"></span><br><span class="line">            <span class="comment"># NOTE : source is static mesh</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(pSource, unreal.StaticMesh):</span><br><span class="line">                <span class="keyword">for</span> tarMatId <span class="keyword">in</span> <span class="built_in">range</span>(targetMatLength):</span><br><span class="line">                    curTarMatSlotName = targetMaterials[tarMatId].material_slot_name</span><br><span class="line">                    srcMatId = pSource.get_material_index(curTarMatSlotName)</span><br><span class="line">                    srcMatInterface = pSource.get_material(srcMatId)</span><br><span class="line">                    pTarget.set_material(tarMatId, srcMatInterface)</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> source is skeletal mesh</span></span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">isinstance</span>(pSource, unreal.SkeletalMesh):</span><br><span class="line">                <span class="comment"># <span class="doctag">NOTE:</span> build a enum dict for current source material map</span></span><br><span class="line">                srcMatMapping = buildSrcMatMapping()</span><br><span class="line">                <span class="keyword">for</span> tarMatId <span class="keyword">in</span> <span class="built_in">range</span>(targetMatLength):</span><br><span class="line">                    curTarMatSlotName = targetMaterials[tarMatId].material_slot_name</span><br><span class="line">                    srcMatId = srcMatMapping.get(curTarMatSlotName, <span class="number">0</span>)</span><br><span class="line">                    <span class="keyword">if</span> srcMatId:</span><br><span class="line">                        srcMatInterface = sourceMaterials[srcMatId].material_interface</span><br><span class="line">                        pTarget.set_material(tarMatId, srcMatInterface)</span><br><span class="line">            <span class="keyword">else</span> :</span><br><span class="line">                <span class="keyword">raise</span> raiseMeshTypeException(pSource)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">isinstance</span>(pTarget, unreal.SkeletalMesh):</span><br><span class="line">            unreal.log_warning(<span class="string">&quot;Cast material into skeletal mesh object, this method may cast fail ... &quot;</span>)</span><br><span class="line"></span><br><span class="line">            srcMatMapping = buildSrcMatMapping()</span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> use copy module to easy copy our material array</span></span><br><span class="line">            newTarMatArray = copy.copy(targetMaterials)</span><br><span class="line">            <span class="keyword">for</span> tarMatId <span class="keyword">in</span> <span class="built_in">range</span>(targetMatLength):</span><br><span class="line">                curTarMatSlotName = targetMaterials[tarMatId].material_slot_name</span><br><span class="line">                srcMatId = srcMatMapping.get(curTarMatSlotName, <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">if</span> srcMatId:</span><br><span class="line">                    srcMatInterface = sourceMaterials[srcMatId].material_interface</span><br><span class="line">                    newTarMatArray[tarMatId].material_interface = srcMatInterface</span><br><span class="line">            pTarget.materials = newTarMatArray</span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            <span class="keyword">raise</span> raiseMeshTypeException(pTarget)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">runScript</span> (*args, **kw):</span><br><span class="line">    unreal.log(<span class="string">&quot;Start to process material transforming ...&quot;</span>)</span><br><span class="line">    allMeshSelections = MeshAssetSelectionHelper.GetMeshSelections()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> allMeshSelections:</span><br><span class="line">        unreal.log_error(<span class="string">&quot;&#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;Have to select two or more mesh asset to start ...&quot;</span>))</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    srcMesh = allMeshSelections[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,allMeshSelections.__len__()):</span><br><span class="line">        currentAsset = allMeshSelections[i]</span><br><span class="line">        unreal.log_warning(<span class="string">&quot;Current Target is : &#123;&#125;&quot;</span>.<span class="built_in">format</span>(currentAsset.get_full_name()))</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            MeshAssetSelectionHelper.CloseEditorForAssetObject(currentAsset)</span><br><span class="line">            UnrealAssetSrcCtrl(currentAsset.get_path_name()).CheckOutFile()</span><br><span class="line">            MeshAssetMaterialCopyTool.CopyMaterialSlotA(srcMesh, currentAsset)</span><br><span class="line">            unreal.EditorAssetLibrary.save_loaded_asset(currentAsset)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> E:</span><br><span class="line">            unreal.log_error(<span class="string">&quot;&#123;&#125;&quot;</span>.<span class="built_in">format</span>(E))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    runScript()</span><br></pre></td></tr></table></figure><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><ul><li>20230223 修复了版本控制在Unreal5中失败的问题</li></ul><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>由于Unreal Engine 的神奇设计…</p><p>导致即使都是网格类型, 但是, 接口也非常不统一</p><p>所有在处理Skeletal Mesh类型的材质时用了一些奇怪的方法.</p><p>原则上都可以用自己的方法来统一处理. </p><p>但是总感觉那里不大对, 因此按类型去判断了</p>]]></content>
      
      
      <categories>
          
          <category> UE </category>
          
          <category> Unreal </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 引擎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python相机等效焦距转换</title>
      <link href="/2022/10/22/PythonCameraFocalDistanceConvert/"/>
      <url>/2022/10/22/PythonCameraFocalDistanceConvert/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>用于转换 相机胶片 大小变化时的 等效焦距.</p><span id="more"></span>   <hr><h1 id="Python实现代码"><a href="#Python实现代码" class="headerlink" title="Python实现代码"></a>Python实现代码</h1><p>CV大法好,  拷走就能用(</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Created by MineClever to convert camera film size</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> atan, sqrt</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MathCamFovConvert</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">    AngleToRad = <span class="number">0.017453292519943295</span></span><br><span class="line">    RadToAngle = <span class="number">57.29577951308232</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calcFovFormHeightWidth</span>(<span class="params">cls, w, h, focusDist, bRadian=<span class="literal">False</span></span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">bool</span>) -&gt; <span class="built_in">tuple</span>[<span class="built_in">float</span>,<span class="built_in">float</span>, <span class="built_in">float</span>]</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        input :w = FilmWidth(mm), h = FilmHeight(mm), focusDist(mm) = Focus Distance, bRadian -&gt; if return radian value.</span></span><br><span class="line"><span class="string">        return : tuple(HFov, VFov, DFov)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        dx = focusDist</span><br><span class="line">        cx= w /<span class="number">2</span></span><br><span class="line">        cy = h /<span class="number">2</span></span><br><span class="line">        dy = sqrt(cx*cx + cy*cy)</span><br><span class="line"></span><br><span class="line">        DFovHalf = atan(dy/dx)</span><br><span class="line">        DFov = DFovHalf * <span class="number">2</span></span><br><span class="line">        HFov = atan(cx/dx) * <span class="number">2</span></span><br><span class="line">        VFov = atan(cy/dx) * <span class="number">2</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> bRadian:</span><br><span class="line">            HFov *= cls.RadToAngle</span><br><span class="line">            VFov *= cls.RadToAngle</span><br><span class="line">            DFov *= cls.RadToAngle</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (HFov, VFov, DFov)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calcFocusDistSameLook</span> (cls, oriW, oriH, tarW, tarH, oriFocusDist, bLockHFov=<span class="literal">True</span>, bRadian= <span class="literal">False</span>):</span><br><span class="line">        <span class="comment"># type:(<span class="built_in">float</span> ,<span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">bool</span>, <span class="built_in">bool</span>)-&gt;<span class="built_in">tuple</span>[<span class="built_in">float</span>, <span class="built_in">float</span>, <span class="built_in">float</span>]</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        calcFocusDistSameLook calculate a new HFov, VFov, Focus Distance</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Arguments:</span></span><br><span class="line"><span class="string">            oriW -- origin width of film back size ;</span></span><br><span class="line"><span class="string">            oriH -- origin height of film back size ;</span></span><br><span class="line"><span class="string">            tarW -- target new width of film back size ;</span></span><br><span class="line"><span class="string">            tarH -- target new height of film back size;</span></span><br><span class="line"><span class="string">            oriFocusDist -- origin focal distance to film back ;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Keyword Arguments:</span></span><br><span class="line"><span class="string">            bLockHFov -- use origin HFov as reference (default: &#123;True&#125;)</span></span><br><span class="line"><span class="string">            bRadian -- return value as radian one (default: &#123;False&#125;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            return new HFov, new VHFov , new focal distance to film back as a tuple</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        oriDx = oriFocusDist</span><br><span class="line">        oriCx = oriW / <span class="number">2</span></span><br><span class="line">        oriCy = oriH / <span class="number">2</span></span><br><span class="line">        <span class="comment"># oriDy = sqrt(oriCx * oriCx + oriCy * oriCy)</span></span><br><span class="line"></span><br><span class="line">        oriHFovHalf = atan(oriCx / oriDx) <span class="comment"># 1/2 HFov</span></span><br><span class="line">        oriVFovHalf = atan(oriCy / oriDx) <span class="comment"># 1/2 VFov</span></span><br><span class="line"></span><br><span class="line">        newCx = tarW / <span class="number">2</span></span><br><span class="line">        newCy = tarH / <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> We should keep one fov sticked at least</span></span><br><span class="line">        <span class="keyword">if</span> bLockHFov : <span class="comment"># <span class="doctag">NOTE:</span> change cy only</span></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span>  newCx / tan(HFov/2[angle]) -&gt; new focus distance</span></span><br><span class="line">            newDx = newCx / (oriCx / oriDx)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Generate new VFov</span></span><br><span class="line">            newVFovHalf = atan(newCy / newDx) <span class="comment"># type: <span class="built_in">float</span></span></span><br><span class="line">            newVFov = newVFovHalf * <span class="number">2</span></span><br><span class="line">            newHFov = oriHFovHalf * <span class="number">2</span></span><br><span class="line">        <span class="keyword">else</span>: <span class="comment"># <span class="doctag">NOTE:</span> change cx only</span></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span>  newCy / tan(VFov/2[angle]) -&gt; new focus distance</span></span><br><span class="line">            newDx = newCy / (oriCy / oriDx)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Generate new HFov</span></span><br><span class="line">            newHFovHalf = atan(newCx / newDx)  <span class="comment"># type: <span class="built_in">float</span></span></span><br><span class="line">            newHFov = newHFovHalf * <span class="number">2</span></span><br><span class="line">            newVFov = oriVFovHalf * <span class="number">2</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># NOTE : convert to angle</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> bRadian:</span><br><span class="line">            newHFov *= cls.RadToAngle</span><br><span class="line">            newVFov *= cls.RadToAngle</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (newHFov, newVFov, newDx)</span><br></pre></td></tr></table></figure><h1 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h1><p><img data-src="/../img/PythonCameraFocalDistanceConvert/img_01.png" alt="Img_01"></p><p><img data-src="/../img/PythonCameraFocalDistanceConvert/img_02.png" alt="IMG_02"></p><p><img data-src="/../img/PythonCameraFocalDistanceConvert/img_03.png" alt="Convert"></p>]]></content>
      
      
      <categories>
          
          <category> 水 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Python加载Unreal蓝图</title>
      <link href="/2022/10/16/LoadUnrealBpByPython/"/>
      <url>/2022/10/16/LoadUnrealBpByPython/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>用Python加载Unreal蓝图</p><span id="more"></span>   <h1 id="python实现"><a href="#python实现" class="headerlink" title="python实现"></a>python实现</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bp_class_object_path = <span class="string">&#x27;&#123;&#125;_C&#x27;</span>.<span class="built_in">format</span>(asset.object_path)</span><br><span class="line"><span class="comment">#this is the slow bit as it has to load the object</span></span><br><span class="line">bp_gen_object = unreal.load_asset(bp_class_object_path) </span><br><span class="line">blueprint_class_default = unreal.get_default_object(bp_gen_object)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 水 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 破事水 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unreal 获取关联资产名单代码片段</title>
      <link href="/2022/08/28/UnrealPyAssetReferencers/"/>
      <url>/2022/08/28/UnrealPyAssetReferencers/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>有时候从UE中找到所有关联资产非常不方便.</p><p>搞来搞去很麻烦. 找了个时间搞了个py脚本专门输出一个资产关联列表.</p><p>人生苦短, CV大法好.</p><span id="more"></span>   <h1 id="Python-代码片段"><a href="#Python-代码片段" class="headerlink" title="Python 代码片段"></a>Python 代码片段</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># python=3.8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Script to find Unreal Project assets easily</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># How to Use ? Take a selection in AssetContentBrowser then run script with console.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> unreal <span class="keyword">as</span> unreal; ue = unreal</span><br><span class="line"><span class="keyword">import</span> subprocess <span class="keyword">as</span> subprocess</span><br><span class="line"><span class="keyword">import</span> os <span class="keyword">as</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Typing hint</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">import</span> typing</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> E:</span><br><span class="line">    <span class="built_in">print</span>(E)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">DoWinCopy</span>(<span class="params">inCopy:<span class="built_in">str</span></span>) :</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Copy to windows clipboard&quot;&quot;&quot;</span></span><br><span class="line">    subprocess.run([<span class="string">&#x27;clip.exe&#x27;</span>], <span class="built_in">input</span>=<span class="built_in">str</span>(inCopy).strip().encode(<span class="string">&#x27;utf-16&#x27;</span>), check=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SelectionHelper</span> (<span class="title class_ inherited__">object</span>) :</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Help to get current Selection @ World and @ Content&quot;&quot;&quot;</span></span><br><span class="line">    __projectContentPath = unreal.Paths.project_content_dir()</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetSelectedAssets</span> (cls) :</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">list</span>[ue.Object]</span></span><br><span class="line">        <span class="keyword">return</span> unreal.EditorUtilityLibrary.get_selected_assets()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetSelectedActors</span> (cls) :</span><br><span class="line">        <span class="comment"># type: (...) -&gt; <span class="built_in">list</span>[ue.Actor]</span></span><br><span class="line">        <span class="keyword">return</span> unreal.EditorLevelLibrary.get_selected_level_actors()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetFullPathByObject</span> (cls, inUObject: ue.Object) -&gt; <span class="built_in">str</span> :</span><br><span class="line">        <span class="keyword">return</span> unreal.SystemLibrary.get_path_name(inUObject)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ConvertPackagePathToFilePath</span> (cls, inPackagePath: <span class="built_in">str</span>) -&gt; <span class="built_in">str</span> :</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Convert &#x27;/Game/StarterContent/SomeName&#x27; to &#x27;Drive:/Project/Content/StarterContent/SomeName&#x27;&quot;&quot;&quot;</span></span><br><span class="line">        fileSysPath = os.path.join(cls.__projectContentPath,inPackagePath.replace(<span class="string">&quot;/Game/&quot;</span>,<span class="string">&quot;&quot;</span>))</span><br><span class="line">        <span class="keyword">return</span> fileSysPath</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ConvertFilePathToPackagePath</span> (cls, inFilePath: <span class="built_in">str</span>) -&gt; <span class="built_in">str</span> :</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Convert &#x27;Drive:/Project/Content/StarterContent/SomeName(.uasset)&#x27; to &#x27;/Game/StarterContent/SomeName&#x27;&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> inFilePath.replace(<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;/&quot;</span>).replace(<span class="string">&quot;.uasset&quot;</span>,<span class="string">&quot;&quot;</span>).replace(cls.__projectContentPath,<span class="string">&quot;/Game/&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ReferenceHelper</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">    __assetRegistryInstance: ue.AssetRegistry = unreal.AssetRegistryHelpers.get_asset_registry()</span><br><span class="line">    </span><br><span class="line">    __referenceOptions = unreal.AssetRegistryDependencyOptions()</span><br><span class="line">    __referenceOptions.include_hard_management_references = <span class="literal">True</span></span><br><span class="line">    __referenceOptions.include_hard_package_references = <span class="literal">True</span></span><br><span class="line">    __referenceOptions.include_soft_management_references = <span class="literal">True</span></span><br><span class="line">    __referenceOptions.include_soft_package_references = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetReferencersPathByPackagePath</span> (cls, inPackagePath: <span class="built_in">str</span>) :</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Ref to https://docs.unrealengine.com/4.27/en-US/PythonAPI/class/AssetRegistry.html&quot;&quot;&quot;</span></span><br><span class="line">        allReferencersPackage : <span class="built_in">list</span>[<span class="built_in">str</span>] = cls.__assetRegistryInstance.get_referencers(inPackagePath,cls.__referenceOptions)</span><br><span class="line">        <span class="keyword">return</span> allReferencersPackage</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetDependenciesPathByPackagePath</span> (cls, inPackagePath: <span class="built_in">str</span>) :</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Ref to https://docs.unrealengine.com/4.27/en-US/PythonAPI/class/AssetRegistry.html&quot;&quot;&quot;</span></span><br><span class="line">        allDependenciesPackage : <span class="built_in">list</span>[<span class="built_in">str</span>] = cls.__assetRegistryInstance.get_dependencies(inPackagePath,cls.__referenceOptions)</span><br><span class="line">        <span class="keyword">return</span> allDependenciesPackage</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetAllReferencersPathFromSelectedAssets</span> (cls) :</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Get all referenced assets path with current selection in AssetContent&quot;&quot;&quot;</span></span><br><span class="line">        assets = SelectionHelper.GetSelectedAssets()</span><br><span class="line">        assetPaths: <span class="built_in">set</span>[<span class="built_in">str</span>] = <span class="built_in">set</span>()</span><br><span class="line">        <span class="keyword">for</span> asset <span class="keyword">in</span> assets:</span><br><span class="line">            path = unreal.Paths.get_base_filename(asset.get_path_name(),remove_path=<span class="literal">False</span>)</span><br><span class="line">            assetPaths.add(path)</span><br><span class="line">            referencedPaths: <span class="built_in">list</span>[<span class="built_in">str</span>] = unreal.EditorAssetLibrary.find_package_referencers_for_asset(path)</span><br><span class="line">            assetPaths.update(referencedPaths)</span><br><span class="line">        <span class="keyword">return</span> assetPaths</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetAllDependenciesPath</span> (cls, assetArray , bDeep=<span class="literal">False</span>, maxDeep = <span class="number">10</span>) :</span><br><span class="line">        <span class="comment"># type: (typing.Iterable[ue.Object], <span class="built_in">bool</span> , <span class="built_in">int</span>) -&gt; <span class="built_in">set</span>[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Get all referenced assets path with input array of assets object&quot;&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> set is more fast than list !</span></span><br><span class="line">        assetsPath: <span class="built_in">set</span>[<span class="built_in">str</span>] = <span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line">        MakeValidPath: typing.<span class="type">Callable</span>[[<span class="built_in">list</span>[<span class="built_in">str</span>]], typing.Iterable[<span class="built_in">str</span>]] = \</span><br><span class="line">            <span class="keyword">lambda</span> inPaths : \</span><br><span class="line">                (<span class="built_in">str</span>(name) <span class="keyword">if</span> <span class="keyword">not</span> (<span class="built_in">str</span>(name).startswith(<span class="string">&quot;/Script/&quot;</span>) <span class="keyword">or</span> <span class="built_in">str</span>(name).startswith(<span class="string">&quot;/Engine/&quot;</span>)) <span class="keyword">else</span> <span class="literal">None</span> \</span><br><span class="line">                    <span class="keyword">for</span> name <span class="keyword">in</span> inPaths)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">DeepLoop</span> (inAssets: <span class="built_in">str</span>, deepCount=<span class="number">0</span>):</span><br><span class="line">            <span class="string">&quot;&quot;&quot;recursion to find all paths&quot;&quot;&quot;</span></span><br><span class="line">            <span class="keyword">if</span> deepCount &gt; maxDeep: <span class="keyword">return</span></span><br><span class="line">            deepCount+=<span class="number">1</span></span><br><span class="line">            insideAssetsPath:<span class="built_in">set</span>[<span class="built_in">str</span>] = <span class="built_in">set</span>()</span><br><span class="line">            insideDependenciesPath: <span class="built_in">list</span>[<span class="built_in">str</span>] = cls.GetDependenciesPathByPackagePath(inAssets)</span><br><span class="line">            insideAssetsPath.update(MakeValidPath (insideDependenciesPath))</span><br><span class="line">            insideAssetsPath.add(inAssets)</span><br><span class="line">            insideAssetsPath.discard(<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> Find Path not in assetsPath</span></span><br><span class="line">            <span class="keyword">for</span> diffAssetsPath <span class="keyword">in</span> insideAssetsPath:</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> diffAssetsPath <span class="keyword">in</span> assetsPath:</span><br><span class="line">                    assetsPath.add(diffAssetsPath)</span><br><span class="line">                    DeepLoop(diffAssetsPath,deepCount)</span><br><span class="line">            assetsPath.update(insideAssetsPath)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> asset <span class="keyword">in</span> assetArray:</span><br><span class="line">            path = unreal.Paths.get_base_filename(asset.get_path_name(),remove_path=<span class="literal">False</span>)</span><br><span class="line">            DependenciesPath: <span class="built_in">list</span>[<span class="built_in">str</span>] = cls.GetDependenciesPathByPackagePath(path)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(DependenciesPath, <span class="built_in">type</span>(<span class="literal">None</span>)):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="comment"># <span class="doctag">NOTE:</span> remove all script path</span></span><br><span class="line">            assetsPath.update(MakeValidPath(DependenciesPath))</span><br><span class="line">            assetsPath.add(path)</span><br><span class="line">            assetsPath.discard(<span class="literal">None</span>)</span><br><span class="line">            <span class="keyword">if</span> bDeep:</span><br><span class="line">                <span class="keyword">for</span> subAsset <span class="keyword">in</span> assetsPath.copy():</span><br><span class="line">                    DeepLoop(subAsset)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> assetsPath</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetAllDependenciesPathFromSelectedAssets</span> (cls, bDeep=<span class="literal">False</span>, maxDeep = <span class="number">10</span>) :</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Get all referenced assets path with current selection in AssetContent&quot;&quot;&quot;</span></span><br><span class="line">        assets = SelectionHelper.GetSelectedAssets()</span><br><span class="line">        <span class="keyword">return</span> cls.GetAllDependenciesPath(assets, bDeep, maxDeep)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetAllDependenciesPathFromSelectedMeshActors</span> (cls, bDeep=<span class="literal">False</span>, maxDeep = <span class="number">10</span>) :</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Get all referenced assets path with current selection in AssetContent&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        assets: <span class="built_in">set</span>[ue.Object] = <span class="built_in">set</span>()</span><br><span class="line">        allActors = SelectionHelper.GetSelectedActors()</span><br><span class="line">        <span class="keyword">for</span> actor <span class="keyword">in</span> allActors:</span><br><span class="line">            staticMeshComponents: <span class="built_in">list</span>[ue.StaticMeshComponent] = actor.get_components_by_class(ue.StaticMeshComponent)</span><br><span class="line">            skeletalMeshComponents: <span class="built_in">list</span>[ue.SkeletalMeshComponent]  = actor.get_components_by_class(ue.SkeletalMeshComponent)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(staticMeshComponents) &gt; <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">for</span> comp <span class="keyword">in</span> staticMeshComponents:</span><br><span class="line">                    assets.add(comp.static_mesh)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(skeletalMeshComponents) &gt;<span class="number">0</span> :</span><br><span class="line">                <span class="keyword">for</span> comp <span class="keyword">in</span> skeletalMeshComponents:</span><br><span class="line">                    assets.add(comp.skeletal_mesh)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> cls.GetAllDependenciesPath(assets, bDeep, maxDeep)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">RunScript</span>(<span class="params">bViewActor=<span class="literal">True</span>,bDoCopy=<span class="literal">True</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Choose from current ViewportActors or Assets in ContentBrowser&quot;&quot;&quot;</span></span><br><span class="line">    method = ReferenceHelper.GetAllDependenciesPathFromSelectedMeshActors \</span><br><span class="line">        <span class="keyword">if</span> bViewActor <span class="keyword">else</span> ReferenceHelper.GetAllDependenciesPathFromSelectedAssets</span><br><span class="line">    result = <span class="built_in">list</span>(method(bDeep=<span class="literal">True</span>,maxDeep=<span class="number">10</span>));result.sort()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># <span class="doctag">NOTE:</span> Make ContentBrowser sync with current result list </span></span><br><span class="line">    unreal.EditorAssetLibrary.sync_browser_to_objects(result)</span><br><span class="line">    <span class="comment"># for strName in result : print(strName)</span></span><br><span class="line">    <span class="keyword">if</span> bDoCopy: DoWinCopy(result)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    RunScript(bViewActor=<span class="literal">True</span>,bDoCopy=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 水 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> unreal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>找文件用的Python代码片段</title>
      <link href="/2022/08/20/PyCodeToTraversePaths/"/>
      <url>/2022/08/20/PyCodeToTraversePaths/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>python 很方便</p><p>但是用的时候还是要有手.</p><p>索性弄个片段, 可以只用脚 去找文件了</p><span id="more"></span>   <h1 id="代码片段"><a href="#代码片段" class="headerlink" title="代码片段"></a>代码片段</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># python=2.7</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os <span class="keyword">as</span> os</span><br><span class="line"><span class="keyword">import</span> re <span class="keyword">as</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># <span class="doctag">NOTE:</span> 仅用于类型注释</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">import</span> typing <span class="keyword">as</span> typing</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FilePathProcessor</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="string">u&quot;&quot;&quot;用于处理文件的类&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">CheckIfDirExist</span> (cls, dirPath):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>)-&gt;<span class="literal">None</span></span></span><br><span class="line">        <span class="string">u&quot;&quot;&quot;判断文件夹是否存在, 否则抛出异常&quot;&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(dirPath):</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">u&quot;不存在文件夹, 或不是文件夹 : &#123;&#125;&quot;</span>.<span class="built_in">format</span>(dirPath))</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetAllFileWithExt</span> (cls, dirPath, extFormat, bSingleDir=<span class="literal">True</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>, <span class="built_in">str</span>, <span class="built_in">bool</span>) -&gt; typing.Iterable[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="string">u&quot;&quot;&quot;遍历文件夹以寻找特定格式的文件&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> 判断文件夹是否存在, 否则抛出异常</span></span><br><span class="line">        cls.CheckIfDirExist (dirPath)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> 小写后缀扩展格式</span></span><br><span class="line">        lowerExtFormat = extFormat.lower()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># <span class="doctag">NOTE:</span> 返回一个 路径生成器</span></span><br><span class="line">        <span class="keyword">if</span> bSingleDir: <span class="comment"># NOTE 单层模式</span></span><br><span class="line">            <span class="keyword">for</span> fileName <span class="keyword">in</span> os.listdir(dirPath):</span><br><span class="line">                tempFilePath = os.path.join(dirPath,fileName)</span><br><span class="line">                <span class="comment"># <span class="doctag">NOTE:</span> 非目录 &amp;&amp; 以extFormat结尾</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">not</span> os.path.isdir(tempFilePath)) <span class="keyword">and</span> (fileName.lower().endswith(lowerExtFormat)):</span><br><span class="line">                    <span class="keyword">yield</span> tempFilePath</span><br><span class="line">        <span class="keyword">else</span> : <span class="comment"># NOTE 遍历所有子目录</span></span><br><span class="line">            <span class="keyword">for</span> dirPath,dirNames,fileNames <span class="keyword">in</span> os.walk(dirPath):</span><br><span class="line">                <span class="keyword">for</span> fileName <span class="keyword">in</span> fileNames:</span><br><span class="line">                    <span class="comment"># <span class="doctag">NOTE:</span> 以extFormat结尾</span></span><br><span class="line">                    <span class="keyword">if</span> fileName.lower().endswith(lowerExtFormat):</span><br><span class="line">                        <span class="keyword">yield</span> os.path.join(dirPath, fileName)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GetAllFileRegexWithExt</span> (cls, dirPath, extFormat, bSingleDir=<span class="literal">True</span>, bUseRegex=<span class="literal">False</span>, regexRule=<span class="string">&quot;&quot;</span>):</span><br><span class="line">        <span class="comment"># type: (<span class="built_in">str</span>, <span class="built_in">str</span>, <span class="built_in">bool</span>, <span class="built_in">bool</span>, <span class="built_in">str</span>) -&gt; typing.Iterable[<span class="built_in">str</span>]</span></span><br><span class="line">        <span class="string">u&quot;&quot;&quot;遍历文件夹以寻找特定格式的文件, 且可选是否包含特定的Regex&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        pathGenerator = cls.GetAllFileWithExt(dirPath,extFormat,bSingleDir)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> bUseRegex: <span class="comment"># NOTE 不使用正则表达式</span></span><br><span class="line">            <span class="keyword">for</span> filePath <span class="keyword">in</span> pathGenerator:</span><br><span class="line">                <span class="keyword">yield</span> filePath</span><br><span class="line">        <span class="keyword">else</span> : <span class="comment"># NOTE 使用正则表达式</span></span><br><span class="line">            regexMatchRule = re.<span class="built_in">compile</span>(regexRule,re.I)</span><br><span class="line">            <span class="keyword">for</span> filePath <span class="keyword">in</span> pathGenerator:</span><br><span class="line">                regexMatched = regexMatchRule.search(os.path.basename(filePath))</span><br><span class="line">                <span class="keyword">if</span> regexMatched != <span class="literal">None</span> :</span><br><span class="line">                    <span class="keyword">yield</span> filePath</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># <span class="doctag">NOTE:</span> Easy CV!</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    targetDirPath = os.environ[<span class="string">&quot;userprofile&quot;</span>]</span><br><span class="line">    targetExtFormat = <span class="string">&quot;.fbx&quot;</span></span><br><span class="line">    bUseSingleDir = <span class="literal">False</span></span><br><span class="line">    bUseRegex = <span class="literal">True</span></span><br><span class="line">    regexRule = <span class="string">r&quot;^anim.*?&quot;</span></span><br><span class="line">    filePathGenerator = FilePathProcessor.GetAllFileRegexWithExt(</span><br><span class="line">                        targetDirPath,</span><br><span class="line">                        targetExtFormat,</span><br><span class="line">                        bUseSingleDir,</span><br><span class="line">                        bUseRegex,</span><br><span class="line">                        regexRule)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> filePath <span class="keyword">in</span> filePathGenerator :</span><br><span class="line">        <span class="built_in">print</span>(filePath)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 破事水 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>切线空间和对象空间的转换</title>
      <link href="/2022/07/07/TangetSwapObjectSpaceShader/"/>
      <url>/2022/07/07/TangetSwapObjectSpaceShader/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>因为一时找不到工具用来转换模型的切线空间和对象空间.</p><p>整了一个Substance Painter 可以方便直接处理.</p><span id="more"></span>   <hr><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>由于Substance的引擎可以直接读取TBN信息.</p><p>通过构建TBN矩阵的转置与否,直接转换. </p><p>相当简单.</p><p>存储成 <strong>.glsl</strong> 后缀格式,直接拖进Substance Painter</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">This Shader was made for Substance Painter</span></span><br><span class="line"><span class="comment">help converting Tangent Space into Obeject/World Space</span></span><br><span class="line"><span class="comment">or converting ObjectSpace to Tangent Space</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#define BLACK_COLOR vec4(0.0f,0.0f,0.0f,1.0f)</span></span><br><span class="line"><span class="meta">#define WHITE_COLOR vec4(1.0f,1.0f,1.0f,1.0f)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import lib-utils.glsl</span><br><span class="line">import lib-env.glsl</span><br><span class="line">import lib-normal.glsl</span><br><span class="line">import lib-alpha.glsl</span><br><span class="line">import lib-vectors.glsl</span><br><span class="line">import lib-sparse.glsl</span><br><span class="line">import lib-sampler.glsl</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//--------texure Sampler ---------------------------------------------------//</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//: param auto channel_user0</span></span><br><span class="line"><span class="keyword">uniform</span> SamplerSparse InputSpaceTexSampler;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//-------- About ----------------------------------------------------//</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: true, &quot;label&quot;: &quot;MineClever&#x27;s Space Converter&quot;, &quot;group&quot;: &quot;About&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> tAuthor;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: true, &quot;label&quot;: &quot;Version 0.0.3&quot;, &quot;group&quot;: &quot;About&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> tAuthor_version;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//-------- Space ----------------------------------------------------//</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;Tangent Space&quot;, &quot;group&quot;: &quot;Convert Space&quot; &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bSwapSpace;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123;</span></span><br><span class="line"><span class="comment">//:   &quot;default&quot;: 0,</span></span><br><span class="line"><span class="comment">//:   &quot;label&quot;: &quot;Remap Input XYZ&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;widget&quot;: &quot;combobox&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;group&quot;: &quot;Convert Space&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;values&quot;: &#123;</span></span><br><span class="line"><span class="comment">//:     &quot;XYZ&quot;: 0,</span></span><br><span class="line"><span class="comment">//:     &quot;XZY&quot;: 1,</span></span><br><span class="line"><span class="comment">//:     &quot;YXZ&quot;: 2,</span></span><br><span class="line"><span class="comment">//:     &quot;YZX&quot;: 3,</span></span><br><span class="line"><span class="comment">//:     &quot;ZXY&quot;: 4,</span></span><br><span class="line"><span class="comment">//:     &quot;ZYX&quot;: 5</span></span><br><span class="line"><span class="comment">//:   &#125;</span></span><br><span class="line"><span class="comment">//: &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">int</span> XYZOrderType;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;-X&quot;, &quot;group&quot;: &quot;Convert Space&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> Xnegative;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;-Y&quot;, &quot;group&quot;: &quot;Convert Space&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> Ynegative;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;-Z&quot;, &quot;group&quot;: &quot;Convert Space&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> Znegative;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//-------- Tools ----------------------------------------------------//</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: true, &quot;label&quot;: &quot;unsigned Input Image&quot;, &quot;group&quot;: &quot;Input&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bPacked;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: true, &quot;label&quot;: &quot;Compute Binormal Direction&quot;, &quot;group&quot;: &quot;Input&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bInputTBN;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;Decode Input Gamma&quot;, &quot;group&quot;: &quot;Input&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bInputGamma;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123;</span></span><br><span class="line"><span class="comment">//:   &quot;default&quot;: 0,</span></span><br><span class="line"><span class="comment">//:   &quot;label&quot;: &quot;Input Gamma Type&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;widget&quot;: &quot;combobox&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;group&quot;: &quot;Input&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;values&quot;: &#123;</span></span><br><span class="line"><span class="comment">//:     &quot;sRGB&quot;: 0,</span></span><br><span class="line"><span class="comment">//:     &quot;Gamma 2.2 (Tga)&quot;: 1</span></span><br><span class="line"><span class="comment">//:   &#125;</span></span><br><span class="line"><span class="comment">//: &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">int</span> EnumGammaType;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;Flip Y&quot;, &quot;group&quot;: &quot;Output&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bFlipY;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;Use Output Gamma&quot;, &quot;group&quot;: &quot;Output&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bOutputGamma;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123;</span></span><br><span class="line"><span class="comment">//:   &quot;default&quot;: 0,</span></span><br><span class="line"><span class="comment">//:   &quot;label&quot;: &quot;Output Gamma Type&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;widget&quot;: &quot;combobox&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;group&quot;: &quot;Output&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;values&quot;: &#123;</span></span><br><span class="line"><span class="comment">//:     &quot;sRGB&quot;: 0,</span></span><br><span class="line"><span class="comment">//:     &quot;Gamma 2.2 (Tga)&quot;: 1</span></span><br><span class="line"><span class="comment">//:   &#125;</span></span><br><span class="line"><span class="comment">//: &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">int</span> EnumOutputGamma;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;Use Signed Float(Exr Only)&quot;, &quot;group&quot;: &quot;Output&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bOutputSigned;</span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123; &quot;default&quot;: false, &quot;label&quot;: &quot;Normalize Output&quot;, &quot;group&quot;: &quot;Output&quot; &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> bOutputNormalized;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//-------- Debug ----------------------------------------------------//</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//: param custom &#123;</span></span><br><span class="line"><span class="comment">//:   &quot;default&quot;: 0,</span></span><br><span class="line"><span class="comment">//:   &quot;label&quot;: &quot;Viewport&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;widget&quot;: &quot;combobox&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;group&quot;: &quot;Debug&quot;,</span></span><br><span class="line"><span class="comment">//:   &quot;values&quot;: &#123;</span></span><br><span class="line"><span class="comment">//:     &quot;Output Map&quot;: 0,</span></span><br><span class="line"><span class="comment">//:     &quot;Input Map&quot;: 1</span></span><br><span class="line"><span class="comment">//:   &#125;</span></span><br><span class="line"><span class="comment">//: &#125;</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">int</span> EnumDebugView;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">// HLSL function help to port/cast</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> saturate(<span class="type">float</span> v)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">clamp</span>(v, <span class="number">0.0</span>, <span class="number">1.0</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">vec2</span> saturate(<span class="type">vec2</span> v)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">clamp</span>(v, <span class="number">0.0</span>, <span class="number">1.0</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">vec3</span> saturate(<span class="type">vec3</span> v)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">clamp</span>(v, <span class="number">0.0</span>, <span class="number">1.0</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">vec4</span> saturate(<span class="type">vec4</span> v)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">clamp</span>(v, <span class="number">0.0</span>, <span class="number">1.0</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//custom Substance engine function</span></span><br><span class="line"><span class="type">float</span> sampleWithDefault(SamplerSparse sampler, SparseCoord coord, <span class="type">float</span> defaultValue)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">vec2</span> value = textureSparse(sampler, coord).rg;</span><br><span class="line"><span class="keyword">return</span> value.r + defaultValue * (<span class="number">1.0</span> - value.g);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">vec3</span> sampleWithColor(SamplerSparse sampler, SparseCoord coord,<span class="type">vec3</span> defaultColor)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">vec4</span> Color = textureSparse(sampler, coord).rgba;</span><br><span class="line">    Color.rgb = <span class="built_in">mix</span>(defaultColor.rgb, Color.rgb, Color.a);</span><br><span class="line"><span class="keyword">return</span> Color.rgb;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* build TNB Matrix InputValue pixel shader*/</span></span><br><span class="line"><span class="type">mat3</span> buildTBN (<span class="type">vec3</span> T, <span class="type">vec3</span> B, <span class="type">vec3</span> N)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">mat3</span> (T,B,N);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* easily switching the range between [0,1] and [-1,1]*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">vec3</span> unpackNormalMap (<span class="type">vec3</span> InputValue)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">vec3</span> OUT;</span><br><span class="line">    <span class="comment">//OUT = (InputValue - 0.5f) * 2.0f;</span></span><br><span class="line">    OUT = <span class="number">2</span> * InputValue - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> OUT;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">vec4</span> unpackNormalMap (<span class="type">vec4</span> InputValue)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">vec4</span> OUT;</span><br><span class="line">    OUT.xyz = unpackNormalMap(InputValue.xyz);</span><br><span class="line">    OUT.w = InputValue.w;</span><br><span class="line">    <span class="keyword">return</span> OUT;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">vec3</span> packNormalMap (<span class="type">vec3</span> InputValue)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">vec3</span> OUT;</span><br><span class="line">    <span class="comment">//OUT = ( InputValue + 1.0f ) * 0.5f;</span></span><br><span class="line">    OUT = <span class="number">0.5</span> * InputValue + <span class="number">0.5</span>;</span><br><span class="line">    <span class="keyword">return</span> OUT;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> rcp (<span class="type">float</span> InputValue)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1.0</span>f/InputValue;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Gamma Function designed for user*/</span></span><br><span class="line"><span class="type">vec3</span> deGamma (<span class="type">vec3</span> InputValue, <span class="type">int</span> gammaType = <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    OUT = (gammaType == <span class="number">0</span>) ? linear2sRGB(InputValue) : <span class="built_in">pow</span>(InputValue,<span class="type">vec3</span>(rcp(<span class="number">2.2</span>)));</span><br><span class="line">    <span class="keyword">return</span> OUT;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">vec3</span> enGamma (<span class="type">vec3</span> InputValue, <span class="type">int</span> gammaType = <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    OUT = (gammaType == <span class="number">0</span>) ? sRGB2linear(InputValue) : <span class="built_in">pow</span>(InputValue,<span class="type">vec3</span>(<span class="number">2.2</span>));</span><br><span class="line">    <span class="keyword">return</span> OUT;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* This function was desigined to make swizzle xyz by user */</span></span><br><span class="line"><span class="type">vec3</span> remapXYZorder (<span class="type">vec3</span> InputValue, <span class="type">int</span> orderType)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">vec3</span> OUT;</span><br><span class="line">    <span class="keyword">switch</span>(orderType)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span> :</span><br><span class="line">            OUT.xyz = InputValue.xzy;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span> :</span><br><span class="line">            OUT.xyz = InputValue.yxz;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span> :</span><br><span class="line">            OUT.xyz = InputValue.yzx;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span> :</span><br><span class="line">            OUT.xyz = InputValue.zxy;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span> :</span><br><span class="line">            OUT.xyz = InputValue.zyx;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            OUT.xyz = InputValue.xyz;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> OUT;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* fragmentShader Here (surface shader) */</span></span><br><span class="line"><span class="type">void</span> shade(V2F inputs) &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="type">vec3</span> T,B,N;</span><br><span class="line">    <span class="comment">/* use engine function to get correct TBN */</span></span><br><span class="line">    <span class="comment">//LocalVectors vectors = computeLocalFrame(inputs);</span></span><br><span class="line">    <span class="comment">// N = vectors.normal;</span></span><br><span class="line">    <span class="comment">// B = vectors.bitangent;</span></span><br><span class="line">    <span class="comment">// T = vectors.tangent;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Compute by ourself */</span></span><br><span class="line">    N = <span class="built_in">normalize</span>(inputs.normal);</span><br><span class="line">    T = <span class="built_in">normalize</span>(inputs.tangent);</span><br><span class="line">    B = <span class="built_in">cross</span>(N,T);</span><br><span class="line">    <span class="type">float</span> binormalDirection = (<span class="built_in">dot</span>(B, inputs.bitangent) &lt; <span class="number">0.0</span>) &amp;&amp; (bInputTBN) ? <span class="number">-1</span> : <span class="number">1</span>;</span><br><span class="line">    B *= binormalDirection;</span><br><span class="line"></span><br><span class="line">    <span class="type">mat3</span> TBN = buildTBN(T, B, N);</span><br><span class="line"></span><br><span class="line">    TBN = bSwapSpace ? <span class="built_in">transpose</span>(TBN) : TBN;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* mapping [0,1] to [-1,1]*/</span></span><br><span class="line">    <span class="type">vec3</span> XYZnegative = <span class="number">1</span> - <span class="type">vec3</span>(Xnegative, Ynegative , Znegative) * <span class="number">2</span> ;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">/* sample input map with filpper */</span></span><br><span class="line">    <span class="type">vec3</span> originInputSpaceColor;</span><br><span class="line">    originInputSpaceColor = sampleWithColor(InputSpaceTexSampler, inputs.sparse_coord, N);</span><br><span class="line"></span><br><span class="line">    originInputSpaceColor = bPacked ? unpackNormalMap(originInputSpaceColor) : originInputSpaceColor;</span><br><span class="line"></span><br><span class="line">    originInputSpaceColor = remapXYZorder(originInputSpaceColor,XYZOrderType) * XYZnegative;</span><br><span class="line">    <span class="type">vec3</span> inputSpaceColor = originInputSpaceColor;</span><br><span class="line">    </span><br><span class="line">    inputSpaceColor = bInputGamma ? deGamma(inputSpaceColor, EnumGammaType) : inputSpaceColor;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* converting Space by TBN Matrix */</span></span><br><span class="line">    <span class="type">vec3</span> outputSpaceColor = inputSpaceColor.rgb * TBN;</span><br><span class="line"></span><br><span class="line">    outputSpaceColor = bOutputNormalized ? <span class="built_in">normalize</span>(outputSpaceColor) : outputSpaceColor;</span><br><span class="line"></span><br><span class="line">    outputSpaceColor.y = bFlipY ? -outputSpaceColor.y : outputSpaceColor.y;</span><br><span class="line"></span><br><span class="line">    outputSpaceColor = bOutputSigned ? outputSpaceColor : packNormalMap( outputSpaceColor );</span><br><span class="line"></span><br><span class="line">    outputSpaceColor = bOutputGamma ? enGamma(outputSpaceColor, EnumOutputGamma) : outputSpaceColor;</span><br><span class="line"></span><br><span class="line">    outputSpaceColor = <span class="built_in">mix</span>(outputSpaceColor,inputSpaceColor,EnumDebugView * <span class="number">1.0</span>);</span><br><span class="line"></span><br><span class="line">    diffuseShadingOutput(outputSpaceColor.rgb);<span class="comment">//sv_target::COLOR</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 水 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 破事水 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>矩阵变换</title>
      <link href="/2022/07/03/MatrixTrans/"/>
      <url>/2022/07/03/MatrixTrans/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>一些矩阵处理的常用规则</p><span id="more"></span>  <h1 id="理解左乘和右乘"><a href="#理解左乘和右乘" class="headerlink" title="理解左乘和右乘"></a>理解左乘和右乘</h1><p>当三维坐标点发生旋转时，如果采用矩阵运算就会需要考虑“左乘”和“右乘”。</p><p>若绕静坐标系（世界坐标系）旋转，则左乘，也是变换矩阵*坐标矩阵；</p><p>若是绕动坐标系旋转（自身建立一个坐标系），则右乘，也就是坐标矩阵*变换矩阵。</p><h1 id="视角"><a href="#视角" class="headerlink" title="视角"></a>视角</h1><p>总结来说, 这是个视角问题 , 右乘获取新坐标矩阵 , 左乘还是原来的坐标矩阵.</p><p>类似于 旋转地图自身固定(右乘) 与 旋转自身地图固定(左乘) 的区别</p><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">obj_local_matrix = obj_world_matrix * inverse_parent_world_matrix <span class="comment"># 右乘</span></span><br><span class="line">obj_world_matrix = obj_local_matrix * parent_world_matrix <span class="comment"># 左乘</span></span><br><span class="line"></span><br><span class="line">obj_relative_to_other_matrix = obj_world_matrix * inverse_other_world_matrix</span><br><span class="line">obj_world_matrix = obj_relative_to_other_matrix * other_world_matrix</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 水 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 矩阵 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实用 Unreal Engine API</title>
      <link href="/2022/06/14/UnrealUsefulApi/"/>
      <url>/2022/06/14/UnrealUsefulApi/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>一些实用的Unreal Engine API方便查找</p><span id="more"></span>   <h1 id="基于UKismetSystemLibrary"><a href="#基于UKismetSystemLibrary" class="headerlink" title="基于UKismetSystemLibrary"></a>基于UKismetSystemLibrary</h1><p>转自 : <a href="https://www.cnblogs.com/shiroe/p/14743901.html">https://www.cnblogs.com/shiroe/p/14743901.html</a></p><h2 id="获取各类名称"><a href="#获取各类名称" class="headerlink" title="获取各类名称"></a>获取各类名称</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Returns the actual object name.</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category = <span class="string">&quot;Utilities&quot;</span>)</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetObjectName</span><span class="params">(<span class="type">const</span> UObject* Object)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the full path to the specified object.</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities&quot;</span>)</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetPathName</span><span class="params">(<span class="type">const</span> UObject* Object)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the display name (or actor label), for displaying as a debugging aid.</span></span><br><span class="line"><span class="comment">// Note: In editor builds, this is the actor label.  In non-editor builds, this is the actual object name.  This function should not be used to uniquely identify actors!</span></span><br><span class="line"><span class="comment">// It is not localized and should not be used for display to an end user of a game.</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities&quot;</span>)</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetDisplayName</span><span class="params">(<span class="type">const</span> UObject* Object)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the display name of a class</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category = <span class="string">&quot;Utilities&quot;</span>, meta = (DisplayName = <span class="string">&quot;Get Display Name&quot;</span>))</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetClassDisplayName</span><span class="params">(UClass* Class)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Engine build number, for displaying to end users.</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Development&quot;</span>, meta=(BlueprintThreadSafe))</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetEngineVersion</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Get the name of the current game  */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Game&quot;</span>, meta=(BlueprintThreadSafe))</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetGameName</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Get the current user name from the OS */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities|Platform&quot;</span>)</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetPlatformUserName</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the platform specific unique device id */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities|Platform&quot;</span>, meta = (DeprecatedFunction, DeprecationMessage = <span class="string">&quot;Use GetDeviceId instead&quot;</span>))</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetUniqueDeviceId</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the platform specific unique device id */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities|Platform&quot;</span>)</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetDeviceId</span><span class="params">()</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="获取各种状态"><a href="#获取各种状态" class="headerlink" title="获取各种状态"></a>获取各种状态</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** Returns whether the world this object is in is the host or not */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Networking&quot;</span>, meta=(WorldContext=<span class="string">&quot;WorldContextObject&quot;</span>) )</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsServer</span><span class="params">(<span class="type">const</span> UObject* WorldContextObject)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns whether this is running on a dedicated server */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Networking&quot;</span>, meta=(WorldContext=<span class="string">&quot;WorldContextObject&quot;</span>))</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsDedicatedServer</span><span class="params">(<span class="type">const</span> UObject* WorldContextObject)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns whether this game instance is stand alone (no networking). */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Networking&quot;</span>, meta=(WorldContext=<span class="string">&quot;WorldContextObject&quot;</span>))</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsStandalone</span><span class="params">(<span class="type">const</span> UObject* WorldContextObject)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns whether we&#x27;re currently running in split screen (more than one local player). */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category = <span class="string">&quot;Utilities&quot;</span>, meta = (WorldContext = <span class="string">&quot;WorldContextObject&quot;</span>))</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsSplitScreen</span><span class="params">(<span class="type">const</span> UObject* WorldContextObject)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns whether this is a build that is packaged for distribution */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Development&quot;</span>, meta=(BlueprintThreadSafe))</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsPackagedForDistribution</span><span class="params">()</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="获取时间"><a href="#获取时间" class="headerlink" title="获取时间"></a>获取时间</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Get the current game time, in seconds. This stops when the game is paused and is affected by slomo. </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @param WorldContextObjectWorld context</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities|Time&quot;</span>, meta=(WorldContext=<span class="string">&quot;WorldContextObject&quot;</span>) )</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">float</span> <span class="title">GetGameTimeInSeconds</span><span class="params">(<span class="type">const</span> UObject* WorldContextObject)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the value of GFrameCounter, a running count of the number of frames that have occurred. */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category = <span class="string">&quot;Utilities&quot;</span>)</span><br><span class="line"><span class="function"><span class="type">static</span> int64 <span class="title">GetFrameCount</span><span class="params">()</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="获取常见路径"><a href="#获取常见路径" class="headerlink" title="获取常见路径"></a>获取常见路径</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Returns the full system path to a UObject</span></span><br><span class="line"><span class="comment">// If given a non-asset UObject, it will return an empty string</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category = <span class="string">&quot;Utilities&quot;</span>)</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetSystemPath</span><span class="params">(<span class="type">const</span> UObject* Object)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Get the directory of the current project */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities|Paths&quot;</span>, meta=(BlueprintThreadSafe))</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetProjectDirectory</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Get the content directory of the current project */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities|Paths&quot;</span>, meta=(BlueprintThreadSafe))</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetProjectContentDirectory</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Get the saved directory of the current project */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities|Paths&quot;</span>, meta=(BlueprintThreadSafe))</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetProjectSavedDirectory</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Get the current user dir from the OS */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category = <span class="string">&quot;Utilities|Platform&quot;</span>)</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetPlatformUserDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="路径转换"><a href="#路径转换" class="headerlink" title="路径转换"></a>路径转换</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Converts passed in filename to use a relative path */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities|Paths&quot;</span>)</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ConvertToRelativePath</span><span class="params">(<span class="type">const</span> FString&amp; Filename)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Converts passed in filename to use a absolute path */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities|Paths&quot;</span>)</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ConvertToAbsolutePath</span><span class="params">(<span class="type">const</span> FString&amp; Filename)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Convert all / and \ to TEXT(&quot;/&quot;) */</span></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintPure, Category=<span class="string">&quot;Utilities|Paths&quot;</span>, meta=(BlueprintThreadSafe))</span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">NormalizeFilename</span><span class="params">(<span class="type">const</span> FString&amp; InFilename)</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="FPaths-——-更全的路径"><a href="#FPaths-——-更全的路径" class="headerlink" title="FPaths —— 更全的路径"></a>FPaths —— 更全的路径</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Path helpers for retrieving game dir, engine dir, etc.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CORE_API</span> FPaths</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Should the &quot;saved&quot; directory structures be rooted in the user dir or relative to the &quot;engine/game&quot; </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">ShouldSaveToUserDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory the application was launched from (useful for commandline utilities)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">LaunchDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Returns the base directory of the &quot;core&quot; engine that can be shared across</span></span><br><span class="line"><span class="comment"> * several games or across games &amp; mods. Shaders and base localization files</span></span><br><span class="line"><span class="comment"> * e.g. reside in the engine directory.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return engine directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Returns the root directory for user-specific engine files. Always writable.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* @return root user directory</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineUserDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Returns the root directory for user-specific engine files which can be shared between versions. Always writable.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* @return root user directory</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineVersionAgnosticUserDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Returns the content directory of the &quot;core&quot; engine that can be shared across</span></span><br><span class="line"><span class="comment"> * several games or across games &amp; mods. </span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return engine content directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineContentDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory the root configuration files are located.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return root config directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineConfigDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the Editor Settings directory of the engine</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return Editor Settings directory.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineEditorSettingsDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the intermediate directory of the engine</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return content directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineIntermediateDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the saved directory of the engine</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return Saved directory.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineSavedDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the plugins directory of the engine</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return Plugins directory.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EnginePluginsDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory for default Editor UI Layout files of the engine</span></span><br><span class="line"><span class="comment"> * @return Directory for default Editor UI Layout files.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineDefaultLayoutDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory for project Editor UI Layout files of the engine</span></span><br><span class="line"><span class="comment"> * @return Directory for project Editor UI Layout files.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineProjectLayoutDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory for user-generated Editor UI Layout files of the engine</span></span><br><span class="line"><span class="comment"> * @return Directory for user-generated Editor UI Layout files.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineUserLayoutDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* Returns the base directory enterprise directory.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* @return enterprise directory</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EnterpriseDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Returns the enterprise plugins directory</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* @return Plugins directory.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EnterprisePluginsDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Returns the enterprise FeaturePack directory</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* @return FeaturePack directory.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EnterpriseFeaturePackDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory where engine platform extensions reside</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return engine platform extensions directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EnginePlatformExtensionsDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory where the project&#x27;s platform extensions reside</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return project platform extensions directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProjectPlatformExtensionsDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns platform and restricted extensions that are present and valid (for platforms, it uses FDataDrivePlatformInfo to determine valid platforms, it doesn&#x27;t just use what&#x27;s present)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return BaseDir and usable extension directories under BaseDir (either Engine or Project)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> TArray&lt;FString&gt; <span class="title">GetExtensionDirs</span><span class="params">(<span class="type">const</span> FString&amp; BaseDir, <span class="type">const</span> FString&amp; SubDir=FString())</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the root directory of the engine directory tree</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return Root directory.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">RootDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the base directory of the current project by looking at FApp::GetProjectName().</span></span><br><span class="line"><span class="comment"> * This is usually a subdirectory of the installation</span></span><br><span class="line"><span class="comment"> * root directory and can be overridden on the command line to allow self</span></span><br><span class="line"><span class="comment"> * contained mod support.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return base directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProjectDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Returns the root directory for user-specific game files.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* @return game user directory</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProjectUserDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the content directory of the current game by looking at FApp::GetProjectName().</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return content directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProjectContentDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Returns the directory the root configuration files are located.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* @return root config directory</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProjectConfigDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the saved directory of the current game by looking at FApp::GetProjectName().</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return saved directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">const</span> FString&amp; <span class="title">ProjectSavedDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the intermediate directory of the current game by looking at FApp::GetProjectName().</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return intermediate directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProjectIntermediateDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ShaderWorkingDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the plugins directory of the current game by looking at FApp::GetProjectName().</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return plugins directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProjectPluginsDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the mods directory of the current project by looking at FApp::GetProjectName().</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return mods directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProjectModsDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* Returns true if a writable directory for downloaded data that persists across play sessions is available</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">HasProjectPersistentDownloadDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* Returns the writable directory for downloaded data that persists across play sessions.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProjectPersistentDownloadDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory the engine uses to look for the source leaf ini files. This</span></span><br><span class="line"><span class="comment"> * can&#x27;t be an .ini variable for obvious reasons.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return source config directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">SourceConfigDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory the engine saves generated config files.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return config directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GeneratedConfigDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory the engine stores sandbox output</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return sandbox directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">SandboxesDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory the engine uses to output profiling files.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return log directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProfilingDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory the engine uses to output screenshot files.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return screenshot directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ScreenShotDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory the engine uses to output BugIt files.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return screenshot directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">BugItDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory the engine uses to output user requested video capture files.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return Video capture directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">VideoCaptureDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the directory the engine uses to output logs. This currently can&#x27;t </span></span><br><span class="line"><span class="comment"> * be an .ini setting as the game starts logging before it can read from .ini</span></span><br><span class="line"><span class="comment"> * files.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return log directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ProjectLogDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the directory for automation save files */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">AutomationDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the directory for automation save files that are meant to be deleted every run */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">AutomationTransientDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the directory for results of automation tests. May be deleted every run. */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">AutomationReportsDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the directory for automation log files */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">AutomationLogDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the directory for local files used in cloud emulation or support */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">CloudDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the directory that contains subfolders for developer-specific content */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GameDevelopersDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns The folder name for the developer-specific directory for the current user */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GameUserDeveloperFolderName</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns The directory that contains developer-specific content for the current user */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GameUserDeveloperDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the directory for temp files used for diffing */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">DiffDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Returns a list of engine-specific localization paths</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">const</span> TArray&lt;FString&gt;&amp; <span class="title">GetEngineLocalizationPaths</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Returns a list of editor-specific localization paths</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">const</span> TArray&lt;FString&gt;&amp; <span class="title">GetEditorLocalizationPaths</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Returns a list of property name localization paths</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">const</span> TArray&lt;FString&gt;&amp; <span class="title">GetPropertyNameLocalizationPaths</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Returns a list of tool tip localization paths</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">const</span> TArray&lt;FString&gt;&amp; <span class="title">GetToolTipLocalizationPaths</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Returns a list of game-specific localization paths</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">const</span> TArray&lt;FString&gt;&amp; <span class="title">GetGameLocalizationPaths</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get the name of the platform-specific localization sub-folder</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetPlatformLocalizationFolderName</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Returns a list of restricted/internal folder names (without any slashes) which may be tested against full paths to determine if a path is restricted or not.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">const</span> TArray&lt;FString&gt;&amp; <span class="title">GetRestrictedFolderNames</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Determines if supplied path uses a restricted/internal subdirectory.Note that slashes are normalized and character case is ignored for the comparison.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsRestrictedPath</span><span class="params">(<span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the saved directory that is not game specific. This is usually the same as</span></span><br><span class="line"><span class="comment"> * EngineSavedDir().</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return saved directory</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GameAgnosticSavedDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the directory where engine source code files are kept */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">EngineSourceDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the directory where game source code files are kept */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GameSourceDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns the directory where feature packs are kept */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">FeaturePackDir</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Checks whether the path to the project file, if any, is set.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return true if the path is set, false otherwise.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsProjectFilePathSet</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Gets the path to the project file.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @return Project file path.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetProjectFilePath</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Sets the path to the project file.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param NewGameProjectFilePath - The project file path to set.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">SetProjectFilePath</span><span class="params">( <span class="type">const</span> FString&amp; NewGameProjectFilePath )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Gets the extension for this filename.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @parambIncludeDotif true, includes the leading dot in the result</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @returnthe extension of this filename, or an empty string if the filename doesn&#x27;t have an extension.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetExtension</span><span class="params">( <span class="type">const</span> FString&amp; InPath, <span class="type">bool</span> bIncludeDot=<span class="literal">false</span> )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the filename (with extension), minus any path information.</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetCleanFilename</span><span class="params">(<span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the filename (with extension), minus any path information.</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetCleanFilename</span><span class="params">(FString&amp;&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the same thing as GetCleanFilename, but without the extension</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetBaseFilename</span><span class="params">(<span class="type">const</span> FString&amp; InPath, <span class="type">bool</span> bRemovePath=<span class="literal">true</span> )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the same thing as GetCleanFilename, but without the extension</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetBaseFilename</span><span class="params">(FString&amp;&amp; InPath, <span class="type">bool</span> bRemovePath = <span class="literal">true</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the path in front of the filename</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetPath</span><span class="params">(<span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the path in front of the filename</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetPath</span><span class="params">(FString&amp;&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the leaf in the path</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetPathLeaf</span><span class="params">(<span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns the leaf in the path</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetPathLeaf</span><span class="params">(FString&amp;&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Changes the extension of the given filename (does nothing if the file has no extension) */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ChangeExtension</span><span class="params">(<span class="type">const</span> FString&amp; InPath, <span class="type">const</span> FString&amp; InNewExtension)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Sets the extension of the given filename (like ChangeExtension, but also applies the extension if the file doesn&#x27;t have one) */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">SetExtension</span><span class="params">(<span class="type">const</span> FString&amp; InPath, <span class="type">const</span> FString&amp; InNewExtension)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns true if this file was found, false otherwise */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">FileExists</span><span class="params">(<span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns true if this directory was found, false otherwise */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">DirectoryExists</span><span class="params">(<span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns true if this path represents a root drive or volume */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsDrive</span><span class="params">(<span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns true if this path is relative to another path */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsRelative</span><span class="params">(<span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Convert all / and \ to TEXT(&quot;/&quot;) */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">NormalizeFilename</span><span class="params">(FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Checks if two paths are the same.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param PathA First path to check.</span></span><br><span class="line"><span class="comment"> * @param PathB Second path to check.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @returns True if both paths are the same. False otherwise.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsSamePath</span><span class="params">(<span class="type">const</span> FString&amp; PathA, <span class="type">const</span> FString&amp; PathB)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Determines if a path is under a given directory */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">IsUnderDirectory</span><span class="params">(<span class="type">const</span> FString&amp; InPath, <span class="type">const</span> FString&amp; InDirectory)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Normalize all / and \ to TEXT(&quot;/&quot;) and remove any trailing TEXT(&quot;/&quot;) if the character before that is not a TEXT(&quot;/&quot;) or a colon */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">NormalizeDirectoryName</span><span class="params">(FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Takes a fully pathed string and eliminates relative pathing (eg: annihilates &quot;..&quot; with the adjacent directory).</span></span><br><span class="line"><span class="comment"> * Assumes all slashes have been converted to TEXT(&#x27;/&#x27;).</span></span><br><span class="line"><span class="comment"> * For example, takes the string:</span></span><br><span class="line"><span class="comment"> *BaseDirectory/SomeDirectory/../SomeOtherDirectory/Filename.ext</span></span><br><span class="line"><span class="comment"> * and converts it to:</span></span><br><span class="line"><span class="comment"> *BaseDirectory/SomeOtherDirectory/Filename.ext</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">CollapseRelativeDirectories</span><span class="params">(FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Removes duplicate slashes in paths.</span></span><br><span class="line"><span class="comment"> * Assumes all slashes have been converted to TEXT(&#x27;/&#x27;).</span></span><br><span class="line"><span class="comment"> * For example, takes the string:</span></span><br><span class="line"><span class="comment"> *BaseDirectory/SomeDirectory//SomeOtherDirectory////Filename.ext</span></span><br><span class="line"><span class="comment"> * and converts it to:</span></span><br><span class="line"><span class="comment"> *BaseDirectory/SomeDirectory/SomeOtherDirectory/Filename.ext</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">RemoveDuplicateSlashes</span><span class="params">(FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Make fully standard &quot;Unreal&quot; pathname:</span></span><br><span class="line"><span class="comment"> *    - Normalizes path separators [NormalizeFilename]</span></span><br><span class="line"><span class="comment"> *    - Removes extraneous separators  [NormalizeDirectoryName, as well removing adjacent separators]</span></span><br><span class="line"><span class="comment"> *    - Collapses internal ..&#x27;s</span></span><br><span class="line"><span class="comment"> *    - Makes relative to Engine\Binaries\&lt;Platform&gt; (will ALWAYS start with ..\..\..)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">CreateStandardFilename</span><span class="params">(<span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">MakeStandardFilename</span><span class="params">(FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Takes an &quot;Unreal&quot; pathname and converts it to a platform filename. */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">MakePlatformFilename</span><span class="params">(FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Assuming both paths (or filenames) are relative to the same base dir, modifies InPath to be relative to InRelativeTo</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param InPath Path to change to be relative to InRelativeTo</span></span><br><span class="line"><span class="comment"> * @param InRelativeTo Path to use as the new relative base</span></span><br><span class="line"><span class="comment"> * @returns true if InPath was changed to be relative</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">MakePathRelativeTo</span><span class="params">( FString&amp; InPath, <span class="type">const</span> TCHAR* InRelativeTo )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Converts a relative path name to a fully qualified name relative to the process BaseDir().</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ConvertRelativePathToFull</span><span class="params">(<span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Converts a relative path name to a fully qualified name relative to the process BaseDir().</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ConvertRelativePathToFull</span><span class="params">(FString&amp;&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Converts a relative path name to a fully qualified name relative to the specified BasePath.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ConvertRelativePathToFull</span><span class="params">(<span class="type">const</span> FString&amp; BasePath, <span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Converts a relative path name to a fully qualified name relative to the specified BasePath.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ConvertRelativePathToFull</span><span class="params">(<span class="type">const</span> FString&amp; BasePath, FString&amp;&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Converts a relative path name to a fully qualified name relative to the specified BasePath.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ConvertRelativePathToFull</span><span class="params">(FString&amp;&amp; BasePath, <span class="type">const</span> FString&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Converts a relative path name to a fully qualified name relative to the specified BasePath.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ConvertRelativePathToFull</span><span class="params">(FString&amp;&amp; BasePath, FString&amp;&amp; InPath)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Converts a normal path to a sandbox path (in Saved/Sandboxes).</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param InSandboxName The name of the sandbox.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ConvertToSandboxPath</span><span class="params">( <span class="type">const</span> FString&amp; InPath, <span class="type">const</span> TCHAR* InSandboxName )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Converts a sandbox (in Saved/Sandboxes) path to a normal path.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param InSandboxName The name of the sandbox.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">ConvertFromSandboxPath</span><span class="params">( <span class="type">const</span> FString&amp; InPath, <span class="type">const</span> TCHAR* InSandboxName )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Creates a temporary filename with the specified prefix.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param Path The file pathname.</span></span><br><span class="line"><span class="comment"> * @param Prefix The file prefix.</span></span><br><span class="line"><span class="comment"> * @param Extension File extension (&#x27;.&#x27; required).</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">CreateTempFilename</span><span class="params">( <span class="type">const</span> TCHAR* Path, <span class="type">const</span> TCHAR* Prefix = TEXT(<span class="string">&quot;&quot;</span>), <span class="type">const</span> TCHAR* Extension = TEXT(<span class="string">&quot;.tmp&quot;</span>) )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Returns a string containing all invalid characters as dictated by the operating system</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">GetInvalidFileSystemChars</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*Returns a string that is safe to use as a filename because all items in</span></span><br><span class="line"><span class="comment">*GetInvalidFileSystemChars() are removed</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> FString <span class="title">MakeValidFileName</span><span class="params">(<span class="type">const</span> FString&amp; InString, <span class="type">const</span> TCHAR InReplacementChar=<span class="number">0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Validates that the parts that make up the path contain no invalid characters as dictated by the operating system</span></span><br><span class="line"><span class="comment"> * Note that this is a different set of restrictions to those imposed by FPackageName</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param InPath - path to validate</span></span><br><span class="line"><span class="comment"> * @param OutReason - optional parameter to fill with the failure reason</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">ValidatePath</span><span class="params">( <span class="type">const</span> FString&amp; InPath, FText* OutReason = <span class="literal">nullptr</span> )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Parses a fully qualified or relative filename into its components (filename, path, extension).</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @paramPath[out] receives the value of the path portion of the input string</span></span><br><span class="line"><span class="comment"> * @paramFilename[out] receives the value of the filename portion of the input string</span></span><br><span class="line"><span class="comment"> * @paramExtension[out] receives the value of the extension portion of the input string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">Split</span><span class="params">( <span class="type">const</span> FString&amp; InPath, FString&amp; PathPart, FString&amp; FilenamePart, FString&amp; ExtensionPart )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Gets the relative path to get from BaseDir to RootDirectory  */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">const</span> FString&amp; <span class="title">GetRelativePathToRoot</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span>... PathTypes&gt;</span><br><span class="line"><span class="function">FORCEINLINE <span class="type">static</span> FString <span class="title">Combine</span><span class="params">(PathTypes&amp;&amp;... InPaths)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">const</span> TCHAR* Paths[] = &#123; <span class="built_in">GetTCharPtr</span>(<span class="built_in">Forward</span>&lt;PathTypes&gt;(InPaths))... &#125;;</span><br><span class="line">FString Out;</span><br><span class="line"></span><br><span class="line"><span class="built_in">CombineInternal</span>(Out, Paths, <span class="built_in">UE_ARRAY_COUNT</span>(Paths));</span><br><span class="line"><span class="keyword">return</span> Out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Frees any memory retained by FPaths.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">TearDown</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">CombineInternal</span><span class="params">(FString&amp; OutPath, <span class="type">const</span> TCHAR** Paths, int32 NumPaths)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">FStaticData</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">FORCEINLINE <span class="type">static</span> <span class="type">const</span> TCHAR* <span class="title">GetTCharPtr</span><span class="params">(<span class="type">const</span> TCHAR* Ptr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> Ptr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">FORCEINLINE <span class="type">static</span> <span class="type">const</span> TCHAR* <span class="title">GetTCharPtr</span><span class="params">(<span class="type">const</span> FString&amp; Str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> *Str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns, if any, the value of the -userdir command line argument. This can be used to sandbox artifacts to a desired location */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">const</span> FString&amp; <span class="title">CustomUserDirArgument</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns, if any, the value of the -shaderworkingdir command line argument. This can be used to sandbox shader working files to a desired location */</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">const</span> FString&amp; <span class="title">CustomShaderDirArgument</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> unreal </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unreal </tag>
            
            <tag> ue </tag>
            
            <tag> api </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>using 關鍵字在 C++ 中的幾種用法</title>
      <link href="/2022/06/12/CppUsing/"/>
      <url>/2022/06/12/CppUsing/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p><strong>using 關鍵字在 C++ 中的幾種用法</strong></p><span id="more"></span>   <h1 id="1-using-声明"><a href="#1-using-声明" class="headerlink" title="1. using 声明"></a>1. using 声明</h1><p><code>using 聲明 (using declaration)</code> 是將命名空間中單個名字註入到當前作用域的機製，</p><p>使得在當前作用域下訪問另一個作用域下的成員時無需使用限定符 <code>::</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">using</span> std::map</span><br><span class="line">    map&lt;<span class="type">int</span>, std::string&gt; the_map; <span class="comment">//ok</span></span><br><span class="line">&#125;</span><br><span class="line">map&lt;<span class="type">int</span>, std::string&gt; the_map2;  <span class="comment">//error</span></span><br></pre></td></tr></table></figure><p>using 聲明將其它 namespace 的成員引入本命名空間的 當前作用域 (包括其嵌套作用域)  。</p><p>一個 using 聲明一次只引入一個命名空間成員，它使得無論程序中使用哪些名字，都非常準確。</p><p>利用 using 聲明，可以改變派生類對父類成員的訪問控製:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span>&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="type">int</span> bn1;</span><br><span class="line">    <span class="type">int</span> bn2;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Derived</span>: <span class="keyword">private</span> Base&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">using</span> Base::bn1;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DerivedAgain</span>: <span class="keyword">public</span> Derived&#123;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Derived d;</span><br><span class="line">    DerivedAgain da; </span><br><span class="line">    d.bn1 = <span class="number">1</span>;</span><br><span class="line">    d.bn2 = <span class="number">2</span>; <span class="comment">//error, &#x27;bn2&#x27; is a private member of &#x27;Base&#x27;</span></span><br><span class="line">    da.bn1 = <span class="number">3</span>;  <span class="comment">//ok</span></span><br><span class="line">    std::cout&lt;&lt;d.bn1&lt;&lt;std::endl;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>盡管 Derived 對 base 是私有繼承，但通過 using 聲明，我們還是可以在 Derived 中訪問其成員，</p><p>且後續的繼承同樣不受 private 限定的影響。</p><h1 id="2-using-指示-引入命名空間"><a href="#2-using-指示-引入命名空間" class="headerlink" title="2. using 指示 (引入命名空間)"></a>2. using 指示 (引入命名空間)</h1><p>using 指示 (using directive) 是使一個命名空間中的 所有 名字都在該作用域中可見的機製。</p><p>這是最常用的方式了。需要註意的是命名沖突問題。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">namespace</span> n1&#123; </span><br><span class="line">    <span class="type">int</span> n1_member = <span class="number">10</span>; </span><br><span class="line">    <span class="type">int</span> m = <span class="number">11</span>; </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> m = <span class="number">12</span>; </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">namespace</span> n1; </span><br><span class="line">    std::cout&lt;&lt;n1_member&lt;&lt;std::endl;</span><br><span class="line">    <span class="comment">//std::cout&lt;&lt;m&lt;&lt;std::endl;  //error 命名沖突</span></span><br><span class="line">    std::cout&lt;&lt;::m&lt;&lt;std::endl;</span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> m = <span class="number">13</span>; <span class="comment">//ok, 局部變量屏蔽命名空間變量</span></span><br><span class="line">    std::cout&lt;&lt;m&lt;&lt;std::endl;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Notice</code>: 盡管 using指示很方便，但在實際工作中應該盡量避免：</p><p>它一下子將另一個 namespace 中的成員全部引入了，一不小心就會出現命<code>名空間汙染</code>問題。</p><h1 id="3-類型重定義，取代-typedef"><a href="#3-類型重定義，取代-typedef" class="headerlink" title="3. 類型重定義，取代 typedef"></a>3. 類型重定義，取代 typedef</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> alias = <span class="keyword">typename</span></span><br></pre></td></tr></table></figure><p>這是 C++11 中的新用法，比 typedef 更能表達別名的定義。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> fun = <span class="built_in">void</span> (*)(<span class="type">int</span>, <span class="type">int</span>);</span><br><span class="line"><span class="comment">//typedef void (*fun)(int, int); //與上一句等價</span></span><br><span class="line"><span class="keyword">using</span> int16 = <span class="type">short</span>;</span><br><span class="line"><span class="comment">//typedef short int16; //與上一句等價</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    std::cout&lt;&lt;<span class="built_in">sizeof</span>(int16)&lt;&lt;std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 C++98&#x2F;03 中 ，typedef 重定義有一些限製，比如，模板。</p><p>我們想實現這樣一個模板：將一個 int 映射到任意類型，類似於我們想表達這種效果：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> std::map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; <span class="type">map_int_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> std::map&lt;<span class="type">int</span>, std::string&gt; <span class="type">map_str_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> std::map&lt;<span class="type">int</span>, <span class="type">bool</span>&gt; <span class="type">map_b_t</span>;</span><br><span class="line"><span class="comment">//... Others</span></span><br></pre></td></tr></table></figure><p>我們在 C++98&#x2F;03 中必須這樣寫：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> Val&gt;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">int_map</span>&#123;</span><br><span class="line">    <span class="keyword">typedef</span> std::map&lt;<span class="type">int</span>, Val&gt; type;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    int_map&lt;<span class="type">int</span>&gt;::type imap;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在C++11 中，我們可以使用 using 重定義模板 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> Val&gt;</span><br><span class="line"><span class="keyword">using</span> <span class="type">int_map_t</span> = std::map&lt;<span class="type">int</span>, Val&gt;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int_map_t</span>&lt;<span class="type">int</span>&gt; imap;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> cpp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 破事水 </tag>
            
            <tag> cpp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修复Windows 事件10016</title>
      <link href="/2022/05/15/FixWindowDCOM/"/>
      <url>/2022/05/15/FixWindowDCOM/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>因为Windows的一个阿三更新, 破坏了DCOM的权限设置</p><p>从而导致了PerAppRuntimeBroken的权限被破坏</p><span id="more"></span>   <h1 id="修复1"><a href="#修复1" class="headerlink" title="修复1"></a>修复1</h1><ol><li><p>使用 <strong>Regedit</strong> 命令，转至 HKEY_LOCAL_MACHINE 注册表值, 直接搜索CLSID。</p><p> <strong>注：</strong> 以非管理员用户身份配置查看时时，CLSID 值会以事件标识 10016 显示在事件查看器中。</p></li><li><p>在“注册表编辑器”窗格中，双击<strong>默认</strong>。</p></li><li><p>在“编辑字符串”对话框中，复制值数据字符串。</p></li><li><p>单击<strong>开始 &gt; 控制面板 &gt; 管理工具 &gt; 组件服务</strong>。</p></li><li><p>在“组件服务”窗口中，展开<strong>组件服务 &gt; 计算机 &gt; 我的电脑</strong>，并双击 <strong>DCOM</strong>。</p></li><li><p>在“DCOM 配置”窗格中，找到所复制的字符串（程序名），右键单击程序名，然后单击<strong>属性</strong>。</p></li><li><p>在“属性”窗口中，选择<strong>安全</strong>选项卡。</p></li><li><p>在“启动和激活权限”组框下，选择<strong>自定义</strong>，然后单击<strong>编辑</strong>。这将打开“启动和激活权限”窗口。</p></li><li><p>单击<strong>添加</strong>，输入非管理员用户到权限列表中，然后单击<strong>确定</strong>。</p></li><li><p>针对“本地启动”和“本地激活”选中<strong>允许</strong>复选框，然后单击<strong>确定</strong>。</p></li></ol><h1 id="修复2"><a href="#修复2" class="headerlink" title="修复2:"></a>修复2:</h1><ol><li>下载 NSudo 或者 ExecTi </li><li>用 超级权限(TruestedInstaller) 启动Dcomcnfg</li><li>找到 对应的 DCOM组件 (在“DCOM 配置”窗格中，找到所复制的字符串（程序名），右键单击程序名，然后单击<strong>属性</strong>。)</li><li>在“属性”窗口中，选择<strong>安全</strong>选项卡。</li><li>在“启动和激活权限”组框下，选择<strong>自定义</strong>，然后单击<strong>编辑</strong>。这将打开“启动和激活权限”窗口。</li><li>单击<strong>添加</strong>，输入非管理员用户到权限列表中，然后单击<strong>确定</strong>。</li><li>针对“本地启动”和“本地激活”选中<strong>允许</strong>复选框，然后单击<strong>确定</strong>。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 水 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 破事水 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有向距離場 Signed Distance Filed</title>
      <link href="/2022/04/26/SignedDistanceFiled/"/>
      <url>/2022/04/26/SignedDistanceFiled/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>本文主要用於記錄<strong>有向距離場</strong>的資料</p><ul><li><p>添加了可直接使用的Python实现</p></li><li><p>添加了部分资料</p></li><li><p>未完…</p></li></ul><span id="more"></span>   <h1 id="最终用Python整了一个脚本方便大家快速CV大法"><a href="#最终用Python整了一个脚本方便大家快速CV大法" class="headerlink" title="最终用Python整了一个脚本方便大家快速CV大法"></a>最终用Python整了一个脚本方便大家快速CV大法</h1><h2 id="结果预览"><a href="#结果预览" class="headerlink" title="结果预览"></a>结果预览</h2><p><img data-src="/../img/SignedDistanceFiled/image-20220429003908138.png" alt="image-20220429003908138"></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>python3</li><li>openCV</li><li>numpy</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _*_ coding=utf-8 _*_</span></span><br><span class="line"><span class="comment"># MineClever &#x27;s 2D SDF Generator~</span></span><br><span class="line"><span class="comment"># 8SSEDT Method</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os, sys</span><br><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># def type</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Vector2</span> ():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, x=<span class="number">0</span>,y=<span class="number">0</span></span>):</span><br><span class="line">        self.data = np.array((x,y),dtype=<span class="built_in">float</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">x</span> (self):</span><br><span class="line">        <span class="keyword">return</span> self.data[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">    @x.setter</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">x</span> (self, value):</span><br><span class="line">        self.data[<span class="number">0</span>] = (value)</span><br><span class="line">        </span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">y</span> (self):</span><br><span class="line">        <span class="keyword">return</span> self.data[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">    @y.setter</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">y</span> (self, value):</span><br><span class="line">        self.data[<span class="number">1</span>] = (value)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__add__</span> (self, value):</span><br><span class="line">        <span class="keyword">return</span> Vector2((self.x+value.x),(self.y+value.y))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">length_squared</span> (self) -&gt; <span class="built_in">float</span>:</span><br><span class="line">        <span class="keyword">return</span> (self.x*self.x + self.y*self.y)</span><br><span class="line">        <span class="comment"># return np.square(self.data)</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">length</span> (self) -&gt; <span class="built_in">float</span>:</span><br><span class="line">        <span class="keyword">return</span> np.sqrt(self.length_squared())</span><br><span class="line">    </span><br><span class="line"><span class="comment"># For a bitmap with representation:</span></span><br><span class="line"><span class="comment"># [0][0][0]</span></span><br><span class="line"><span class="comment"># [0][1][1]</span></span><br><span class="line"><span class="comment"># [1][1][1]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># using relative offset [offset x, offset y] :</span></span><br><span class="line"><span class="comment"># [-1,-1][0,-1][1,-1]</span></span><br><span class="line"><span class="comment"># [-1, 0][0, 0][1, 0]</span></span><br><span class="line"><span class="comment"># [-1, 1][0, 1][1, 1]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SSEDT8</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Grid</span> ():</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, width:<span class="built_in">int</span> , height:<span class="built_in">int</span></span>):  </span><br><span class="line">            self.width = width</span><br><span class="line">            self.height = height</span><br><span class="line">            self.size = Vector2(self.width,self.height)</span><br><span class="line">            self.distances = [Vector2(<span class="number">0</span>,<span class="number">0</span>)]* (self.width*self.height)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">__str__</span> (self):</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;width:&#123;&#125;,height:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(self.size.x, self.size.y)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">has</span> (self, x:<span class="built_in">int</span>, y:<span class="built_in">int</span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">            <span class="keyword">return</span> (<span class="number">0</span> &lt;= x <span class="keyword">and</span> x &lt; self.size.x <span class="keyword">and</span> <span class="number">0</span> &lt;= self.size.y <span class="keyword">and</span> y &lt; self.size.y)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">_index</span> (self, x:<span class="built_in">int</span>, y:<span class="built_in">int</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">            <span class="comment"># print (&quot;x : &#123;&#125;, y: &#123;&#125;&quot;.format(x,y))</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">int</span>(y * self.size.x + x)</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">get_size</span>(<span class="params">self</span>) -&gt; Vector2:</span><br><span class="line">            <span class="keyword">return</span> self.size</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">get_dist</span>(<span class="params">self, x:<span class="built_in">int</span>, y:<span class="built_in">int</span></span>) -&gt; Vector2:</span><br><span class="line">            <span class="comment"># print (self._index(x,y))</span></span><br><span class="line">            <span class="keyword">return</span> self.distances[self._index(x,y)]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">set_dist</span>(<span class="params">self, x:<span class="built_in">int</span>, y:<span class="built_in">int</span>, p_dinstance:Vector2</span>) :</span><br><span class="line">            self.distances[self._index(x,y)] = p_dinstance</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">update</span> (self, x:<span class="built_in">int</span>, y:<span class="built_in">int</span>, offset:Vector2):</span><br><span class="line">            pos = Vector2(x,y)</span><br><span class="line">            offset_pos = pos + offset</span><br><span class="line">            distance = self.get_dist(x, y)</span><br><span class="line">            dist_sq = distance.length_squared()</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (self.has(offset_pos.x, offset_pos.y)):</span><br><span class="line">                offset_dist = self.get_dist(offset_pos.x, offset_pos.y) + offset</span><br><span class="line">                offset_sq = offset_dist.length_squared()</span><br><span class="line">                <span class="keyword">if</span> (offset_sq &lt; dist_sq):</span><br><span class="line">                    self.set_dist(x, y, offset_dist)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">apply_offsets</span> (cls, p_grid : Grid,x :<span class="built_in">int</span> ,y :<span class="built_in">int</span>, p_offsets:<span class="built_in">list</span>):</span><br><span class="line">        size = <span class="built_in">len</span>(p_offsets)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(size):</span><br><span class="line">            p_grid.update(x,y,p_offsets[i])</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">apply_pass</span> (cls, p_grid : Grid, p_offsets1 : <span class="built_in">list</span>, p_offsets2 : <span class="built_in">list</span>, inverted=<span class="literal">False</span>):</span><br><span class="line">        grid_size = p_grid.get_size()</span><br><span class="line">        width = grid_size.x</span><br><span class="line">        height = grid_size.y</span><br><span class="line">        <span class="keyword">if</span> (inverted):</span><br><span class="line">            y = height - <span class="number">1</span></span><br><span class="line">            x = width - <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> (y &gt; <span class="number">0</span>):</span><br><span class="line">                <span class="keyword">while</span> (x &gt;= <span class="number">0</span>):</span><br><span class="line">                    cls.apply_offsets(p_grid, x, y, p_offsets1)</span><br><span class="line">                    x -= <span class="number">1</span></span><br><span class="line">                <span class="comment"># else:</span></span><br><span class="line">                <span class="comment">#     x = 0</span></span><br><span class="line">                <span class="keyword">while</span> (x &lt; width):</span><br><span class="line">                    cls.apply_offsets(p_grid, x, y, p_offsets2)</span><br><span class="line">                    x += <span class="number">1</span></span><br><span class="line">                y -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            y = <span class="number">0</span></span><br><span class="line">            x = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> (y &lt; height) :</span><br><span class="line">                <span class="keyword">while</span> (x &lt; width):</span><br><span class="line">                    cls.apply_offsets(p_grid, x, y, p_offsets1)</span><br><span class="line">                    x += <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    x = width - <span class="number">1</span></span><br><span class="line">                <span class="keyword">while</span> (x &gt; <span class="number">0</span>):</span><br><span class="line">                    cls.apply_offsets(p_grid, x, y, p_offsets2)</span><br><span class="line">                    x -= <span class="number">1</span></span><br><span class="line">                y += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_bind_methods</span>():</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">do_sdf</span> (cls, p_input_image_path=<span class="string">&#x27;&#x27;</span>,p_output_image_path=<span class="string">&#x27;&#x27;</span>,p_max_img_size = <span class="number">1024</span>, p_px_scale = <span class="number">0.025</span>):</span><br><span class="line">        <span class="comment"># read img by openCV</span></span><br><span class="line">        img = cv2.imread(p_input_image_path,cv2.IMREAD_UNCHANGED)</span><br><span class="line"></span><br><span class="line">        width = img.shape[<span class="number">0</span>]</span><br><span class="line">        height = img.shape[<span class="number">1</span>]</span><br><span class="line">        max_len = height <span class="keyword">if</span> height &gt; width <span class="keyword">else</span> width</span><br><span class="line">        <span class="built_in">print</span> (img.shape)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> max_len &gt; p_max_img_size:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;do scale&quot;</span>)</span><br><span class="line">            scale_fac = p_max_img_size / max_len</span><br><span class="line">            <span class="built_in">print</span> (scale_fac)</span><br><span class="line">            img = cv2.resize(img,dsize=(<span class="built_in">int</span>(width*scale_fac) , <span class="built_in">int</span>(height* scale_fac)),interpolation=cv2.INTER_LANCZOS4)</span><br><span class="line">            width = img.shape[<span class="number">0</span>]</span><br><span class="line">            height = img.shape[<span class="number">1</span>]</span><br><span class="line">        </span><br><span class="line">        cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</span><br><span class="line">        <span class="built_in">print</span> (img.shape)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Initialise grids</span></span><br><span class="line">        grid1 = cls.Grid(width,height)</span><br><span class="line">        grid2 = cls.Grid(width,height)</span><br><span class="line">        DISTANT = <span class="number">999999</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(width):</span><br><span class="line">                img_pixel = img[x][y][<span class="number">2</span>] / <span class="number">255</span> <span class="comment"># convert 255 -&gt; 1.0</span></span><br><span class="line">                distance = <span class="number">0</span> <span class="keyword">if</span> img_pixel &gt; <span class="number">0.5</span> <span class="keyword">else</span> DISTANT</span><br><span class="line">                grid1.set_dist(x, y, Vector2(distance, distance))</span><br><span class="line">                substract_dist = DISTANT - distance</span><br><span class="line">                grid2.set_dist(x, y, Vector2(substract_dist, substract_dist))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"># using relative offset [offset x, offset y] :</span></span><br><span class="line">        <span class="comment"># [-1,-1][0,-1][1,-1]</span></span><br><span class="line">        <span class="comment"># [-1, 0][0, 0][1, 0]</span></span><br><span class="line">        <span class="comment"># [-1, 1][0, 1][1, 1]</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Pass 1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># [2] [1] [ ]</span></span><br><span class="line">        <span class="comment"># [0] [ ] [ ]</span></span><br><span class="line">        <span class="comment"># [3] [ ] [ ]</span></span><br><span class="line">        offsets1 = <span class="built_in">list</span>()</span><br><span class="line">        offsets1.append(Vector2(-<span class="number">1</span>, <span class="number">0</span>))     <span class="comment"># 0</span></span><br><span class="line">        offsets1.append(Vector2(<span class="number">0</span>, -<span class="number">1</span>))     <span class="comment"># 1</span></span><br><span class="line">        offsets1.append(Vector2(-<span class="number">1</span>, -<span class="number">1</span>))    <span class="comment"># 2 </span></span><br><span class="line">        offsets1.append(Vector2(<span class="number">1</span>, -<span class="number">1</span>))     <span class="comment"># 3</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># [ ] [ ] [ ]</span></span><br><span class="line">        <span class="comment"># [ ] [ ] [0]</span></span><br><span class="line">        <span class="comment"># [ ] [ ] [ ]</span></span><br><span class="line">        offsets2 = <span class="built_in">list</span>()</span><br><span class="line">        offsets1.append(Vector2(<span class="number">1</span>, <span class="number">0</span>))      <span class="comment"># 0</span></span><br><span class="line">        </span><br><span class="line">        cls.apply_pass(grid1 , offsets1 ,offsets2 ,<span class="literal">False</span>)</span><br><span class="line">        cls.apply_pass(grid2 , offsets1 ,offsets2 ,<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Pass 2</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># [ ] [ ] [ ]</span></span><br><span class="line">        <span class="comment"># [ ] [ ] [0]</span></span><br><span class="line">        <span class="comment"># [2] [1] [3]</span></span><br><span class="line">        offsets1.clear()</span><br><span class="line">        offsets1.append(Vector2(<span class="number">1</span>, <span class="number">0</span>))  <span class="comment"># 0</span></span><br><span class="line">        offsets1.append(Vector2(<span class="number">0</span>, <span class="number">1</span>))  <span class="comment"># 1</span></span><br><span class="line">        offsets1.append(Vector2(-<span class="number">1</span>, <span class="number">1</span>)) <span class="comment"># 2</span></span><br><span class="line">        offsets1.append(Vector2(<span class="number">1</span>, <span class="number">1</span>))  <span class="comment"># 3</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># [ ] [ ] [ ]</span></span><br><span class="line">        <span class="comment"># [0] [ ] [ ]</span></span><br><span class="line">        <span class="comment"># [ ] [ ] [ ]</span></span><br><span class="line">        offsets2.clear()</span><br><span class="line">        offsets2.append(Vector2(-<span class="number">1</span>, <span class="number">0</span>)) <span class="comment"># 0</span></span><br><span class="line"></span><br><span class="line">        cls.apply_pass(grid1 , offsets1 ,offsets2 ,<span class="literal">True</span>)</span><br><span class="line">        cls.apply_pass(grid2 , offsets1 ,offsets2 ,<span class="literal">True</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># make Img data</span></span><br><span class="line">        out_img = np.zeros((width,height),dtype=np.float16)</span><br><span class="line">        <span class="comment"># print(out_img.shape)</span></span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(width):</span><br><span class="line">                distance1 = grid1.get_dist(x, y)</span><br><span class="line">                distance2 = grid2.get_dist(x, y)</span><br><span class="line">                distance = distance2.length() - distance1.length()</span><br><span class="line">                distance = (<span class="number">1</span> + <span class="built_in">max</span>(-<span class="number">1</span>, <span class="built_in">min</span>(distance * p_px_scale, <span class="number">1</span>))) / <span class="number">2.0</span></span><br><span class="line">                out_img[x][y] = distance</span><br><span class="line"></span><br><span class="line">        out_img_scaled = np.clip(out_img *<span class="number">255</span>,<span class="number">0</span>,<span class="number">255</span>).astype(<span class="string">&#x27;uint8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        cv2.imwrite(p_output_image_path,out_img_scaled)</span><br><span class="line">        </span><br></pre></td></tr></table></figure><h1 id="收集的距離場算法與實現"><a href="#收集的距離場算法與實現" class="headerlink" title="收集的距離場算法與實現"></a>收集的距離場算法與實現</h1><h2 id="欧几里得距离转换（EDT）算法"><a href="#欧几里得距离转换（EDT）算法" class="headerlink" title="欧几里得距离转换（EDT）算法"></a>欧几里得距离转换（EDT）算法</h2><ul><li>Ref : <a href="https://blog.csdn.net/tianwaifeimao/article/details/45078661">https://blog.csdn.net/tianwaifeimao/article/details/45078661</a></li></ul><p><em><strong>*0 前言*</strong></em> </p><p>欧几里得距离转换 (Euclidean Distance Transform, EDT) 简单的说即是以最常用的欧几里得距离作为</p><p>距离度量，找到每一个前景点到最近的背景点之间的距离。文中提及所有的算法中，均是将二维图片</p><p>转为两个一维向量的方式进行。</p><p><u>一些基本定义：</u></p><ul><li><p>背景点为 0，黑色，为感兴趣点，Voronioi elements，sites；</p></li><li><p>前景点为 1：白色；</p></li><li><p>VR:  某一背景点的 VR 指的前景点集合，这些前景点到此背景点的距离比到其他背景点距离都要短。</p></li><li><p>VS：某一前景点的 VS 指的是背景点的集合，这些背景点到此前景点距离比到其他前景点距离都要短。</p></li></ul><p><em><strong>1. Saito 的算法：</strong></em></p><p><strong>step1：1-D Transformation</strong></p><p>上到下，计算每一行中前景点到<strong>本行</strong>背景点距离最近的平方，得到中间结果 G；<strong>公式如下：</strong></p><p><img data-src="/../img/SignedDistanceFiled/20150416180332929.bmp" alt="公式"></p><p>如下图 :</p><p>(a) 为<strong>原图</strong></p><p>(b) 为 <strong>同一行的</strong>距离平方图, 即 G</p><p><img data-src="/../img/SignedDistanceFiled/20150416180042220.bmp" alt="圖像(a), (b)"></p><p><strong>step2：2-D Transformation</strong></p><p><strong>从左到右</strong>，对每一列，对中间结果 G 进行操作，计算本列背景点与本行背景点距离平方和的最小值，得到距离图（Distance Map）H；</p><p>如下图（4 即使最近距离的平方）.</p><p><img data-src="/../img/SignedDistanceFiled/20150416180603781.bmp" alt="2-D Transformation"></p><h2 id="8SSEDT-算法"><a href="#8SSEDT-算法" class="headerlink" title="8SSEDT 算法"></a>8SSEDT 算法</h2><p>Ref : <a href="https://github.com/Lisapple/8SSEDT">https://github.com/Lisapple/8SSEDT</a></p><h3 id="8點有向按序-歐幾里得距離轉換"><a href="#8點有向按序-歐幾里得距離轉換" class="headerlink" title="8點有向按序 歐幾里得距離轉換"></a>8點有向按序 歐幾里得距離轉換</h3><hr><p>有向距離場 (SDF) 是由二值圖像 計算得來, 在每像素上 , 到<strong>最近像素</strong>的<em>有向距離</em>(可正可負) <strong>有不同值</strong>. 前景像素為正距離 , 背景像素為負距離. 下文中, 有向和有符號是統一意思. 有符號更加符合寫程式的觀點.</p><h4 id="例"><a href="#例" class="headerlink" title="例:"></a>例:</h4><p><img data-src="/../img/SignedDistanceFiled/image-20220427222044743.png"></p><p>每像素會擁有一個距離值:</p><p>(暗灰色像素為正值 &amp;&amp; 負值為亮灰色)</p><p><img data-src="/../img/SignedDistanceFiled/image-20220427222056596.png"></p><h4 id="簡單位圖為例"><a href="#簡單位圖為例" class="headerlink" title="簡單位圖為例"></a>簡單位圖為例</h4><p>对于 位图 表示為:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[0]</span><span class="selector-attr">[0]</span><span class="selector-attr">[0]</span></span><br><span class="line"><span class="selector-attr">[0]</span><span class="selector-attr">[1]</span><span class="selector-attr">[1]</span></span><br><span class="line"><span class="selector-attr">[1]</span><span class="selector-attr">[1]</span><span class="selector-attr">[1]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>限定全部 0 顯示為像素在 (白色) 形狀之外(也叫:背景)且全部 1 在形狀之内 (也叫:前景).</p><p>最終結果表示為:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[-2]</span><span class="selector-attr">[-1]</span><span class="selector-attr">[-1]</span></span><br><span class="line"><span class="selector-attr">[-1]</span><span class="selector-attr">[ 1]</span><span class="selector-attr">[ 1]</span></span><br><span class="line"><span class="selector-attr">[ 1]</span><span class="selector-attr">[ 2]</span><span class="selector-attr">[ 2]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>第一個像素 (背景) 為 在一個到前景為 -2 (此時為 有向-平方) 的距離.</p></li><li><p>最後一個像素 (前景) 為在一個到背景為 1 的距離.</p></li></ul><h4 id="構建初始網格"><a href="#構建初始網格" class="headerlink" title="構建初始網格"></a>構建初始網格</h4><p>For each pixel, we need to build a <em>first grid</em> (grid #1) with a distance duet <code>(dx, dy)</code></p><p>like <code>(dx=0, dy=0)</code> if inside (foreground) and <code>(dx=∞, dy=∞)</code> if outside (background)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[∞]</span><span class="selector-attr">[∞]</span><span class="selector-attr">[∞]</span></span><br><span class="line"><span class="selector-attr">[∞]</span><span class="selector-attr">[0]</span><span class="selector-attr">[0]</span></span><br><span class="line"><span class="selector-attr">[0]</span><span class="selector-attr">[0]</span><span class="selector-attr">[0]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>with <code>(0, 0)</code> represented by <code>0</code> and <code>(∞, ∞)</code> by <code>∞</code>.</p><p>and a <code>second grid</code> (grid #2) with inverted distances:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[0]</span><span class="selector-attr">[0]</span><span class="selector-attr">[0]</span></span><br><span class="line"><span class="selector-attr">[0]</span><span class="selector-attr">[∞]</span><span class="selector-attr">[∞]</span></span><br><span class="line"><span class="selector-attr">[∞]</span><span class="selector-attr">[∞]</span><span class="selector-attr">[∞]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>Note:</strong> All pixel out of bounds are use the value <code>(∞, ∞)</code> as:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">∞  ∞  ∞ </span><br><span class="line">∞ <span class="selector-attr">[x]</span><span class="selector-attr">[∞]</span></span><br><span class="line">∞ <span class="selector-attr">[∞]</span><span class="selector-attr">[0]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>Computing grids:</li></ul><p>To get the distance <code>x</code>, we look all neighbours (from <code>#1</code> to <code>#8</code>) distances:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[#1]</span><span class="selector-attr">[#2]</span><span class="selector-attr">[#3]</span></span><br><span class="line"><span class="selector-attr">[#4]</span><span class="selector-attr">[ x]</span><span class="selector-attr">[#5]</span></span><br><span class="line"><span class="selector-attr">[#6]</span><span class="selector-attr">[#7]</span><span class="selector-attr">[#8]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>using relative offset <code>[offset x, offset y]</code> to <code>x</code> like so:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[-1,-1]</span><span class="selector-attr">[0,-1]</span><span class="selector-attr">[1,-1]</span></span><br><span class="line"><span class="selector-attr">[-1, 0]</span><span class="selector-attr">[0, 0]</span><span class="selector-attr">[1, 0]</span></span><br><span class="line"><span class="selector-attr">[-1, 1]</span><span class="selector-attr">[0, 1]</span><span class="selector-attr">[1, 1]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>then the final value of <code>x</code> is</p><p><code>x = min(#0.distance, ..., #7.distance)</code></p><p>using the distance function that compute the magnitude of the distance with offset:</p><p><code>#?.distance = sqrt( (?dx + offset x)^2 + (?dy + offset y)^2 )</code></p><p>This gives:</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#1.distance = (∞<span class="string">-1</span>, ∞<span class="string">-1</span>).distance = √(∞^2 + ∞^2) = ∞</span><br><span class="line">#2.distance = (∞<span class="string">+0</span>, ∞<span class="string">-1</span>).distance = √(∞^2 + ∞^2) = ∞</span><br><span class="line">#3.distance = (∞<span class="string">+1</span>, ∞<span class="string">-1</span>).distance = √(∞^2 + ∞^2) = ∞</span><br><span class="line">#4.distance = (∞<span class="string">-1</span>, ∞<span class="string">+0</span>).distance = √(∞^2 + ∞^2) = ∞</span><br><span class="line">#5.distance = (0<span class="string">+1</span>, 0<span class="string">+0</span>).distance = √(1^2 + 0^2) = 1</span><br><span class="line">#6.distance = (0<span class="string">-1</span>, 0<span class="string">+1</span>).distance = √(<span class="string">-1</span>^2 + 1^2) = √2</span><br><span class="line">#7.distance = (0<span class="string">+0</span>, 0<span class="string">+1</span>).distance = √(0^2 + 1^2) = 1</span><br><span class="line">#8.distance = (0<span class="string">+1</span>, 0<span class="string">+1</span>).distance = √(1^2 + 1^2) = √2</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>so</p><p><code>x = min(#0.distance, ..., #7.distance]) = 1</code></p><ul><li>Updated grid:</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[∞]</span><span class="selector-attr">[∞]</span><span class="selector-attr">[∞]</span></span><br><span class="line"><span class="selector-attr">[∞]</span><span class="selector-attr">[1]</span><span class="selector-attr">[0]</span></span><br><span class="line"><span class="selector-attr">[0]</span><span class="selector-attr">[0]</span><span class="selector-attr">[0]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Then process the next cell on the right.</p><h4 id="Computing-method"><a href="#Computing-method" class="headerlink" title="Computing method"></a>Computing method</h4><p>In total 4 passes are necessary to compute all distances, two sequential passes, for each grid #1 and #2.  </p><p>Using the initialised grid:</p><p>(from left to right, top to bottom)</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">   - - - &gt;</span><br><span class="line">| <span class="comment">[?]</span><span class="comment">[?]</span><span class="comment">[?]</span></span><br><span class="line">| <span class="comment">[?]</span><span class="comment">[x]</span><span class="comment">[ ]</span></span><br><span class="line">v <span class="comment">[ ]</span><span class="comment">[ ]</span><span class="comment">[ ]</span></span><br></pre></td></tr></table></figure><p>then (using the same grid)</p><p>(from right to left)</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">   &lt; - - -</span><br><span class="line">| <span class="comment">[ ]</span><span class="comment">[ ]</span><span class="comment">[ ]</span></span><br><span class="line">| <span class="comment">[ ]</span><span class="comment">[x]</span><span class="comment">[?]</span></span><br><span class="line">v <span class="comment">[ ]</span><span class="comment">[ ]</span><span class="comment">[ ]</span></span><br></pre></td></tr></table></figure><p>then</p><p>(from right to left, bottom to top)</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">   &lt; - - -</span><br><span class="line">^ <span class="comment">[ ]</span><span class="comment">[ ]</span><span class="comment">[ ]</span></span><br><span class="line">| <span class="comment">[ ]</span><span class="comment">[x]</span><span class="comment">[?]</span></span><br><span class="line">| <span class="comment">[?]</span><span class="comment">[?]</span><span class="comment">[?]</span></span><br></pre></td></tr></table></figure><p>then:</p><p>(from left to right)</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">   - - - &gt;</span><br><span class="line">^ <span class="comment">[ ]</span><span class="comment">[ ]</span><span class="comment">[ ]</span></span><br><span class="line">| <span class="comment">[?]</span><span class="comment">[x]</span><span class="comment">[ ]</span></span><br><span class="line">| <span class="comment">[ ]</span><span class="comment">[ ]</span><span class="comment">[ ]</span></span><br></pre></td></tr></table></figure><h4 id="Computing-final-signed-distances"><a href="#Computing-final-signed-distances" class="headerlink" title="Computing final signed distances"></a>Computing final signed distances</h4><p>Once the four steps applied on the grid #1 and #2,<br>we compute the difference of the magnitude of each cell (pixel) <code>#n1</code> and <code>#n2</code> of the two grids:</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">foreach (#n1 <span class="keyword">of</span> grid #<span class="number">1</span>) and (#n2 <span class="keyword">of</span> grid #<span class="number">2</span>):</span><br><span class="line">final distance = #n1.distance - #n2.distance</span><br></pre></td></tr></table></figure><p>with <code>#n.distance = sqrt( #n.dx * #n.dx + #n.dy * #n.dy )</code>.</p><h4 id="References"><a href="#References" class="headerlink" title="References"></a>References</h4><p>Distance field generator with C++ and SDL <a href="http://www.codersnotes.com/notes/signed-distance-fields/">codersnotes.com</a></p><p>Valve paper on distance field <a href="http://www.valvesoftware.com/publications/2007/SIGGRAPH2007_AlphaTestedMagnification.pdf">Improved Alpha-Tested Magnification for Vector Textures and Special Effects</a></p><h2 id="3D有符号距离场原理及实现"><a href="#3D有符号距离场原理及实现" class="headerlink" title="3D有符号距离场原理及实现"></a>3D有符号距离场原理及实现</h2><p>Ref: <a href="http://www.bimant.com/blog/signed-distance-field-implementation/">http://www.bimant.com/blog/signed-distance-field-implementation/</a></p><h2 id="Dead-Reckoning-算法"><a href="#Dead-Reckoning-算法" class="headerlink" title="Dead Reckoning 算法"></a>Dead Reckoning 算法</h2><p>Ref : <a href="https://segmentfault.com/a/1190000041250697">https://segmentfault.com/a/1190000041250697</a></p><h2 id="在Unity的實現"><a href="#在Unity的實現" class="headerlink" title="在Unity的實現"></a>在Unity的實現</h2><p>Ref : <a href="https://zznewclear13.github.io/posts/calculate-signed-distance-field-using-compute-shader/">https://zznewclear13.github.io/posts/calculate-signed-distance-field-using-compute-shader/</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> 資料 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SDF </tag>
            
            <tag> 距離場 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>福利</title>
      <link href="/2022/04/26/GHS/"/>
      <url>/2022/04/26/GHS/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>水友要求 , 合并一下福利</p><ul><li>持续更新</li><li>未完…</li></ul><span id="more"></span>   <h1 id="Twitter"><a href="#Twitter" class="headerlink" title="Twitter"></a>Twitter</h1><p><a href="https://twitter.com/youngmen1985">射淫狮 youngmen1985</a></p><p><img data-src="/../img/GHS/img/image-20220426212612048.png" alt="射淫狮 youngmen1985"></p><hr><p><a href="https://twitter.com/Littlebigwrold">射淫狮 Littlebigwrold</a></p><p><img data-src="/../img/GHS/img/image-20220426212710358.png" alt="射淫狮 Littlebigwrold"></p><hr><p><a href="https://twitter.com/Pooooinn">福利鸡 Pooooinn</a></p><p><img data-src="/../img/GHS/img/image-20220426212814229.png" alt="福利鸡 Pooooinn"></p><hr><p><a href="https://twitter.com/LUST28696898">射淫狮 LUST28696898</a></p><p><img data-src="/../img/GHS/img/image-20220426212859564.png" alt="射淫狮 LUST28696898"></p><hr><p><a href="https://twitter.com/JollonStudio">射淫狮 JollonStudio</a></p><p><img data-src="/../img/GHS/img/image-20220426213010542.png" alt="射淫狮 JollonStudio"></p><hr><p><a href="https://twitter.com/Bdsm_lichuan">福利鸡 Bdsm_lichuan</a></p><p><img data-src="/../img/GHS/img/image-20220426213049087.png" alt="福利鸡 Bdsm_lichuan"></p><hr><p><a href="https://twitter.com/77shark_">福利鸡 77shark_</a></p><p><img data-src="/../img/GHS/img/image-20220426213122294.png" alt="福利鸡 77shark_"></p><hr><p><a href="https://twitter.com/chanbaekkailu1">美女精选 chanbaekkailu1</a></p><p><img data-src="/../img/GHS/img/image-20220426213244438.png"></p><hr><p><a href="https://twitter.com/shiqiqiya77">福利雞 shiqiqiya77</a></p><p><img data-src="/../img/GHS/image-20220426231632190.png" alt="shiqiqiya77"></p><hr><p><a href="https://twitter.com/likeif77">福利雞 likeif77</a></p><p><img data-src="/../img/GHS/image-20220426232004094.png" alt="likeif77"></p><h1 id="Telegram"><a href="#Telegram" class="headerlink" title="Telegram"></a>Telegram</h1><ul><li><p>美圖與色圖 <a href="https://t.me/setu_nsfw">https://t.me/setu_nsfw</a></p></li><li><p>寻番号库 <a href="https://t.me/XunFanKu">https://t.me/XunFanKu</a></p></li><li><p>少女领域 <a href="https://t.me/zukong6">https://t.me/zukong6</a></p></li><li><p>马里奥福利社 <a href="https://t.me/MroHome">https://t.me/MroHome</a></p></li><li><p>黄油聚集地 <a href="https://t.me/acg_nsfw">https://t.me/acg_nsfw</a></p></li><li><p>幻想高质量美图 <a href="https://t.me/hxfxq">https://t.me/hxfxq</a></p></li><li><p>白丝即正义 <a href="https://t.me/baisi">https://t.me/baisi</a></p></li><li><p>新鉴黄中心资源发布站 <a href="https://t.me/jianhuangfabu666">https://t.me/jianhuangfabu666</a></p></li><li><p>[NSFW] 少女阁 <a href="https://t.me/shaonvge">https://t.me/shaonvge</a></p></li><li><p>SWAG|麻豆|91国产 <a href="https://t.me/swaglive">https://t.me/swaglive</a></p></li><li><p>21世纪里番动画大全 <a href="https://t.me/acgck">https://t.me/acgck</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> GHS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GHS </tag>
            
            <tag> 福利 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anysocks 使用</title>
      <link href="/2022/04/23/anysocksUsage/"/>
      <url>/2022/04/23/anysocksUsage/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>一個實用而高效的任意進程代理工具, 支持TCP+UDP , 不過僅支持Windows</p><ul><li><p>簡要記錄下其使用方法</p></li><li><p>Anysocks版本 1.0.10 openbeta</p></li><li><p>官方地址 : <a href="https://anysocks.net/">https://anysocks.net/</a></p></li></ul><span id="more"></span>   <h1 id="0xFF-優點"><a href="#0xFF-優點" class="headerlink" title="0xFF 優點"></a>0xFF 優點</h1><ul><li><p>可以讓任何支持Socks代理! 不管軟件願不願意(x</p></li><li><p>不是全局代理 , 卻有全局代理的體驗!</p></li><li><p>支持UDP , 可以打游戲!</p></li><li><p>界面友好 , 自帶中文 , 一看就是華人搞得(x</p></li><li><p>支持簡單暴力代理的同時, 還支持高級路由配置 , 支持GeoIP等</p></li><li><p>支持DOH! 這個非常棒!</p></li></ul><h1 id="0xFE-缺點"><a href="#0xFE-缺點" class="headerlink" title="0xFE 缺點"></a>0xFE 缺點</h1><ul><li>官方無提供有效的幫助文檔, 需要自己摸索 (於是便有了此文)</li><li>需要自己一個個添加配置, 略微繁瑣</li><li>TCP代理功能免費,確實能完美替代Proxifier. 不過UDP部分需要花錢購買授權.<ul><li>好在價格并不貴</li></ul></li></ul><h1 id="0xFD-配置服務器"><a href="#0xFD-配置服務器" class="headerlink" title="0xFD 配置服務器"></a>0xFD 配置服務器</h1><h2 id="0b00-簡單添加服務器配置"><a href="#0b00-簡單添加服務器配置" class="headerlink" title="0b00 簡單添加服務器配置"></a>0b00 簡單添加服務器配置</h2><p><img data-src="/../img/anysocksUsage/image-20220423160736268.png" alt="伺服器配置頁面"></p><ul><li><p>在左側堆棧欄中, 找到 <strong>創建新伺服器</strong> 可以添加一個新的本地Socks接入伺服器</p></li><li><p>由於可以支持多個Socks接入伺服器 , 可以按照自己的需求 添加多個 伺服器 , 以便在規則中分類定義</p></li></ul><h2 id="0b01-檢查連接-amp-amp-保存"><a href="#0b01-檢查連接-amp-amp-保存" class="headerlink" title="0b01 檢查連接 &amp;&amp; 保存"></a>0b01 檢查連接 &amp;&amp; 保存</h2><ul><li>添加本地伺服器地址與端口后, 可以通過 <strong>檢查伺服器連接性</strong> 來確認是否已經聯通</li></ul><p><img data-src="/../img/anysocksUsage/image-20220423161152644.png" alt="網絡探測界面"></p><ul><li>全部顯示小綠勾, 即表明當前伺服器已經完美聯通啦!</li><li>當然記得點擊右上方的 <strong>保存</strong> 按鈕 , 否則是不生效的!</li></ul><h1 id="0xFC-添加規則"><a href="#0xFC-添加規則" class="headerlink" title="0xFC 添加規則"></a>0xFC 添加規則</h1><ul><li>規則配置擁有多種靈活性, 非常强大</li></ul><h2 id="0b00-創建簡單規則"><a href="#0b00-創建簡單規則" class="headerlink" title="0b00 創建簡單規則"></a>0b00 創建簡單規則</h2><p><img data-src="/../img/anysocksUsage/image-20220423161923676.png" alt="創建規則"></p><ul><li>在左側堆棧欄中,點擊 <strong>規則</strong> ,然後 <strong>創建新規則</strong></li><li>在 <strong>網路配置 - &gt;代理伺服器</strong> 中選擇 之前添加的伺服器</li></ul><p><img data-src="/../img/anysocksUsage/image-20220423162304143.png" alt="規則頁面"></p><ul><li>在 <strong>程式配置</strong> 欄目 中, 可以調整 <strong>程式攔截配置</strong><ul><li>默認沒有啓用任何選項, 確實有些不便 , 第一次使用的時候以爲程式無效</li><li>自動代理子進程 : 從被代理的進程啓動的子進程也會被代理 , 對於游戲程式來説很必要! </li><li>自動匹配並代理運行中的進程 : 可以代理已經在運行中的程式. 一般來説還是點上吧!</li></ul></li><li>接下來很重要的部分, 我們還需要添加 需要被代理的程式!! 點擊 <strong>程式規則</strong>進行進一步配置</li></ul><p><img data-src="/../img/anysocksUsage/image-20220423162813819.png" alt="添加規則"></p><ul><li>點擊 <strong>添加</strong> 按鈕, 即可添加一條新的規則</li></ul><p><img data-src="/../img/anysocksUsage/image-20220423163009757.png" alt="添加規則"></p><ul><li><p>如果只是想要代理特定路徑下的程式 , 使用 瀏覽 按鈕 獲得程式的絕對路徑 , 然後點擊 <strong>添加</strong> 即可</p></li><li><p>如果先用使用更加複雜的路徑配置方法,可以利用通配符 , 在下文再作詳細説明</p></li><li><p>當然, 添加完成規則后 , 記得點擊 <strong>保存</strong> 按鈕!</p></li></ul><h1 id="0xFB-運行代理時"><a href="#0xFB-運行代理時" class="headerlink" title="0xFB 運行代理時"></a>0xFB 運行代理時</h1><h2 id="0b00-啓動代理"><a href="#0b00-啓動代理" class="headerlink" title="0b00 啓動代理"></a>0b00 啓動代理</h2><ul><li><p>從左側堆棧欄中,回到 <strong>主頁</strong></p></li><li><p>點擊 <strong>啓動</strong> 按鈕!!!</p></li><li><p>當按鈕變成紅色, 並出現統計圖表 即代表運行成功</p></li></ul><p><img data-src="/../img/anysocksUsage/image-20220423163531443.png" alt="主頁"></p><h2 id="0b01-停止-amp-amp-暫停"><a href="#0b01-停止-amp-amp-暫停" class="headerlink" title="0b01 停止 &amp;&amp; 暫停"></a>0b01 停止 &amp;&amp; 暫停</h2><ul><li>停止 : 停止代理的運行! 切換回無代理的狀態</li><li>暫停 : 不再代理規則中的新進程 , 但是不停止已經被代理進程的代理行爲 . 對於臨時進行網絡切換非常有用!</li></ul><h1 id="0xFA-進階規則的配置"><a href="#0xFA-進階規則的配置" class="headerlink" title="0xFA 進階規則的配置"></a>0xFA 進階規則的配置</h1><h2 id="0b00-啓用DoH"><a href="#0b00-啓用DoH" class="headerlink" title="0b00 啓用DoH"></a>0b00 啓用DoH</h2><ul><li>從左側堆棧欄 進入 規則 欄目</li><li>選擇需要修改規則</li><li>找到 <strong>網路配置 -&gt; DNS代理設置</strong> 點擊 <strong>設定</strong></li></ul><p><img data-src="/../img/anysocksUsage/image-20220423200132243.png" alt="規則頁面"></p><ul><li>使用DoH代理DNS查詢 : 啓用DOH功能</li><li>使用代理進行DoH查詢 : 從選定的服務器代理DoH進行查詢</li><li>一般將兩個選項全部打開 , 點擊 確認 即可</li><li>如果需要自定義DOH地址 , 直接在選擇欄 輸入地址即可.</li></ul><p><img data-src="/../img/anysocksUsage/image-20220423200318620.png" alt="DOH界面"></p><h2 id="0b01-使用-高級配置模式"><a href="#0b01-使用-高級配置模式" class="headerlink" title="0b01 使用 高級配置模式"></a>0b01 使用 高級配置模式</h2><p><img data-src="/../img/anysocksUsage/image-20220423200808541.png" alt="高級配置模式"></p><ul><li>最規則界面中 <strong>啓用 高級規則模式</strong></li><li>啓用高級規則模式后 , 界面中會 增加 <strong>代理行爲</strong> 與 <strong>路由規則表</strong> 選項</li></ul><p><img data-src="/../img/anysocksUsage/image-20220423201119602.png" alt="啓用高級規則模式后"></p><div id ="代理行爲"> <div><ul><li><p>修改代理行爲的設定 , 可以調整代理時的行爲</p><ul><li><p>代理 :  這是默認行爲 </p></li><li><p>阻止 :  阻止被代理進程的網絡通信 , 可以<strong>當網絡防火墻</strong>用</p></li><li><p>放行 :  不對規則中程進行網絡代理 , 配合DoH選項可以獲得<strong>僅DoH代理</strong>的效果</p></li></ul></li></ul><p><img data-src="/../img/anysocksUsage/image-20220423202406385.png" alt="路由規則見面"></p><ul><li><p>CIDR : <strong>無類別域間路由</strong>（Classless Inter-Domain Routing） <a href="https://zh.wikipedia.org/zh-tw/%E6%97%A0%E7%B1%BB%E5%88%AB%E5%9F%9F%E9%97%B4%E8%B7%AF%E7%94%B1">請參見Wiki資料</a></p></li><li><p>GeoIP : <strong>GeoDNS</strong>（或是 <strong>GeoIP</strong>）是 BIND DNS 伺服器軟體的一套修補程式  <a href="https://zh.wikipedia.org/wiki/GeoDNS">請參見Wiki資料</a></p><ul><li>CIDR 地址如 : 0.0.0.0&#x2F;0 , 255.255.255.0&#x2F;32</li><li>GeoIP 如 : CN , US</li></ul></li><li><p><a href="#%E4%BB%A3%E7%90%86%E8%A1%8C%E7%88%B2">代理行爲</a> 參照行爲</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 水 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 破事水 </tag>
            
            <tag> 網路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cpp搞FbxSDK的坑</title>
      <link href="/2022/04/22/cppFbx/"/>
      <url>/2022/04/22/cppFbx/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>樓下樓上鄰居做愛聲音太大了,  開啓電音 , 更新下博文</p><p>簡要記錄搞 Autodesk FbxSDK 時的一些使用套路</p><span id="more"></span>   <h2 id="0xFF-命令行"><a href="#0xFF-命令行" class="headerlink" title="0xFF 命令行"></a>0xFF 命令行</h2><ul><li>使用命令行來與批處理脚本在Windows下快速執行文件的路徑訪問與功能切換</li></ul><p>選用cmdline作爲簡單的命令分析工具</p><ul><li><p>優點: </p><pre><code>  1. 包含單個.h文件即可使用  2. 命令添加與讀取簡單  3. 跨平臺</code></pre></li><li><p>坑:</p><ol><li><p>在Windows MSVC編譯時需要修改<code>demangle(const std::string&amp; name)</code> 這個函數</p><ul><li>修改如下 :</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">static</span> <span class="keyword">inline</span> std::string <span class="title">demangle</span><span class="params">(<span class="type">const</span> std::string&amp; name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> _MSC_VER</span></span><br><span class="line"><span class="comment">// 为MSVC编译器时直接返回name</span></span><br><span class="line">    <span class="keyword">return</span> name;</span><br><span class="line"><span class="meta">#<span class="keyword">elif</span> defined(__GNUC__) </span></span><br><span class="line">    <span class="comment">// 为gcc编译器时, 调用原来的代码</span></span><br><span class="line">    <span class="type">int</span> status = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span>* p = abi::__cxa_demangle(name.<span class="built_in">c_str</span>(), <span class="number">0</span>, <span class="number">0</span>, &amp;status);</span><br><span class="line">    <span class="function">std::string <span class="title">ret</span><span class="params">(p)</span></span>;</span><br><span class="line">    <span class="built_in">free</span>(p);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">    <span class="comment">// 其他不支持的编译器需要自己实现这个方法</span></span><br><span class="line"><span class="meta">#<span class="keyword">error</span> unexpected c complier (msc/gcc), Need to implement this method for demangle</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li><p>頭部修改為:</p>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当编译器非gcc时,不包含cxxabi.h头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> __GNUC__</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cxxabi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="0xFE-中文字符處理"><a href="#0xFE-中文字符處理" class="headerlink" title="0xFE 中文字符處理"></a>0xFE 中文字符處理</h2><ul><li><p>使用本地化的 ASCII編碼,以方便從Window讀取本地化路徑</p>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="comment">// System locale</span></span><br><span class="line"><span class="built_in">setlocale</span>(LC_ALL, <span class="string">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>從操作系統到FbxSDK時, 由於FbxSDK全部使用UTF-8處理, 因此需要將系統本地的ASCII轉換成UTF-8</p></li><li><p>從ASCII到UTF-8需要注意先轉換為UNICODE</p></li><li><p>Window在處理文件路徑的時候, 會有兩套API, A代表ASCII字符, W表示寬字符(也就是UNICODE)</p></li><li><p>UTF-8 使用的是Char類型,且可變寬度</p><ul><li>以下代碼記錄了ASCII UTF-8 UNICODE之間的相互轉換</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tchar.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* Chinese:</span></span><br><span class="line"><span class="comment">* Outside --&gt; Inside</span></span><br><span class="line"><span class="comment">* GBK --&gt; UTF8</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* Inside</span></span><br><span class="line"><span class="comment">* UTF8</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* Inside --&gt; Outside</span></span><br><span class="line"><span class="comment">* UTF8 --&gt; GBK</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* Windows Path Input</span></span><br><span class="line"><span class="comment">* UTF8 --&gt; Unicode</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* Windows Path Output</span></span><br><span class="line"><span class="comment">* Unicode --&gt; UTF8</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> GBKConvert </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">testWordFunc</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        CHAR* pStr = <span class="string">&quot;中文字测试.&quot;</span>;<span class="comment">// ANSI编码</span></span><br><span class="line">        WCHAR* pWStr = <span class="string">L&quot;中文字测试.&quot;</span>;<span class="comment">// Unicode 宽字节编码</span></span><br><span class="line">        TCHAR* pTStr = _T(<span class="string">&quot;中文字测试.&quot;</span>);<span class="comment">// 根据_UNICODE定义</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// UTF-8 转 Unicode</span></span><br><span class="line">    <span class="function">wstring <span class="title">Utf82Unicode</span><span class="params">(<span class="type">const</span> string&amp; utf8string)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> widesize = ::<span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, utf8string.<span class="built_in">c_str</span>(), <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (widesize == ERROR_NO_UNICODE_TRANSLATION)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> std::<span class="built_in">exception</span>(<span class="string">&quot;Invalid UTF-8 sequence.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (widesize == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> std::<span class="built_in">exception</span>(<span class="string">&quot;Error in conversion.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function">std::vector&lt;<span class="type">wchar_t</span>&gt; <span class="title">resultstring</span><span class="params">(widesize)</span></span>;</span><br><span class="line">        <span class="type">int</span> convresult = ::<span class="built_in">MultiByteToWideChar</span>(CP_UTF8, <span class="number">0</span>, utf8string.<span class="built_in">c_str</span>(), <span class="number">-1</span>, &amp;resultstring[<span class="number">0</span>], widesize);</span><br><span class="line">        <span class="keyword">if</span> (convresult != widesize)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> std::<span class="built_in">exception</span>(<span class="string">&quot;La falla!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> std::<span class="built_in">wstring</span>(&amp;resultstring[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Unicode 转 Ascii</span></span><br><span class="line">    <span class="function">string <span class="title">Unicode2Ascii</span><span class="params">(wstring&amp; wstrcode)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> asciisize = ::<span class="built_in">WideCharToMultiByte</span>(CP_OEMCP, <span class="number">0</span>, wstrcode.<span class="built_in">c_str</span>(), <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">if</span> (asciisize == ERROR_NO_UNICODE_TRANSLATION)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> std::<span class="built_in">exception</span>(<span class="string">&quot;Invalid UTF-8 sequence.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (asciisize == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> std::<span class="built_in">exception</span>(<span class="string">&quot;Error in conversion.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function">std::vector&lt;<span class="type">char</span>&gt; <span class="title">resultstring</span><span class="params">(asciisize)</span></span>;</span><br><span class="line">        <span class="type">int</span> convresult = ::<span class="built_in">WideCharToMultiByte</span>(CP_OEMCP, <span class="number">0</span>, wstrcode.<span class="built_in">c_str</span>(), <span class="number">-1</span>, &amp;resultstring[<span class="number">0</span>], asciisize, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">if</span> (convresult != asciisize)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> std::<span class="built_in">exception</span>(<span class="string">&quot;La falla!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> std::<span class="built_in">string</span>(&amp;resultstring[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//UTF-8 转 Ascii</span></span><br><span class="line">    <span class="function">string <span class="title">Utf82Ascii</span><span class="params">(string&amp; strUtf8Code)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="function">string <span class="title">strRet</span><span class="params">(<span class="string">&quot;&quot;</span>)</span></span>;</span><br><span class="line">        <span class="comment">//先把 utf8 转为 Unicode </span></span><br><span class="line">        wstring wstr = <span class="built_in">Utf82Unicode</span>(strUtf8Code);</span><br><span class="line">        <span class="comment">//最后把 Unicode 转为 ascii </span></span><br><span class="line">        strRet = <span class="built_in">Unicode2Ascii</span>(wstr);</span><br><span class="line">        <span class="keyword">return</span> strRet;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Ascii 转 Unicode</span></span><br><span class="line">    <span class="function">wstring <span class="title">Ascii2Unicode</span><span class="params">(string&amp; strascii)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> widesize = <span class="built_in">MultiByteToWideChar</span>(CP_ACP, <span class="number">0</span>, (<span class="type">char</span>*)strascii.<span class="built_in">c_str</span>(), <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (widesize == ERROR_NO_UNICODE_TRANSLATION)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> std::<span class="built_in">exception</span>(<span class="string">&quot;Invalid UTF-8 sequence.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (widesize == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> std::<span class="built_in">exception</span>(<span class="string">&quot;Error in conversion.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function">std::vector&lt;<span class="type">wchar_t</span>&gt; <span class="title">resultstring</span><span class="params">(widesize)</span></span>;</span><br><span class="line">        <span class="type">int</span> convresult = <span class="built_in">MultiByteToWideChar</span>(CP_ACP, <span class="number">0</span>, (<span class="type">char</span>*)strascii.<span class="built_in">c_str</span>(), <span class="number">-1</span>, &amp;resultstring[<span class="number">0</span>], widesize);</span><br><span class="line">        <span class="keyword">if</span> (convresult != widesize)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> std::<span class="built_in">exception</span>(<span class="string">&quot;La falla!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> std::<span class="built_in">wstring</span>(&amp;resultstring[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Unicode 转 UTF8</span></span><br><span class="line">    <span class="function">string <span class="title">Unicode2Utf8</span><span class="params">(wstring&amp; widestring)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">        <span class="type">int</span> utf8size = ::<span class="built_in">WideCharToMultiByte</span>(CP_UTF8, <span class="number">0</span>, widestring.<span class="built_in">c_str</span>(), <span class="number">-1</span>, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">if</span> (utf8size == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> std::<span class="built_in">exception</span>(<span class="string">&quot;Error in conversion.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function">std::vector&lt;<span class="type">char</span>&gt; <span class="title">resultstring</span><span class="params">(utf8size)</span></span>;</span><br><span class="line">        <span class="type">int</span> convresult = ::<span class="built_in">WideCharToMultiByte</span>(CP_UTF8, <span class="number">0</span>, widestring.<span class="built_in">c_str</span>(), <span class="number">-1</span>, &amp;resultstring[<span class="number">0</span>], utf8size, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">if</span> (convresult != utf8size)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> std::<span class="built_in">exception</span>(<span class="string">&quot;La falla!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> std::<span class="built_in">string</span>(&amp;resultstring[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Ascii 转 UTF8</span></span><br><span class="line">    <span class="function">string <span class="title">Ascii2Utf8</span><span class="params">(string&amp; strAsciiCode)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="function">string <span class="title">strRet</span><span class="params">(<span class="string">&quot;&quot;</span>)</span></span>;</span><br><span class="line">        <span class="comment">//先把 ascii 转为 unicode </span></span><br><span class="line">        wstring wstr = <span class="built_in">Ascii2Unicode</span>(strAsciiCode);</span><br><span class="line">        <span class="comment">//最后把 unicode 转为 utf8 </span></span><br><span class="line">        strRet = <span class="built_in">Unicode2Utf8</span>(wstr);</span><br><span class="line">        <span class="keyword">return</span> strRet;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h1 id="0xFD"><a href="#0xFD" class="headerlink" title="0xFD"></a>0xFD</h1><ul><li>下次有心情的時候寫</li></ul>]]></content>
      
      
      <categories>
          
          <category> 筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cpp </tag>
            
            <tag> fbx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>水文一篇</title>
      <link href="/2022/04/20/why-blog/"/>
      <url>/2022/04/20/why-blog/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>説説爲啥用正體中文 , 爲啥又開始記錄博問</p><span id="more"></span>   <h1 id="用正體字的緣由"><a href="#用正體字的緣由" class="headerlink" title="用正體字的緣由"></a>用正體字的緣由</h1><p>長時間使用簡化字, 發現很難理解這些字的記錄意義, 時間久了就至剩下點音讀的味道了.</p><p>偶然情況下, 發現正體字實際上是象形文字的符號化, 也就是把圖畫變成了符號, 符號學的意味多瞭<del>(了)</del>.</p><p>爲此, 給自己找了以下幾個理由:</p><ul><li>感到甚是有趣</li><li>形而上</li><li>歷史感</li><li>行爲藝術</li></ul><p>雖然沒有這些理由也是可行之態,</p><p>但是又成爲了以上的理由</p><p>樂趣甚多</p><h1 id="開始水博文的緣由"><a href="#開始水博文的緣由" class="headerlink" title="開始水博文的緣由"></a>開始水博文的緣由</h1><p>過往時候,自己用各種古董Wiki本地維護自己的文章與知識</p><p>時間久了, 逐漸忘卻其存在</p><p>記錄的東西, 你忘了它,它便沒瞭意義</p><p>不過別人偶然閲讀到,可能會很有樂趣</p><h3 id="一日多位水友竟開始卷博客"><a href="#一日多位水友竟開始卷博客" class="headerlink" title="一日多位水友竟開始卷博客"></a>一日多位水友竟開始卷博客</h3><p>頗有感觸</p><p>便是把舊聞, 一些自己過往的經驗放上來 , 供觀者一樂呵亦是不錯的</p><p>或許, 自己把這頁一打開 , 還能有不少樂趣</p><p>人啊 , 是不能被自己的觀念束縛的 , 不然了 , 豈不是窮途之徒?</p>]]></content>
      
      
      <categories>
          
          <category> 水 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 破事水 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Windows環境下的HDR使用</title>
      <link href="/2022/04/20/HDR-NV-Windows/"/>
      <url>/2022/04/20/HDR-NV-Windows/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><ul><li>用於記錄一般情況下, 如何在Windows 作業系統使用HDR</li></ul><span id="more"></span>  <h1 id="0xFF"><a href="#0xFF" class="headerlink" title="0xFF"></a>0xFF</h1><h3 id="使用前提"><a href="#使用前提" class="headerlink" title="使用前提:"></a>使用前提:</h3><ol><li>有用HDR顯示器</li><li>使用Windows 10 2004以上版本的作業系統</li><li>使用 Nvidia 顯示卡, 並安裝 2020年以後的驅動程式</li></ol><h3 id="顯示器的要求"><a href="#顯示器的要求" class="headerlink" title="顯示器的要求"></a>顯示器的要求</h3><ul><li>請注意需要支持原生10bit輸出</li><li>最少需要VESA HDR400認證</li><li>至少要滿足 100% Rec709&#x2F;sRGB 的色彩空間</li></ul><h1 id="0xFE"><a href="#0xFE" class="headerlink" title="0xFE"></a>0xFE</h1><p><img data-src="/img/HDR_NV_WIN/image-20220420213328233.png" alt="覆蓋參考模式"></p><p>對於Nvidia顯卡, 需要移步至 [顯示-&gt;調整桌面色彩-&gt;色彩精確模式-&gt;覆蓋參考模式] 將該選項打開</p><p>即可完全移除作業系統對Gamma表的加載</p><p>如果需要完全的色彩準確性,得購買Aja IO4k,進行硬件化的色彩重映射</p><p>只是追求白點準確度,只要將白點平衡到D65(6500K)即可</p><h1 id="0xFD"><a href="#0xFD" class="headerlink" title="0xFD"></a>0xFD</h1><p><img data-src="/img/HDR_NV_WIN/image-20220420213747413.png" alt="image-20220420213747413"></p><p>進入HDR管理, 將[HDR&#x2F;SDR亮度平衡]拉滿</p><ul><li>請務必注意在調整前把這條拖滿,這很重要</li></ul><p>因為色彩轉換的過程已經被nvidia pass</p><p>那麼最大物理亮度請直接調整顯示器亮度即可(有點像調光圈大小的味道)</p><p>如果需要兼顧顯示器的SDR亮度,再去調整Windows內的亮度調整(SDR的參照亮度為 200nit).</p><p>目前此方法可以正確適配顯示hdr與sdr內容</p><h1 id="0xFC"><a href="#0xFC" class="headerlink" title="0xFC"></a>0xFC</h1><p>這麽做的理由:</p><ul><li>nvidia只把向顯卡報告了hdr的內容做hdr meta信號輸出</li><li>不報告的直接不做任何色彩轉換拋出去(會導致icc的 gamma表加載不生效)<ul><li>如果仍然需要photoshop等軟件的色彩管理正確工作<ul><li>應當用當前顯示器的白點和gamma做profile(即把所有修正部分塞進lut)</li><li>然後自己手指配置給系統就好了</li></ul></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> HDR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unreal引擎資產規範</title>
      <link href="/2022/04/20/%E4%B8%80%E8%88%AC%E8%B5%84%E4%BA%A7%E6%93%8D%E4%BD%9C%E8%A7%84%E8%8C%83/"/>
      <url>/2022/04/20/%E4%B8%80%E8%88%AC%E8%B5%84%E4%BA%A7%E6%93%8D%E4%BD%9C%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<h1 id="自己在使用的一套規範"><a href="#自己在使用的一套規範" class="headerlink" title="[自己在使用的一套規範]"></a>[自己在使用的一套規範]</h1><p>自己用的規範, 雖然打印成PDF也還行. 但是版本總是會混亂的, 不如直接丟在Blog上更新好了</p><ul><li>持續更新中</li></ul><span id="more"></span>   <h1 id="文档头"><a href="#文档头" class="headerlink" title="[文档头]"></a>[文档头]</h1><h2 id="版本-0-0-3"><a href="#版本-0-0-3" class="headerlink" title="版本 :0.0.3"></a>版本 :0.0.3</h2><h3 id="此处用于快速查找基本要求"><a href="#此处用于快速查找基本要求" class="headerlink" title="此处用于快速查找基本要求"></a>此处用于快速查找基本要求</h3><ul><li>三维默认单位: <strong>CM(厘米)</strong></li><li>若无指定, 默认图像格式 : <strong>Png 8&#x2F;16bpc | Tga 8bpc</strong></li></ul><h1 id="文件名称与结构的规范"><a href="#文件名称与结构的规范" class="headerlink" title="[文件名称与结构的规范]"></a>[文件名称与结构的规范]</h1><h2 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h2><h3 id="遵守规范"><a href="#遵守规范" class="headerlink" title="遵守规范"></a>遵守规范</h3><p>如果你工作的项目或你的团队<strong>已经有一套自己的规范</strong>，那么<strong>请尊重它</strong>。<br>如果<strong>现有规范和本套规范发生冲突，请继续遵守原规范</strong>。</p><p><em>好的项目规范应该是不断进步的，当你发现有好的更改可以适合所有用户时，你应该建议去更改现有规范</em></p><blockquote><h4 id="“0-1-对规范优劣的争论是没有意义的，有规范你就该去遵守。”"><a href="#“0-1-对规范优劣的争论是没有意义的，有规范你就该去遵守。”" class="headerlink" title="“0.1 对规范优劣的争论是没有意义的，有规范你就该去遵守。”"></a>“0.1 对规范优劣的争论是没有意义的，有规范你就该去遵守。”</h4><p><a href="https://rmurphey.com/"><em>Rebecca Murphey</em></a></p></blockquote><hr><blockquote><h4 id="“0-2-不管团队中有多少人，工程中所有的数据结构、资源、代码风格应该统一，如同是同一个人的作品”"><a href="#“0-2-不管团队中有多少人，工程中所有的数据结构、资源、代码风格应该统一，如同是同一个人的作品”" class="headerlink" title="“0.2 不管团队中有多少人，工程中所有的数据结构、资源、代码风格应该统一，如同是同一个人的作品”"></a>“0.2 不管团队中有多少人，工程中所有的数据结构、资源、代码风格应该统一，如同是同一个人的作品”</h4></blockquote><ul><li><p>把资源从一个工程迁移到另一个工程不应该产生新的学习成本</p></li><li><p>所有资源应该符合项目规范，消除不必要的歧义和不确定性</p></li><li><p>遵守规范可以促进对于项目的生产和维护效率</p></li><li><p>因为团队成员不用去考虑规范问题，只需要去遵守</p></li><li><p>本套规范根据诸多优秀经验编写，遵守它意味着可以少走很多弯路。</p></li></ul><blockquote><h4 id="“0-3-好哥们也得讲原则”"><a href="#“0-3-好哥们也得讲原则”" class="headerlink" title="“0.3 好哥们也得讲原则”"></a>“0.3 好哥们也得讲原则”</h4></blockquote><p><strong>如果你发现同事不遵守规范，你该去纠正他</strong></p><p>当你在团队中工作时，或者在社区提问时(例如<a href="http://join.unrealslackers.org/">Unreal Slackers</a>)</p><blockquote><p> 你会发现如果大家都遵守同一套规范会容易的多，没有人愿意在面对一堆乱糟糟的蓝图或者莫名其妙的代码时帮你解决问题</p></blockquote><h1 id="具体规范看这里"><a href="#具体规范看这里" class="headerlink" title="具体规范看这里"></a>具体规范看这里</h1><h3 id="如果你要帮助的人使用另一套不同但很健全的规范，你应该去适应它，如果他们没有遵守任何规范，那么带他们来这儿"><a href="#如果你要帮助的人使用另一套不同但很健全的规范，你应该去适应它，如果他们没有遵守任何规范，那么带他们来这儿" class="headerlink" title="如果你要帮助的人使用另一套不同但很健全的规范，你应该去适应它，如果他们没有遵守任何规范，那么带他们来这儿"></a>如果你要帮助的人使用另一套不同但很健全的规范，你应该去适应它，如果他们没有遵守任何规范，那么带他们来这儿</h3><h2 id="0-资源命名约定"><a href="#0-资源命名约定" class="headerlink" title="0. 资源命名约定"></a>0. 资源命名约定</h2><ul><li><p>对于资源的命名的规范应该像法律一样被遵守。</p></li><li><p>一个项目如果有好的命名规范，那么在资源管理、查找、解析、维护时，都会有极大的便利性。</p></li><li><p>大多数资源的命名都应该有前缀，前缀一般是资源类型的缩写，然后使用下划线和资源名链接。</p></li></ul><h3 id="1-默认命名原则"><a href="#1-默认命名原则" class="headerlink" title="1.默认命名原则"></a>1.默认命名原则</h3><ul><li>请一律使用<strong>英文半角字符</strong>作为命名字符</li><li>请使用英文单词直接示意,<strong>保持可读性.不得混合使用中文拼音</strong> <ul><li>最佳应当长期准备一个字典软件</li></ul></li><li>不使用 <strong>[ \ &#x2F; * # ^ ? { } ” &lt; &gt; | ~ &#96; @ $ % &amp; . , ;]</strong> 等字符 </li><li>由于目标引擎为Unreal引擎, 规则应当优先遵循目标引擎的结构</li></ul><h3 id="2-树状结构的原则"><a href="#2-树状结构的原则" class="headerlink" title="2.树状结构的原则"></a>2.树状结构的原则</h3><ul><li>层级结构<strong>需要确立树关系</strong>,同类型应当保证同级组织 </li><li>根据资产类型进行科叶分类</li></ul><hr><h2 id="1-规则"><a href="#1-规则" class="headerlink" title="1. 规则"></a>1. 规则</h2><h3 id="1-1-基本命名规则"><a href="#1-1-基本命名规则" class="headerlink" title="1.1 基本命名规则"></a>1.1 基本命名规则</h3><p><strong><code>Prefix_BaseAssetName_Variant_Suffix</code></strong> </p><ul><li><p>时刻记住这个命名规范<code>Prefix_BaseAssetName_Variant_Suffix</code>，只要遵守它，大部分情况下都可以让命名规范。</p></li><li><ul><li>下面是详细的解释。</li></ul></li><li><p><code>Prefix</code>(前缀) 和 <code>Suffix</code>(后缀)由资源类型确定，请参照下面的 <strong>[1.2 资源类型表 ]</strong></p></li><li><p>所有资源都应该有一个<code>BaseAssetName</code>(基本资源名)。</p></li><li><ul><li>所谓基本资源名表明该资源在逻辑关系上属于那种资源，任何属于该逻辑组的资源都应该遵守同样的命名规范</li></ul></li><li><p>基本资源名应该使用简短而便于识别的词汇，例如，如果你有一个角色名字叫做Bob，那么所有和Bob相关的资源的<code>BaseAssetName</code>都应该叫做<code>Bob</code></p></li></ul><p><code>Varient</code>(扩展名)用来保证资源的唯一性，同样，扩展名也应该是简短而容易理解的短词，以说明该资源在所属的资源逻辑组中的子集。</p><ul><li><p>例如，如果Bob有多套皮肤，那么这些皮肤资源都应该使用Bob作为基本资源名同时包含扩展名，例如’Evil’类型的皮肤资源，名字应该是<code>Bob_Evil</code>，而Retro类型的皮肤应该是用<code>Bob_Retro</code></p></li><li><p>一般来说，如果仅仅是为了保证资源的唯一性，<code>Varient</code>可以使用从<code>01</code>开始的两位数字来表示。例如，如果你要制作一堆环境中使用的石头资源，那么他们应该命名为<code>Rock_01</code>, <code>Rock_02</code>, <code>Rock_03</code>等等。</p></li><li><p>除非特殊需要，不要让数字超过三位数，如果你真的需要超过100个的资源序列，那么你应该考虑使用多个基础资源名</p></li></ul><p>基于你所制作的资源扩展属性，你可以把多个扩展名串联起来。</p><ul><li>例如，如果你在制作一套地板所使用的资源，那么你的资源除了使用<code>Flooring</code>作为基本名，扩展名可以使用多个，例如<code>Flooring_Marble_01</code>, <code>Flooring_Maple_01</code>, <code>Flooring_Tile_Squares_01</code>。</li></ul><h4 id="1-1a-范例"><a href="#1-1a-范例" class="headerlink" title="1.1a 范例"></a>1.1a 范例</h4><h5 id="1-1e1-Bob-角色"><a href="#1-1e1-Bob-角色" class="headerlink" title="1.1e1 Bob (角色)"></a>1.1e1 Bob (角色)</h5><table><thead><tr><th>资源类型</th><th>资源名</th></tr></thead><tbody><tr><td>Skeletal Mesh</td><td>SK_Bob</td></tr><tr><td>Material</td><td>Mat_Bob</td></tr><tr><td>Texture (Diffuse&#x2F;Albedo)</td><td>Tex_Bob_D</td></tr><tr><td>Texture (Normal)</td><td>Tex_Bob_N</td></tr><tr><td>Texture (Evil Diffuse)</td><td>Tex_Bob_Evil_D</td></tr></tbody></table><h5 id="1-1e2-Rocks-道具"><a href="#1-1e2-Rocks-道具" class="headerlink" title="1.1e2 Rocks (道具)"></a>1.1e2 Rocks (道具)</h5><table><thead><tr><th>资源类型</th><th>资源名</th></tr></thead><tbody><tr><td>Static Mesh (01)</td><td>SM_Rock_01</td></tr><tr><td>Static Mesh (02)</td><td>SM_Rock_02</td></tr><tr><td>Static Mesh (03)</td><td>SM_Rock_03</td></tr><tr><td>Material</td><td>M_Rock</td></tr><tr><td>Material Instance (Snow)</td><td>MI_Rock_Snow</td></tr></tbody></table><h3 id="1-2-资源类型表"><a href="#1-2-资源类型表" class="headerlink" title="1.2 资源类型表"></a>1.2 资源类型表</h3><p>当给一个资源命名的时候，请参照以下表格来决定在<a href="#base-asset-name">资本资源名</a>前后所使用的前缀和后缀</p><ul><li>我们不可避免会出现有同种类型的不同缩写, 但是请确保在<strong>同一个区域内, 它们总是一致的</strong></li></ul><h4 id="1-2-1-通用类型"><a href="#1-2-1-通用类型" class="headerlink" title="1.2.1 通用类型"></a>1.2.1 通用类型</h4><table><thead><tr><th>资源类型</th><th>前缀</th><th>后缀</th><th>备注</th></tr></thead><tbody><tr><td>Level &#x2F; Map 关卡</td><td></td><td></td><td><a href="#2.4">所有地图应该放在Maps目录下</a></td></tr><tr><td>Level (Persistent) 主干</td><td></td><td>_P</td><td></td></tr><tr><td>Level (Audio) 做音频时</td><td></td><td>_Audio</td><td></td></tr><tr><td>Level (Lighting) 打照明时</td><td></td><td>_Lighting</td><td></td></tr><tr><td>Level (Geometry) 做Block时</td><td></td><td>_Geo</td><td></td></tr><tr><td>Level (Gameplay) 做玩法时</td><td></td><td>_Gameplay</td><td></td></tr><tr><td>Blueprint 蓝图脚本</td><td>BP_</td><td></td><td></td></tr><tr><td>Material 材质</td><td>M_ or Mat_</td><td>_?</td><td>如有特殊用途,应当附加用途后缀</td></tr><tr><td>Static Mesh 静态网格体</td><td>S_ or SM_</td><td></td><td>官方用SM_</td></tr><tr><td>Skeletal Mesh 骨架网格体</td><td>SK_</td><td></td><td></td></tr><tr><td>Texture 贴图</td><td>T_ or Tex_</td><td>_?</td><td>如有色彩空间,应附加色彩空间后缀</td></tr><tr><td>Particle System 粒子系统</td><td>PS_</td><td></td><td></td></tr><tr><td>Widget Blueprint UI组件蓝图</td><td>WBP_ or WB_</td><td></td><td>建议使用 WBP_.</td></tr></tbody></table><h4 id="1-2-2-动作"><a href="#1-2-2-动作" class="headerlink" title="1.2.2 动作"></a>1.2.2 动作</h4><table><thead><tr><th>资源类型</th><th>前缀</th><th>后缀</th><th>备注</th></tr></thead><tbody><tr><td>Aim Offset 注视偏移</td><td>AO_ or Aim_</td><td></td><td></td></tr><tr><td>Aim Offset 1D</td><td>AO_ or Aim_</td><td></td><td></td></tr><tr><td>Animation Blueprint 动画蓝图</td><td>ABP_ or AnimBP_</td><td></td><td></td></tr><tr><td>Animation Composite 动画合成</td><td>AC_ or AnimComp_</td><td></td><td></td></tr><tr><td>Animation Montage 动画剪辑</td><td>AM_ or AnimMT_</td><td></td><td></td></tr><tr><td>Animation Sequence 动画序列</td><td>A_ or AS_ or AnimSeq_</td><td></td><td>选一个，建议使用 A_.</td></tr><tr><td>Blend Space 混合空间</td><td>BS_</td><td></td><td></td></tr><tr><td>Blend Space 1D</td><td>BS_</td><td></td><td></td></tr><tr><td>Level Sequence 关卡序列</td><td>LS_</td><td></td><td></td></tr><tr><td>Morph Target 变形目标</td><td>MT_</td><td></td><td></td></tr><tr><td>Paper Flipbook 翻页动画</td><td>PFB_</td><td></td><td></td></tr><tr><td>Rig 绑定</td><td>Rig_</td><td></td><td></td></tr><tr><td>Skeletal Mesh 骨架网格体</td><td>SK_</td><td></td><td></td></tr><tr><td>Skeleton 骨骼</td><td>SKEL_</td><td></td><td></td></tr></tbody></table><h3 id="1-2-3-AI"><a href="#1-2-3-AI" class="headerlink" title="1.2.3 AI"></a>1.2.3 AI</h3><table><thead><tr><th>资源类型</th><th>前缀</th><th>后缀</th><th>备注</th></tr></thead><tbody><tr><td>AI Controller AI控制器</td><td>AIC_</td><td></td><td></td></tr><tr><td>Behavior Tree 行为树</td><td>BT_</td><td></td><td></td></tr><tr><td>Blackboard 黑板</td><td>BB_</td><td></td><td></td></tr><tr><td>Decorator 装饰器</td><td>BTDecorator_</td><td></td><td></td></tr><tr><td>Service 伺服监听的</td><td>BTService_</td><td></td><td></td></tr><tr><td>Task 任务</td><td>BTTask_</td><td></td><td></td></tr></tbody></table><h3 id="1-2-4-蓝图"><a href="#1-2-4-蓝图" class="headerlink" title="1.2.4 蓝图"></a>1.2.4 蓝图</h3><table><thead><tr><th>资源类型</th><th>前缀</th><th>后缀</th><th>备注</th></tr></thead><tbody><tr><td>Blueprint 蓝图</td><td>BP_</td><td></td><td></td></tr><tr><td>Blueprint Function Library 蓝图函数库</td><td>BPFL_</td><td></td><td></td></tr><tr><td>Blueprint Interface 蓝图接口</td><td>BPI_</td><td></td><td></td></tr><tr><td>Blueprint Macro Library 蓝图宏</td><td>BPML_</td><td></td><td>可能的话尽量不要使用蓝图宏</td></tr><tr><td>Enumeration 枚举</td><td>E or Enum</td><td></td><td>没有下划线</td></tr><tr><td>Structure 结构体</td><td>F or S</td><td></td><td>没有下划线</td></tr><tr><td>Widget Blueprint UI部件蓝图</td><td>WBP_ or WB_</td><td></td><td>选一个，建议使用 WBP_.</td></tr></tbody></table><h3 id="1-2-5-材质"><a href="#1-2-5-材质" class="headerlink" title="1.2.5 材质"></a>1.2.5 材质</h3><table><thead><tr><th>资源类型</th><th>前缀</th><th>后缀</th><th>备注</th></tr></thead><tbody><tr><td>Material 材质</td><td>M_ or Mat_</td><td></td><td></td></tr><tr><td>Material (Post Process) 后处理材质</td><td>PP_ or PostMat_</td><td></td><td></td></tr><tr><td>Material Function 材质函数</td><td>MF_ or MatFunc_</td><td></td><td></td></tr><tr><td>Material Instance 材质实例</td><td>MI_ or MatIns_</td><td></td><td></td></tr><tr><td>Material Parameter Collection 材质参数表</td><td>MPC_</td><td></td><td></td></tr><tr><td>Subsurface Profile 次表面配置</td><td>SP_ or SSP_</td><td></td><td>选一个，建议使用 SP_.</td></tr><tr><td>Physical Materials 物理材质</td><td>PM_ or PhyMat_</td><td></td><td></td></tr></tbody></table><h3 id="1-2-6-纹理"><a href="#1-2-6-纹理" class="headerlink" title="1.2.6 纹理"></a>1.2.6 纹理</h3><table><thead><tr><th>资源类型</th><th>前缀</th><th>后缀</th><th>备注</th></tr></thead><tbody><tr><td>Texture 贴图</td><td>T_ or Tex_</td><td></td><td></td></tr><tr><td>Texture (Diffuse&#x2F;Albedo&#x2F;Base Color) 基色</td><td>T_ or Tex_</td><td>_D or _Diffuse or _Albedo or _Diff</td><td></td></tr><tr><td>Texture (Normal) 法线</td><td>T_ or Tex_</td><td>_N or _Nor or _Normal or _Norm</td><td></td></tr><tr><td>Texture (Roughness) 粗糙</td><td>T_ or Tex_</td><td>_R or _Rough</td><td></td></tr><tr><td>Texture (Alpha&#x2F;Opacity) 透明</td><td>T_ or Tex_</td><td>_A or _OP</td><td></td></tr><tr><td>Texture (Ambient Occlusion) 环境遮蔽</td><td>T_ or Tex_</td><td>_O or _AO</td><td>选一个，建议使用 _O.</td></tr><tr><td>Texture (Bump) 凹凸</td><td>T_ or Tex_</td><td>_B or _Bump</td><td></td></tr><tr><td>Texture (Emissive) 自发光</td><td>T_ or Tex_</td><td>_E or _EM</td><td></td></tr><tr><td>Texture (Mask) 蒙版</td><td>T_ or Tex_</td><td>_M or _Mask</td><td></td></tr><tr><td>Texture (Specular) 反射强度</td><td>T_ or Tex_</td><td>_S or _Spec</td><td></td></tr><tr><td>Texture (Packed) 打包的</td><td>T_ or Tex_</td><td>_*</td><td>参见下面的<a href="#anc-textures-packing">纹理打包备注</a>.</td></tr><tr><td>Texture Cube 立方体贴图</td><td>TC_ or TexCube_</td><td></td><td></td></tr><tr><td>Media Texture 媒体流送</td><td>MT_</td><td></td><td></td></tr><tr><td>Render Target 渲染目标</td><td>RT_ or RTT_</td><td></td><td>选一个，建议使用 RT_.</td></tr><tr><td>Cube Render Target 立方体渲染目标</td><td>RTC_</td><td></td><td></td></tr><tr><td>Texture Light Profile 灯光贴图配置</td><td>TLP_ or TxLitPf_</td><td></td><td></td></tr></tbody></table><h4 id="1-2-6-1-纹理合并"><a href="#1-2-6-1-纹理合并" class="headerlink" title="1.2.6.1 纹理合并"></a>1.2.6.1 纹理合并</h4><p>把多张纹理存于一个纹理文件中是很常见的方法，比如通常可以把自发光(Emissive), 粗糙度(Roughness), 环境光(Ambient Occlusion)以RGB通道的形式保存在纹理中，然后在文件的后缀中，注明这些信息，例如<code>_EGO</code></p><blockquote><p>一般来说，在纹理的Diffuse信息中附带Alpha&#x2F;Opacity信息是很常见的，这时在<code>_D</code>后缀中可以加入<code>A</code>也可以不用加</p></blockquote><ul><li>不推荐同时把RGBA四个通道的信息保存在一张纹理中</li><li>这是由于带有Alpha通道的纹理要比不带的占用更多的资源，除非Alpha信息是以蒙版(Mask&#x2F; 单位掩码) 的形式保存在Diffuse&#x2F;Albedo通道中。<ul><li>此处涉及到图像压缩的处理, 可以参照 微软的 <a href="https://docs.microsoft.com/en-us/windows/win32/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression</a> 对详细信息进行了解</li></ul></li></ul><table><thead><tr><th>资源类型</th><th>前缀</th><th>后缀</th><th>备注</th></tr></thead><tbody><tr><td>Texture (Packed)</td><td>T_ or Tex_</td><td>_ARM</td><td>A:Albedo,R:Roughness,M:Metallic (RGB)</td></tr></tbody></table><h3 id="1-2-7-杂项"><a href="#1-2-7-杂项" class="headerlink" title="1.2.7 杂项"></a>1.2.7 杂项</h3><table><thead><tr><th>资源类型</th><th>前缀</th><th>后缀</th><th>备注</th></tr></thead><tbody><tr><td>Animated Vector Field 动画向量场</td><td>VFA_</td><td></td><td></td></tr><tr><td>Camera Anim 相机动画</td><td>CA_ or CamAnim_</td><td></td><td></td></tr><tr><td>Color Curve 色彩曲线</td><td>Curve_ or Crv_</td><td>_Color</td><td></td></tr><tr><td>Curve Table 曲线表</td><td>Curve_ or Crv_</td><td>_Table</td><td></td></tr><tr><td>Data Asset 数据资产</td><td>?_</td><td></td><td>前缀取决于何种类型资源</td></tr><tr><td>Data Table 数据表</td><td>DT_</td><td></td><td></td></tr><tr><td>Float Curve 浮点曲线</td><td>Curve_ or Crv_</td><td>_Float</td><td></td></tr><tr><td>Foliage Type 植被类型</td><td>FT_</td><td></td><td></td></tr><tr><td>Force Feedback Effect 力反馈效果</td><td>FFE_</td><td></td><td></td></tr><tr><td>Landscape Grass Type 地形草地</td><td>LG_</td><td></td><td></td></tr><tr><td>Landscape Layer 地形层</td><td>LL_</td><td></td><td></td></tr><tr><td>Matinee Data 过场数据</td><td>Matinee_</td><td></td><td></td></tr><tr><td>Media Player 媒体播放器</td><td>MP_</td><td></td><td></td></tr><tr><td>Object Library 对象库</td><td>OL_</td><td></td><td></td></tr><tr><td>Redirector 重定向器</td><td>RD_</td><td></td><td></td></tr><tr><td>Sprite Sheet 精灵粒子表</td><td>SS_</td><td></td><td></td></tr><tr><td>Static Vector Field 静态向量场</td><td>VF_</td><td></td><td></td></tr><tr><td>Touch Interface Setup 按步骤触摸交互</td><td>TI_</td><td></td><td></td></tr><tr><td>Vector Curve 向量曲线</td><td>Curve_ or Crv_</td><td>_Vector</td><td></td></tr></tbody></table><h3 id="1-2-8-2D"><a href="#1-2-8-2D" class="headerlink" title="1.2.8 2D"></a>1.2.8 2D</h3><table><thead><tr><th>资源类型</th><th>前缀</th><th>后缀</th><th>备注</th></tr></thead><tbody><tr><td>Paper Flipbook 翻页动画</td><td>PFB_</td><td></td><td></td></tr><tr><td>Sprite 精灵粒子</td><td>SPR_</td><td></td><td></td></tr><tr><td>Sprite Atlas Group 切片精灵粒子组</td><td>SPRG_</td><td></td><td></td></tr><tr><td>Tile Map 排布映射</td><td>TM_ or TMap_</td><td></td><td></td></tr><tr><td>Tile Set 排布集</td><td>TS_</td><td></td><td></td></tr></tbody></table><h3 id="1-2-9-物理"><a href="#1-2-9-物理" class="headerlink" title="1.2.9 物理"></a>1.2.9 物理</h3><table><thead><tr><th>资源类型</th><th>前缀</th><th>后缀</th><th>备注</th></tr></thead><tbody><tr><td>Physical Material 物理材质</td><td>PM_ or PhyMat_</td><td></td><td></td></tr><tr><td>Physical Asset 物理资产</td><td>PHYS_ or Phys_</td><td></td><td></td></tr><tr><td>Destructible Mesh 破碎网格</td><td>DM_</td><td></td><td></td></tr></tbody></table><h3 id="1-2-10-声音"><a href="#1-2-10-声音" class="headerlink" title="1.2.10 声音"></a>1.2.10 声音</h3><table><thead><tr><th>资源类型</th><th>前缀</th><th>后缀</th><th>备注</th></tr></thead><tbody><tr><td>Dialogue Voice</td><td>DV_</td><td></td><td></td></tr><tr><td>Dialogue Wave</td><td>DW_</td><td></td><td></td></tr><tr><td>Media Sound Wave</td><td>MSW_</td><td></td><td></td></tr><tr><td>Reverb Effect</td><td>Reverb_</td><td></td><td></td></tr><tr><td>Sound Attenuation</td><td>ATT_</td><td></td><td></td></tr><tr><td>Sound Class</td><td></td><td></td><td>没有前缀和后缀，这些资源应该放在SoundClasses目录中</td></tr><tr><td>Sound Concurrency</td><td></td><td>_SC</td><td>在SoundClass之后命名</td></tr><tr><td>Sound Cue</td><td>A_</td><td>_Cue</td><td></td></tr><tr><td>Sound Mix</td><td>Mix_</td><td></td><td></td></tr><tr><td>Sound Wave</td><td>A_</td><td></td><td></td></tr></tbody></table><h3 id="1-2-11-界面"><a href="#1-2-11-界面" class="headerlink" title="1.2.11 界面"></a>1.2.11 界面</h3><table><thead><tr><th>资源类型</th><th>前缀</th><th>后缀</th><th>备注</th></tr></thead><tbody><tr><td>Font</td><td>Font_</td><td></td><td></td></tr><tr><td>Slate Brush 地编刷</td><td>Brush_</td><td></td><td></td></tr><tr><td>Slate Widget Style</td><td>Style_</td><td></td><td></td></tr><tr><td>Widget Blueprint</td><td>WBP_ or WB_</td><td></td><td>选一个，建议使用 WBP_.</td></tr></tbody></table><h3 id="1-2-12-特效-Effects"><a href="#1-2-12-特效-Effects" class="headerlink" title="1.2.12 特效 Effects"></a>1.2.12 特效 Effects</h3><table><thead><tr><th>Asset Type</th><th>Prefix</th><th>Suffix</th><th>Notes</th></tr></thead><tbody><tr><td>Particle System 粒子系统</td><td>PS_</td><td></td><td></td></tr><tr><td>Material (Post Process) 后处理材质</td><td>PP_</td><td></td><td></td></tr></tbody></table><h2 id="2-目录结构"><a href="#2-目录结构" class="headerlink" title="2. 目录结构"></a>2. 目录结构</h2><p>对资源目录的规范管理和资源文件同等重要，都应该像法律一样被严格遵守。不规范的目录结构会导致严重的混乱。</p><p>有多种不同管理UE4资源目录的方法，在本套规范中，我们尽量利用了UE4的资源浏览器的过滤和搜索功能来查找资源，而不是按照资源类型来划分目录结构。</p><blockquote><p>如果你正确遵守了前面使用前缀的资源<a href="#1.2">命名规范</a>，那么就没有必要按照资源类型创建类似于<code>Meshes</code>, <code>Textures</code>, 和 <code>Materials</code>这样的目录结构，因为你可以在过滤器中通过前缀来找到特定类型的资源 , 按照此规范主要是为了避免产生资源之间的污染</p></blockquote><h3 id="2e1-目录结构示例"><a href="#2e1-目录结构示例" class="headerlink" title="2e1 目录结构示例"></a>2e1 目录结构示例</h3><p><code>下方示例皆时文件夹, 并非资产文件, 请区分它们</code></p><pre>|-- Content    |-- Project : 主项目(顶级目录)        |-- Environment : 环境地编资产库        |   |-- Foliage : 植被类型        |   |-- Props : 道具类型        |-- Characters : 角色资产库        |   |-- NpcA : 角色A        |   |   |-- Animations : 角色A的动作库        ||||-- Cinematic : 特定镜头的修正动作        |   |   |-- Audio : 角色A的音频库        |   |   |-- Clothes : 角色A的布料结算相关        ||||-- Cinematic : 特定镜头的修正特效        |   |   |-- Hair : 角色A的头发特效相关        |   |   |-- FX : 角色A的其他特效相关        |   |-- Common : 公用资源        |   |   |-- Animations : 动作库        |   |   |-- Audio : 音频库        |   |-- NpcB : 角色B        |-- Core : 程序相关的逻辑库        |   |-- Characters : 角色        |   |-- Engine : 引擎相关的        |   |-- GameModes : 游戏模式        |   |-- Attachments : 附件相关的逻辑(如武器)        |-- Effects : 公用的特效        ||-- Specific : 特殊用途的        |||-- Cinematic : 特定镜头的特殊修正特效        |   |-- Electrical : 雷        |   |-- Fire : 火        |||-- Cinematic : 特定镜头的特殊修正特效        |   |-- Weather : 天气        |||-- OpenVDB : 使用VDB格式的天气视效        |-- Maps : 关卡/地图        |   |-- Level01 : 关卡01        |   ||-- Branch01 : 关卡01-非全局分支版本01(如需保留)        |   ||-- Branch02 : 关卡01-非全局分支版本02(如需保留)        |   |-- Level02 : 关卡02        |-- Sequencer : 动画序列        ||-- Cut001 : 序列镜头001        ||-- Cut002 : 序列镜头002        |||-- Branch01 : 序列镜头002-非全局分支版本01        |||-- Branch02 : 序列镜头002-非全局分支版本01        ||-- Cut003 : 序列镜头003        |-- MaterialLibrary : 公用基础材质库        |   |-- Debug : 用于调试错误的材质        |   |-- Base : 基础材质        |   |-- Utility : 工具材质,如噪波        |   |-- Weathering : 天气相关的材质        |-- Attachments : 公用的附件库(有程序逻辑或特效的)            |-- Common : 通用类型的            |-- Knife : 特殊类型的武器附件,如匕首            |   |-- BuleHook : 特殊匕首A            |   |-- RedBlast : 特殊匕首B</pre><hr><pre>|-- Content    |-- Project : 项目开发主干(顶级目录)    |-- Project_Branch01 : 全局分支01 (顶级目录)    |-- Projectr_Branch02 : 全局分支02 (顶级目录 ; 应当尽可能避免更多分支)    |-- Project_UnityMigrate : 从Unity中迁移的特定文件(顶级目录)    |-- MegaScan : 第三方插件引入的(顶级目录)</pre><p><img data-src="/img/%E4%B8%80%E8%88%AC%E8%B5%84%E4%BA%A7%E6%93%8D%E4%BD%9C%E8%A7%84%E8%8C%83/webp-16494091352035-16494091365458.webp" alt="分支"></p><p>使用这种目录结构的原因列在下面</p><h3 id="2e2-有多个分支时"><a href="#2e2-有多个分支时" class="headerlink" title="2e2 有多个分支时"></a>2e2 有多个分支时</h3><p>在项目制作时, 总是能遇到需要从一个主项目中分支迭代出多个版本</p><ul><li><p>如果分支中有任何修改影响了全局的资源, 我们应该遵循 <strong>[2.2.4 容易维护DLC、子工程、以及补丁包]</strong> 来启用另一个顶级目录进行修改</p><ul><li>如果分支中仍然出现新的分支, 那么应当是考虑当前项目主干是否合理, 召集团队成员讨论是否需要合并分支状态</li></ul></li><li><p>如果分支没有对全局资源进行影响, 我们可以直接在当前分支前,新建一个<strong>Branch01(按顺序编号)目录</strong>,存放当前状态</p></li><li><p>如果属于并行分支, 应当参照 <strong>[版本控制系统]</strong> 来进行并行开发</p><ul><li>注意: 版本控制并不容易, 请做好深思熟虑</li></ul></li></ul><p><code>注意: 对于是否需要建立分支,请务必做出务实的考虑, 否则您可能面临的是同时在制作两个或者项目, 只是它们看起来名称一样</code></p><ul><li><p>如果不可避免产生了分支, 应当尽可能将分支控制在如下状况:</p><p><img data-src="/img/%E4%B8%80%E8%88%AC%E8%B5%84%E4%BA%A7%E6%93%8D%E4%BD%9C%E8%A7%84%E8%8C%83/Map1.png" alt="分支控制"></p></li><li><p>如果出现了较多的分支情况,并使用了 版本控制系统 应当控制在如下情况:</p></li></ul><p><img data-src="/img/%E4%B8%80%E8%88%AC%E8%B5%84%E4%BA%A7%E6%93%8D%E4%BD%9C%E8%A7%84%E8%8C%83/webp-164940922099610.png" alt="更多分支"></p><p>对于版本控制的操作, 请转到 **[版本控制控制] **章节</p><h3 id="2-1-文件夹命名"><a href="#2-1-文件夹命名" class="headerlink" title="2.1 文件夹命名"></a>2.1 文件夹命名</h3><blockquote><p> 关于文件夹的命名，有一些通用的规范 </p></blockquote><h4 id="2-1-1-使用PascalCase大小写规范"><a href="#2-1-1-使用PascalCase大小写规范" class="headerlink" title="2.1.1 使用PascalCase大小写规范"></a>2.1.1 使用PascalCase大小写规范</h4><p>文件夹的命名需要遵守PascalCase规范，也就是所有单词的首字母大写，并且中间没有任何连接符。例如<code>DesertEagle</code>, <code>RocketPistol</code>, and <code>ASeriesOfWords</code>.</p><p>参照<a href="#terms-cases">大小写规范</a>.</p><ul><li>应当尽可能在不使用前后缀 , 以及子名称的情况下 将文件夹名称表述清楚。但如果使用前后缀能够更加清晰得表述目的,就应当使用<ul><li>如:<code>WeaponPickable_Pistol </code>, <code>WeaponPickable_Rifle</code> 这样可以有效提高可读性</li></ul></li></ul><h4 id="2-1-2-不要使用空格"><a href="#2-1-2-不要使用空格" class="headerlink" title="2.1.2 不要使用空格"></a>2.1.2 不要使用空格</h4><p>作为对<a href="#2.1.1">2.1.1</a>的补充，绝对不要在目录名中使用空格。空格会导致引擎以及其他命令行工具出现错误，同样，也不要把你的工程放在包含有空格的目录下面，应该放在类似于<code>D:\Project</code>这样的目录里，而不是<code>C:\Users\My Name\My Documents\Unreal Projects</code>这样的目录。</p><h4 id="2-1-3-不要使用其他Unicode语言字符或奇怪的符号"><a href="#2-1-3-不要使用其他Unicode语言字符或奇怪的符号" class="headerlink" title="2.1.3 不要使用其他Unicode语言字符或奇怪的符号"></a>2.1.3 不要使用其他Unicode语言字符或奇怪的符号</h4><p>如果你游戏中的角色的名字叫做’Zoë’，那么文件夹要其名为<code>Zoe</code>。在目录名中使用这样的字符的后果甚至比使用空格还严重，因为某些引擎工具在设计时压根就没有考虑这种情况。</p><p>顺便说一句，如果你的工程碰到了类似于<a href="https://answers.unrealengine.com/questions/101207/undefined.html">这篇帖子</a>中的情况，并且当前使用的系统用户名中包含有Unicode字符（比如 <code>Zoë</code>），那么只要把工程从<code>My Documents</code>目录移到类似于<code>D:\Project</code>这种简单的目录里就可以解决了。</p><p>记住永远在目录名中只使用<code>a-z</code>, <code>A-Z</code>, 和 <code>0-9</code>这些安全的字符，如果你使用了类似于<code>@</code>, <code>-</code>, <code>_</code>, <code>,</code>, <code>*</code>, 或者 <code>#</code>这样的字符，难免会碰到一些操作系统、源码管理工具或者一些弱智的工具让你吃个大亏。</p><h3 id="2-2-使用一个顶级目录来保存所有工程资源"><a href="#2-2-使用一个顶级目录来保存所有工程资源" class="headerlink" title="2.2 使用一个顶级目录来保存所有工程资源"></a>2.2 使用一个顶级目录来保存所有工程资源</h3><p>所有的工程资源都应该保存在一个以工程名命名的目录中。例如你有一个工程叫做’Generic Shooter’，那么所有该工程的资源都应该保存在<code>Content/GenericShooter</code>目录中。</p><blockquote><p>开发者目录<code>Developers</code>不用受此限制，因为开发者资源是跨工程使用的，参照下面的<a href="#2.3">开发者目录</a>中的详细说明。</p></blockquote><p>使用顶级目录的原因有很多。</p><h4 id="2-2-1-避免全局资源"><a href="#2-2-1-避免全局资源" class="headerlink" title="2.2.1 避免全局资源"></a>2.2.1 避免全局资源</h4><p>通常在代码规范中会警告你不要使用全局变量以避免污染全局命名空间。基于同样的道理，不存在于工程目录中的资源对于资源管理会造成不必要的干扰。</p><p>每个属于项目资源都应该有它存在的目的。如果仅仅是为了测试或者体验而使用的资源，那么这些资源应该放在<a href="#2.3"><code>开发者</code></a>目录中。</p><h4 id="2-2-2-减少资源迁移时的冲突"><a href="#2-2-2-减少资源迁移时的冲突" class="headerlink" title="2.2.2 减少资源迁移时的冲突"></a>2.2.2 减少资源迁移时的冲突</h4><p>当一个团队有多个项目时，从一个项目中把资源拷贝到另一个项目会非常频繁，这时最方便的方法就是使用引擎的资源浏览器提供的Migrate功能，因为这个功能会把资源的依赖项一起拷贝到目标项目中。</p><ul><li>这些依赖项经常造成麻烦。如果两个工程没有项目顶级目录，那么这些依赖项很容易就会被拷贝过来的同名资源覆盖掉，从而造成意外的更改。</li></ul><p>这也是为什么EPIC会强制要求商城中出售的资源要遵守同样的规定的原因</p><ul><li>执行完Migrate资源拷贝后，安全的资源合并方法是使用资源浏览器中的’替换引用’(Replace References)工具，把不属于工程目录中的资源引用替换掉。一旦资源资源完成完整的合并流程，工程目录中不应该存在另一个工程的顶级目录。这种方法可以_100%_保证资源合并的安全性。</li></ul><h5 id="2-2-2e1-举例：基础材质的麻烦"><a href="#2-2-2e1-举例：基础材质的麻烦" class="headerlink" title="2.2.2e1 举例：基础材质的麻烦"></a>2.2.2e1 举例：基础材质的麻烦</h5><p>举个例子，你在一个工程中创建了一个基础材质，然后你把这个材质迁移到了另一个工程中。如果你的资源结构中没有顶级目录的设计，那么这个基础材质可能放在<code>Content/MaterialLibrary/M_Master</code>这样的目录中，如果目标工程原本没有这个材质，那么很幸运暂时不会有麻烦。</p><p>随着两个工程的推荐，有可能这个基础材质因工程的需求不同而发生了不同的修改。</p><p>问题出现在，其中一个项目的美术制作了一个非常不错的模型资源，另一个项目的美术想拿过来用。而这个资源使用了<code>Content/MaterialLibrary/M_Master</code>这个材质，那么当迁移这个模型时，<code>Content/MaterialLibrary/M_Master</code>这个资源就会出现冲突。</p><p>这种冲突难以解决也难以预测，迁移资源的人可能压根就不熟悉工程所依赖的材质是同一个人开发的，也不清楚所依赖的资源已经发生了冲突，迁移资源必须同时拷贝资源依赖项，所以<code>Content/MaterialLibrary/M_Master</code>就被莫名其妙覆盖了。</p><p>和这种情况类似，任何资源的依赖项的不兼容都会让资源在迁移中被破坏掉，如果没有资源顶级目录，资源迁移就会变成一场非常让人恶心的任务。</p><h4 id="2-2-3-范例，模板以及商场中的资源都是安全没有风险的"><a href="#2-2-3-范例，模板以及商场中的资源都是安全没有风险的" class="headerlink" title="2.2.3 范例，模板以及商场中的资源都是安全没有风险的"></a>2.2.3 范例，模板以及商场中的资源都是安全没有风险的</h4><p>正如上面<a href="#2.2.2">2.2.2</a>所讲，如果一个团队想把官方范例、模板以及商城中购买的资源放到自己的工程中，那么这些资源都是可以保证不会干扰现有工程的，除非你购买的资源工程和你的工程同名。</p><p>当然也不能完全信任商城上的资源能够完全遵守<a href="#2.2">顶级目录规则</a>。的确有一些商城资源，尽管大部分资源放在了顶级目录下面，但仍然留下了部分资源污染了<code>Content</code>目录</p><p>如果坚持这个原则<a href="#2.2">2.2</a>，最糟糕的情况就是购买了两个不同的商场资源，结果发现他们使用了相同的EPIC的示例资源。但只要你坚持把自己的资源放在自己的工程目录中，并且把使用的EPIC示例资源也放在自己的目录中，那么自己工程也不会受到影响。</p><h4 id="2-2-4-容易维护DLC、子工程、以及补丁包"><a href="#2-2-4-容易维护DLC、子工程、以及补丁包" class="headerlink" title="2.2.4 容易维护DLC、子工程、以及补丁包"></a>2.2.4 容易维护DLC、子工程、以及补丁包</h4><p>如果你的工程打算开发DLC或者子工程，那么这些子工程所需要的资源应该迁移出来放在另一个顶级目录中，这样的结构使得编译这些版本时可以区别对待子工程中的资源。子工程中的资源的迁入和迁出代价也更小。如果你想在子项目中修改一些原有工程中的资源，那么可以把这些资源迁移到子工程目录中，这样不会破坏原有工程。</p><ul><li>注意: 所有对主干有不同的改动,应当只在分支操作, 这很重要</li></ul><h3 id="2-3-用来做临时测试的开发者目录"><a href="#2-3-用来做临时测试的开发者目录" class="headerlink" title="2.3 用来做临时测试的开发者目录"></a>2.3 用来做临时测试的开发者目录</h3><p>开发者目录存在于 <code>/Content/Developers</code></p><p>在一个项目的开发期间，团队成员经常会有一个’沙箱’目录用来做测试而不会影响到工程本身。因为工作是连续的，所以即使这些’沙箱’目录也需要上传到源码服务器上保存。但并不是所有团队成员都需要这种开发者目录的，但使用开发者目录的成员来说，一旦这些目录是在服务器上管理的，总会需要一些麻烦事。</p><p>首先团队成员极容易使用这些尚未准备好的资源，这些资源一旦被删除就会引发问题。例如一个做模型的美术正在调整一个模型资源，这时一个做场景编辑的美术如果在场景中使用了这个模型，那么很可能会导致莫名其妙的问题，进而造成大量的工作浪费。</p><p>但如果这些模型放在开发者目录中，那么场景美术人员就没有任何理由使用这些资源。资源浏览器的缺省设置会自动过滤掉这个目录，从而保证正常情况下不可能出现被误用的情况。</p><p>一旦这些资源真正准备好，那么美术人员应该把它们移到正式的工程目录中并修复引用关系，这实际上是让资源从实验阶段’推进’到了生产阶段。</p><p>注意: <code>/Content/Developers</code>此路径不会直接在编辑器中暴露,但是也不能因此滥用此目录</p><h3 id="2-4-所有的地图"><a href="#2-4-所有的地图" class="headerlink" title="2.4 所有的地图"></a>2.4 所有的地图</h3><p>地图文件非常特殊，几乎所有工程都有自己的一套关于地图的命名规则，尤其是使用了sub-levels或者streaming levels技术时。但不管你如何组织自己的命名规则，都应该把所有地图保存在<code>/Content/Project/Maps</code></p><p>记住，尽量使用不浪费大家的时间的方法去解释你的地图如何打开。比如通过子目录的方法去组织地图资源，例如建立 <code>Maps/Campaign1/</code> 或 <code>Maps/Arenas</code>，但最重要的是一定要都放在<code>/Content/Project/Maps</code></p><p>这也有助于产品的打版本工作，如果工程里的地图保存的到处都是，版本工程师还要到处去找，就让人很恼火了，而把地图放在一个地方，做版本时就很难漏掉某个地图，对于烘培光照贴图或者质量检查都有利。</p><h3 id="2-5-使用Core目录存储系统蓝图资源以及其他系统资源"><a href="#2-5-使用Core目录存储系统蓝图资源以及其他系统资源" class="headerlink" title="2.5 使用Core目录存储系统蓝图资源以及其他系统资源"></a>2.5 使用<code>Core</code>目录存储系统蓝图资源以及其他系统资源</h3><p>使用<code>/Content/Project/Core</code>这个目录用来保存一个工程中最为核心的资源。例如，非常基础的<code>GameMode</code>, <code>Character</code>, <code>PlayerController</code>, <code>GameState</code>, <code>PlayerState</code>，以及如此相关的一些资源也应该放在这里。</p><p>这个目录非常明显的告诉其他团队成员:”不要碰我！”。非引擎程序员很少有理由去碰这个目录，如果工程目录结构合理，那么游戏设计师只需要使用子类提供的功能就可以工作，负责场景编辑的员工只需要使用专用的的蓝图就可以，而不用碰到这些基础类。</p><p>例如，如果项目需要设计一种可以放置在场景中并且可以被捡起的物体，那么应该首先设计一个具有被捡起功能的基类放在<code>Core/Pickups</code>目录中，而各种具体的可以被捡起的物体诸如药瓶、子弹这样的物体，应该放在<code>/Content/Project/Placeables/Pickups/</code>这样的目录中。游戏设计师可以在这些目录中定义和设计这些物体，所以他们不应该去碰<code>Core/Pickups</code>目录下的代码，要不然可能无意中破坏工程中的其他功能</p><h3 id="2-6-不要创建名为Assets-或者-AssetTypes的目录"><a href="#2-6-不要创建名为Assets-或者-AssetTypes的目录" class="headerlink" title="2.6 不要创建名为Assets 或者 AssetTypes的目录"></a>2.6 不要创建名为<code>Assets</code> 或者 <code>AssetTypes</code>的目录</h3><h4 id="2-6-1-创建一个名为Assets的目录是多余的。"><a href="#2-6-1-创建一个名为Assets的目录是多余的。" class="headerlink" title="2.6.1 创建一个名为Assets的目录是多余的。"></a>2.6.1 创建一个名为<code>Assets</code>的目录是多余的。</h4><p>因为本来所有目录就是用来保存资源的</p><h4 id="2-6-2-创建名为Meshes、-Textures或者Materials的目录是多余的。"><a href="#2-6-2-创建名为Meshes、-Textures或者Materials的目录是多余的。" class="headerlink" title="2.6.2 创建名为Meshes、 Textures或者Materials的目录是多余的。"></a>2.6.2 创建名为<code>Meshes</code>、 <code>Textures</code>或者<code>Materials</code>的目录是多余的。</h4><p>资源的文件名本身已经提供了资源类型信息，所以在目录名中再提供资源类型信息就是多余了，而且使用资源浏览器的过滤功能，可以非常便利的提供相同的功能。</p><p>比如想查看<code>Environment/Rocks/</code>目录下所有的静态Mesh资源？只要打开静态Mesh过滤器就可以了，如果所有资源的文件名已经正确命名，这些文件还会按照文件名和前缀正确排序，如果想查看所有静态Mesh和带有骨骼的Mesh资源，只要打开这两个过滤器就可以了，这种方法要比通过打开关闭文件夹省事多了。</p><blockquote><p>这种方法也能够节省路径长度，因为用前缀<code>S_</code>只有两个字符，要比使用<code>Meshes/</code>七个字符短多了。</p></blockquote><p>这么做其实也能防止有人把Mesh或者纹理放在<code>Materials</code>目录这种愚蠢行为。</p><h3 id="2-7-超大资源要有自己的目录结构"><a href="#2-7-超大资源要有自己的目录结构" class="headerlink" title="2.7 超大资源要有自己的目录结构"></a>2.7 超大资源要有自己的目录结构</h3><p>这节可以视为针对<a href="#2.6">2.6</a>的补充</p><p>有一些资源类型通常文件数量巨大，而且每个作用都不同。典型的例子是动画资源和声音资源。如果你发现有15个以上的资源属于同一个逻辑类型，那么它们应该被放在一起。</p><p>举例来说，角色共用的动画资源应该放在<code>Characters/Common/Animations</code>目录中，并且其中应该还有诸如<code>Locomotion</code> 或者<code>Cinematic</code>的子目录</p><blockquote><p>这并不适用与纹理和材质。比如<code>Rocks</code>目录通常会包含数量非常多的纹理，但每个纹理都都是属于特定的石头的，它们应该被正确命名就足够了。即使这些纹理属于<a href="#2.8">材质库</a></p></blockquote><h3 id="2-8-材质库MaterialLibrary"><a href="#2-8-材质库MaterialLibrary" class="headerlink" title="2.8 材质库MaterialLibrary"></a>2.8 材质库<code>MaterialLibrary</code></h3><p>如果你的工程中使用了任何基础材质、分层材质，或者任何被重复使用而不属于特定模型的材质和纹理，这些资源应该放在材质库目录<code>Content/Project/MaterialLibrary</code>。</p><p>这样可以很容易管理这些’全局’材质</p><blockquote><p>这也使得’只是用材质实例’这个原则得以执行的比较容易。如果所有的美术人员都只是用材质实例，那么所有的原始材质都应该保存在这个目录中。你可以通过搜索所有不在<code>MaterialLibrary</code>中的基础材质来验证这一点。</p></blockquote><p><code>MaterialLibrary</code>这个目录并不是仅能保存材质资源，一些共用的工具纹理、材质函数以及其他具有类似属性的资源都应该放在这个目录或子目录中。例如，噪声纹理应该保存在<code>MaterialLibrary/Utility</code>目录中。</p><p>任何用来测试或调试的材质应该保存在<code>MaterialLibrary/Debug</code>中，这样当工程正式发布时，可以很容易把这些材质从删除，因为这些材质如果不删除，可能在最终产品中非常扎眼。</p><h3 id="2-9-不要使用空文件夹-版本控制相关"><a href="#2-9-不要使用空文件夹-版本控制相关" class="headerlink" title="2.9 不要使用空文件夹 版本控制相关"></a>2.9 不要使用空文件夹 <code>版本控制相关</code></h3><p>根本不应该有任何空文件夹。它们会使内容浏览器变得非常混乱。</p><p>如果您发现内容浏览器有一个无法删除的空文件夹，您应该执行以下操作：</p><ul><li><ol><li>确保已经使用源代码管理。</li></ol></li><li><ol start="2"><li>立即在您的项目上运行 Fix Up Redirectors。</li></ol></li><li><ol start="3"><li>导航到磁盘上的文件夹并删除其中的资产。</li></ol></li><li><ol start="4"><li>关闭编辑器。</li></ol></li><li><ol start="5"><li>确保您的源代码控制状态是同步的（即，如果使用 Perforce，请在您的内容目录上运行 Reconcile Offline Work）</li></ol></li><li><ol start="6"><li>打开编辑器。确认一切仍按预期工作。如果没有，请还原，找出问题所在，然后重试。</li></ol></li><li><ol start="7"><li>确保该文件夹现已消失。</li></ol></li><li><ol start="8"><li>向源代码管理提交更改。</li></ol></li></ul><h2 id="3-蓝图"><a href="#3-蓝图" class="headerlink" title="3. 蓝图"></a>3. 蓝图</h2><p>这一章会专注于蓝图和蓝图的实现。如果可能的话，本规则和<a href="https://docs.unrealengine.com/latest/INT/Programming/Development/CodingStandard">Epic官方提供的标准</a>一致。</p><blockquote><p>Remember: Blueprinting badly bears blunders, beware! (Phrase by <a href="http://github.com/KorkuVeren">KorkuVeren</a>)</p></blockquote><h2 id="4-Mesh-网格体"><a href="#4-Mesh-网格体" class="headerlink" title="4. * Mesh 网格体"></a>4. * Mesh 网格体</h2><p>本节将重点介绍静态网格资产及其内部结构。</p><h3 id="4-1-网格体-UV"><a href="#4-1-网格体-UV" class="headerlink" title="4.1 网格体 UV"></a>4.1 网格体 UV</h3><p>如果Linter 报告了错误或损坏的UV, 而您似乎无法追踪到它, 去您的项目 <code>Saved/Logs</code> 文件夹中找到<code>.log</code>文件, 它包含了绝大数的错误细节.</p><h4 id="4-1-1-所有网格体必须用-UV"><a href="#4-1-1-所有网格体必须用-UV" class="headerlink" title="4.1.1 所有网格体必须用 UV"></a>4.1.1 所有网格体必须用 UV</h4><p>很简单, 引擎计算需要UV。所有网格，无论它们如何被使用，都不应缺少 UV。</p><h4 id="4-1-2-所有网格都不能在需要光照贴图的UV上重叠"><a href="#4-1-2-所有网格都不能在需要光照贴图的UV上重叠" class="headerlink" title="4.1.2 所有网格都不能在需要光照贴图的UV上重叠"></a>4.1.2 所有网格都不能在需要光照贴图的UV上重叠</h4><p>很简单, 你不想要有莫名其妙的黑块。所有网格，无论它们如何使用，都应该具有有效的非重叠 UV。</p><h3 id="4-2-应正确设置-LOD"><a href="#4-2-应正确设置-LOD" class="headerlink" title="4.2 应正确设置 LOD"></a>4.2 应正确设置 LOD</h3><p>这是基于每个项目的主观检查，但作为一般规则，可以在不同距离看到的任何网格 , 都应具有适当的 LOD。</p><h3 id="4-3-模块化组合的资产应该干净利落地捕捉到网格"><a href="#4-3-模块化组合的资产应该干净利落地捕捉到网格" class="headerlink" title="4.3 模块化组合的资产应该干净利落地捕捉到网格"></a>4.3 模块化组合的资产应该干净利落地捕捉到网格</h3><p>这是基于每个资产的主观检查，但是任何模块化组合的资产都应根据项目的 网格设置 直接简单捕捉网格 即可组合在一起。</p><p>取决于项目 , 决定是基于 2 的幂次方, 还是基于 10 个单位网格的捕捉。但是，如果您正在为 项目或者商城 创作模块化组合的资产，Epic 的要求是，当网格设置为 10 个单位或更大时，它们必须能直接捕捉到网格。</p><h3 id="4-4-所有网格都必须有碰撞体"><a href="#4-4-所有网格都必须有碰撞体" class="headerlink" title="4.4 所有网格都必须有碰撞体"></a>4.4 所有网格都必须有碰撞体</h3><p>无论资产是否将用于关卡中的碰撞检测，所有网格都应定义正确的设置碰撞体。</p><p>这有助于引擎处理边界计算、遮挡和照明等问题。也应该对碰撞体形成良好的规范。</p><h3 id="4-5-所有网格都应正确缩放"><a href="#4-5-所有网格都应正确缩放" class="headerlink" title="4.5 所有网格都应正确缩放"></a>4.5 所有网格都应正确缩放</h3><p>这是基于每个项目的主观检查，但是所有资产都应正确缩放到其项目目标比例。</p><p>关卡设计师或蓝图开发者不应该需要在编辑器中为了确认正确的大小而调整网格的比例。</p><p>任何在引擎中的缩放网格应被视为缩放覆盖，而不是缩放校正。</p><h2 id="5-Niagara-粒子系统"><a href="#5-Niagara-粒子系统" class="headerlink" title="5. Niagara 粒子系统"></a>5. Niagara 粒子系统</h2><p>本节将重点关注Niagara例子系统的资源与其内部规范。</p><h3 id="5-1-不要有空格-绝不"><a href="#5-1-不要有空格-绝不" class="headerlink" title="5.1 不要有空格!绝不!"></a>5.1 不要有空格!绝不!</h3><p>请查看默认命名原则. 空格在引擎系统中是绝对不被允许的!! </p><p>对于 Niagara 系统来说尤其如此，因为当在 Niagara 中使用 HLSL 或其他脚本编写方式时,</p><p>如果尝试引用标识符，即使不是不可能，它也会使处理事情变得更加困难。</p><h2 id="6-关卡-x2F-地图"><a href="#6-关卡-x2F-地图" class="headerlink" title="6. 关卡 &#x2F; 地图"></a>6. 关卡 &#x2F; 地图</h2><p><code>我们此处将关卡与地图定义为统一概念。</code></p><p>本节将重点介绍关卡资产及其内部结构。</p><h3 id="6-1-没有错误或警告"><a href="#6-1-没有错误或警告" class="headerlink" title="6.1 没有错误或警告"></a>6.1 没有错误或警告</h3><p>所有级别都应是零错误或加载警告的。如果一个关卡加载时有任何错误或警告，应立即修复它们以防止出现级联错误问题。</p><p>您可以使用控制台命令“<strong>map check</strong>”在编辑器中的打开的关卡上运行错误检查。</p><p>注意：Linter 在这方面比编辑器目前更严格，并且会捕获编辑器自行解决的加载错误。</p><h3 id="6-2-应当构建照明"><a href="#6-2-应当构建照明" class="headerlink" title="6.2 应当构建照明"></a>6.2 应当构建照明</h3><p>在开发过程中，关卡偶尔没有构建照明是正常的。</p><p>但是，在进行 测试&#x2F;内部&#x2F;发版构建 或 任何要分发的构建时，应始终构建照明 , 不然在运行时总是会有奇怪的错误出现。</p><h3 id="6-3-无用户可见的-Z-Fighting-深度重叠"><a href="#6-3-无用户可见的-Z-Fighting-深度重叠" class="headerlink" title="6.3 无用户可见的 Z Fighting (深度重叠)"></a>6.3 无用户可见的 Z Fighting (深度重叠)</h3><p>不应在玩家可见的所有区域中 ,  出现任何 z-fighting , 因为它们太抢眼了。</p><h3 id="6-4-UE商城特定规则-理论上无用"><a href="#6-4-UE商城特定规则-理论上无用" class="headerlink" title="6.4 UE商城特定规则 (理论上无用)"></a>6.4 UE商城特定规则 (理论上无用)</h3><p>如果一个项目要在 UE4 商城上出售，它必须遵循这些规则。</p><h4 id="6-4-1-概述关卡"><a href="#6-4-1-概述关卡" class="headerlink" title="6.4.1 概述关卡"></a>6.4.1 概述关卡</h4><p>如果您的项目包含应可视化或演示的资产，则您的项目中必须有一个包含名称“Overview”(概述)的地图。</p><p>如果是可视化资产，则此概览图应根据 <a href="http://help.epicgames.com/customer/en/portal/articles/2592186-marketplace-submission-guidelines-preparing-your-assets#Required%20Levels%20and%20Maps">Epic 的指南</a>进行设置。</p><p><code>(https://www.epicgames.com/help/zh-CN/#Required Levels and Maps)</code></p><h4 id="6-4-2-演示关卡"><a href="#6-4-2-演示关卡" class="headerlink" title="6.4.2 演示关卡"></a>6.4.2 演示关卡</h4><p>如果您的项目包含应演示或附带某种教程的资产，则您的项目中必须有一个包含名称“Demo”的地图。</p><p>此关卡还应包含以某种形式说明如何使用您的项目的文档。</p><p>请参阅 Epic 的内容示例项目, 以学习如何制作演示关卡。</p><h1 id="版本控制系统"><a href="#版本控制系统" class="headerlink" title="[版本控制系统]"></a>[版本控制系统]</h1><h2 id="1-版本控制的介绍"><a href="#1-版本控制的介绍" class="headerlink" title="1. 版本控制的介绍"></a>1. 版本控制的介绍</h2><h1 id="资产制作环节项目组织结构"><a href="#资产制作环节项目组织结构" class="headerlink" title="[资产制作环节项目组织结构]"></a>[资产制作环节项目组织结构]</h1><h2 id="资源-x2F-资产在制作环节的项目结构设置"><a href="#资源-x2F-资产在制作环节的项目结构设置" class="headerlink" title="资源&#x2F;资产在制作环节的项目结构设置"></a>资源&#x2F;资产在制作环节的项目结构设置</h2><h3 id="设置工程路径"><a href="#设置工程路径" class="headerlink" title="设置工程路径"></a>设置工程路径</h3><ul><li><h6 id="设置工程映射"><a href="#设置工程映射" class="headerlink" title="设置工程映射"></a>设置工程映射</h6><ul><li>运行***[将当前目录创建为永久网络磁盘P_需管理员.bat]***文件<ul><li>示例图像</li></ul></li></ul><img data-src="image-20220407123608882.png" alt="image-20220407123608882" style="zoom:50%;" /><ul><li><p>运行结束后, 在我的电脑路径下会<strong>新增一个 盘符P</strong></p></li><li><p>进入盘符P, 此盘符为您的<strong>工作环境目录</strong>, 请确保所有文件操作<strong>在此目录工作</strong></p><ul><li><p>以下图示:</p><img data-src="image-20220407140147738.png" alt="image-20220407140147738" style="zoom:50%;" /></li></ul></li></ul></li></ul><h2 id="综合-DCC"><a href="#综合-DCC" class="headerlink" title="综合 DCC"></a>综合 DCC</h2><h3 id="3Dmax"><a href="#3Dmax" class="headerlink" title="3Dmax"></a>3Dmax</h3><h3 id="Maya"><a href="#Maya" class="headerlink" title="Maya"></a>Maya</h3><h3 id="Blender"><a href="#Blender" class="headerlink" title="Blender"></a>Blender</h3><h2 id="雕刻工具"><a href="#雕刻工具" class="headerlink" title="雕刻工具"></a>雕刻工具</h2><h3 id="ZBrush"><a href="#ZBrush" class="headerlink" title="ZBrush"></a>ZBrush</h3><h3 id="MudBox"><a href="#MudBox" class="headerlink" title="MudBox"></a>MudBox</h3><h2 id="材质处理"><a href="#材质处理" class="headerlink" title="材质处理"></a>材质处理</h2><h3 id="Substance-Painter"><a href="#Substance-Painter" class="headerlink" title="Substance Painter"></a>Substance Painter</h3><h3 id="Substance-Designer"><a href="#Substance-Designer" class="headerlink" title="Substance Designer"></a>Substance Designer</h3><h2 id="特效"><a href="#特效" class="headerlink" title="特效"></a>特效</h2><h3 id="Houdini"><a href="#Houdini" class="headerlink" title="Houdini"></a>Houdini</h3><h2 id="合成-x2F-后处理"><a href="#合成-x2F-后处理" class="headerlink" title="合成&#x2F;后处理"></a>合成&#x2F;后处理</h2><h3 id="Nuke"><a href="#Nuke" class="headerlink" title="Nuke"></a>Nuke</h3><h3 id="Photoshop"><a href="#Photoshop" class="headerlink" title="Photoshop"></a>Photoshop</h3><h3 id="Premiere"><a href="#Premiere" class="headerlink" title="Premiere"></a>Premiere</h3><h2 id="离线-x2F-射线追踪渲染器"><a href="#离线-x2F-射线追踪渲染器" class="headerlink" title="离线&#x2F;射线追踪渲染器"></a>离线&#x2F;射线追踪渲染器</h2><h3 id="Anorld"><a href="#Anorld" class="headerlink" title="Anorld"></a>Anorld</h3><h3 id="Vray"><a href="#Vray" class="headerlink" title="Vray"></a>Vray</h3><h1 id="遵循的标准"><a href="#遵循的标准" class="headerlink" title="[遵循的标准]"></a>[遵循的标准]</h1><h2 id="标准单位"><a href="#标准单位" class="headerlink" title="标准单位"></a>标准单位</h2><h3 id="三维"><a href="#三维" class="headerlink" title="三维"></a>三维</h3><ul><li>在无特殊指定的情况下, 我们将单位<strong>默认</strong>指定为 CM(厘米)</li><li>对于UDK(Unreal Engine) 中的单位换算为 : 每Unreal单位为 1 CM(厘米)<ul><li>详见于 <a href="https://docs.unrealengine.com/udk/Three/UnrealUnits.html">UDK | UnrealUnits (unrealengine.com)</a></li></ul></li><li>若无指定手系,<strong>默认</strong>全部以**右手(RH)**坐标系作为参照</li><li>若无指定图形RHI实现, <strong>默认</strong>全以<strong>DirectX</strong>作为RHI</li></ul><hr><h3 id="二维"><a href="#二维" class="headerlink" title="二维"></a>二维</h3><ul><li><p>在无特殊指定的情况下, 默认使用px(pixle&#x2F;像素)作为单位</p></li><li><p>在无特殊指定的情况下, 默认使用72DPI(每英寸的像素)作为解析度参照标准</p></li><li><p>对于任意可能被用于制作的素材图像, 应当不低于2048px * 2048px @ 72DPI 的分辨率</p></li></ul><h3 id="一维"><a href="#一维" class="headerlink" title="一维"></a>一维</h3><ul><li>默认使用 有符号单精度浮点, 即 4个字节（32位）</li></ul><hr><h2 id="色彩空间"><a href="#色彩空间" class="headerlink" title="色彩空间"></a>色彩空间</h2><h3 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h3><ul><li><strong>为了简易应对常见情况, 不应当作为色彩管理的准则</strong></li></ul><h3 id="三维-1"><a href="#三维-1" class="headerlink" title="三维"></a>三维</h3><ul><li>在无特殊指定的情况下 , <strong>包含色彩信息时</strong>,<strong>默认</strong>遵循 sRGB 作为色彩空间</li><li>若使用了OCIO色彩管理系统, <strong>包含色彩信息时</strong>,<strong>默认</strong>遵循Aces sRGB 作为色彩空间</li><li>如<strong>非色彩信息</strong>, 不使用任何色彩空间, 仅为<strong>线性(Linear)</strong></li></ul><hr><h3 id="二维-1"><a href="#二维-1" class="headerlink" title="二维"></a>二维</h3><ul><li>在无特殊指定的情况下 , <strong>包含色彩信息时</strong>,<strong>默认</strong>遵循 sRGB 作为色彩空间</li><li>使用OCIO等色彩管理系统时, 默认不做任何直接图像色彩管理, 直接转换为线性, 使用OCIO系统或Lut管理</li><li>如<strong>非色彩信息</strong>, 不使用任何色彩空间, 仅为<strong>线性(Linear)</strong></li></ul><hr><h1 id="CG-Teamwork-控制系统"><a href="#CG-Teamwork-控制系统" class="headerlink" title="CG Teamwork (控制系统)"></a>CG Teamwork (控制系统)</h1><h2 id="资产修改"><a href="#资产修改" class="headerlink" title="[资产修改]"></a>[资产修改]</h2><h2 id="资产提交"><a href="#资产提交" class="headerlink" title="[资产提交]"></a>[资产提交]</h2><h2 id="资产引用"><a href="#资产引用" class="headerlink" title="[资产引用]"></a>[资产引用]</h2><h2 id="资产更新与同步"><a href="#资产更新与同步" class="headerlink" title="[资产更新与同步]"></a>[资产更新与同步]</h2><h3 id="同步上下游的流程"><a href="#同步上下游的流程" class="headerlink" title="* 同步上下游的流程"></a>* 同步上下游的流程</h3><h2 id="导入到引擎奇前准备"><a href="#导入到引擎奇前准备" class="headerlink" title="[导入到引擎奇前准备]"></a>[导入到引擎奇前准备]</h2>]]></content>
      
      
      <categories>
          
          <category> 文檔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 規範 </tag>
            
            <tag> 文檔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>水文指南</title>
      <link href="/2022/04/20/Water-01/"/>
      <url>/2022/04/20/Water-01/</url>
      
        <content type="html"><![CDATA[<h1 id="在Hexo下水文章"><a href="#在Hexo下水文章" class="headerlink" title="在Hexo下水文章"></a>在Hexo下水文章</h1><p>免得时间长了没水, 不知道怎么水</p><span id="more"></span>   <h2 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h2><p>在hexo博客目录下，进入Git Bash命令窗口中，输入以下命令: </p><p><code> $ hexo new &quot;Water_01&quot;</code></p><ul><li>添加一篇水文章</li></ul><h1 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h1><ul><li>文件的开头是属性，采用统一的yaml格式，用三条短横线分隔</li></ul><h3 id="文章标题："><a href="#文章标题：" class="headerlink" title="文章标题："></a>文章标题：</h3><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: 在这里</span><br><span class="line">date: 好日子</span><br><span class="line"><span class="keyword">tags:</span></span><br><span class="line">- Blog           //多个标签可以这样添加</span><br><span class="line">- hexo</span><br><span class="line">categories: </span><br><span class="line">- 博客</span><br></pre></td></tr></table></figure><h3 id="詳情預覽"><a href="#詳情預覽" class="headerlink" title="詳情預覽:"></a>詳情預覽:</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--more--&gt;</span>   </span><br></pre></td></tr></table></figure><h2 id="水文章"><a href="#水文章" class="headerlink" title="水文章"></a>水文章</h2><ul><li><p>快速部署</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean <span class="variable">&amp;&amp;</span> hexo g <span class="variable">&amp;&amp;</span> hexo d</span><br></pre></td></tr></table></figure></li><li><p>快速預覽</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean <span class="variable">&amp;&amp;</span> hexo g <span class="variable">&amp;&amp;</span> hexo s</span><br></pre></td></tr></table></figure></li></ul><h2 id="额外的插件"><a href="#额外的插件" class="headerlink" title="额外的插件"></a>额外的插件</h2><h4 id="在博文中添加图片-1"><a href="#在博文中添加图片-1" class="headerlink" title="在博文中添加图片(1)"></a>在博文中添加图片(1)</h4><ol><li><p>在hexo目录下，安装插件：</p><p> <code>npm install hexo-asset-image --save</code></p></li><li><p>在hexo\source 目录下新建一个img文件夹，把图片放置在里面</p></li><li><p>在Water_xx.md文件中引用图片:</p><p> <code> ![header]( img/header.jpg)</code></p></li></ol><h4 id="在博文中添加图片-2"><a href="#在博文中添加图片-2" class="headerlink" title="在博文中添加图片(2)"></a>在博文中添加图片(2)</h4><ol><li><p>在全局配置文件<strong>hexo&#x2F;_config.yml</strong> 中将<u>post_asset_folder</u>设置为<u>true</u></p></li><li><p>创建文章（在创建的时候，会在hexo&#x2F;source&#x2F;_post目录下，生成一个XXX.md文件和一个XXX的文件夹）</p><p> <code>hexo new &quot;XXX&quot;</code></p></li><li><p>把XXX这个博文需要展示的图片放在XXX文件夹目录下</p></li><li><p>在XXX.md文件中引入图片的方式：</p><p> <code>&#123;% asset_img example.jpg This is an example image %&#125;</code></p></li></ol><h4 id="Hexo-Next主题设置文章置顶"><a href="#Hexo-Next主题设置文章置顶" class="headerlink" title="Hexo Next主题设置文章置顶"></a>Hexo Next主题设置文章置顶</h4><ol><li><p>执行下面两行命令：</p><p><code> npm uninstall hexo-generator-index --save</code> </p><p><code>npm install hexo-generator-index-pin-top --save</code></p></li><li><p>在新增文章的开头中加入<strong>top: true</strong>，比如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span> <span class="string">Next主题设置文章置顶</span></span><br><span class="line"><span class="attr">id:</span> <span class="string">a1</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020-01-03 17:26:01</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">Hexo</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">Next主题</span></span><br><span class="line"><span class="attr">top:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></li><li><p>设置置顶标志</p></li></ol><ul><li><p>打开<strong>\themes\your theme\layout_macro\post.swig</strong></p></li><li><p>找到&lt;div class&#x3D;”post-meta”&gt;下面插入一下代码：</p> <figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> post.top %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-thumb-tack&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;RED&quot;</span>&gt;</span>置顶<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-divider&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br></pre></td></tr></table></figure></li></ul><h4 id="如何设置页面文章的篇数？"><a href="#如何设置页面文章的篇数？" class="headerlink" title="如何设置页面文章的篇数？"></a>如何设置页面文章的篇数？</h4><ul><li><p>在 Hexo 里可以为首页和归档页面设置不同的文章篇数，但可能需要安装 Hexo 插件。详细步骤如下。</p><ol><li>使用 <code>npm install --save</code> 命令来安装需要的 Hexo 插件。</li></ol>   <figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --<span class="keyword">save</span> hexo-generator-<span class="built_in">index</span></span><br><span class="line">npm install --<span class="keyword">save</span> hexo-generator-archive</span><br><span class="line">npm install --<span class="keyword">save</span> hexo-generator-tag</span><br></pre></td></tr></table></figure><ol start="2"><li>等待扩展全部安装完成后，在 <strong>站点配置文章</strong> 中，设定如下选项：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="attr">archive_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">20</span></span><br><span class="line">  <span class="attr">yearly:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">monthly:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tag_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure></li></ol></li></ul><h1 id="升级Hexo模块"><a href="#升级Hexo模块" class="headerlink" title="升级Hexo模块"></a>升级Hexo模块</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//以下命令分别执行即可</span><br><span class="line">npm install -g npm-check     //安装npm-check</span><br><span class="line">npm-check                    //查看系统插件是否需要升级</span><br><span class="line">npm install -g npm-upgrade   //安装npm-upgrade</span><br><span class="line">npm-upgrade        //更新package.json</span><br><span class="line">//在执行npm-upgrade命令后会要求输入yes或者no，直接输入Yes或Y即可</span><br><span class="line">npm update -g      //更新全局插件</span><br><span class="line">npm update --save  //更新系统插件</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 破事水 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/04/19/home/"/>
      <url>/2022/04/19/home/</url>
      
        <content type="html"><![CDATA[<h1 id="用来记录一些琐事的内容"><a href="#用来记录一些琐事的内容" class="headerlink" title="用来记录一些琐事的内容."></a>用来记录一些琐事的内容.</h1><p>摆烂躺平人的破事水 , 書寫與筆記</p><p><img data-src="/../img/home/image-20220426225138457.png"></p><span id="more"></span><h2 id="主要记录内容"><a href="#主要记录内容" class="headerlink" title="主要记录内容?"></a>主要记录内容?</h2><p>关于 技术, 美术, 游戏技术 , 光学, 摄影, 色彩科学, 民间杂谈 等</p><h2 id="游戲技術與美術技術的分享"><a href="#游戲技術與美術技術的分享" class="headerlink" title="游戲技術與美術技術的分享?"></a>游戲技術與美術技術的分享?</h2><p>隨緣</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
